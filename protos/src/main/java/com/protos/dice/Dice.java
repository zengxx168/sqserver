// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dice.proto

package com.protos.dice;

public final class Dice {
  private Dice() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PlayerRollTheDiceREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.dice.PlayerRollTheDiceREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *投掷方式 1 普通投掷(需要消耗投掷次数) 2 元宝投资(不需要消耗元宝次数)
     * </pre>
     *
     * <code>uint32 diceType = 1;</code>
     */
    int getDiceType();
  }
  /**
   * <pre>
   *玩家投掷骰子请求
   * </pre>
   *
   * Protobuf type {@code com.protos.dice.PlayerRollTheDiceREQ}
   */
  public  static final class PlayerRollTheDiceREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.dice.PlayerRollTheDiceREQ)
      PlayerRollTheDiceREQOrBuilder {
    // Use PlayerRollTheDiceREQ.newBuilder() to construct.
    private PlayerRollTheDiceREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerRollTheDiceREQ() {
      diceType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PlayerRollTheDiceREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              diceType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerRollTheDiceREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerRollTheDiceREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.dice.Dice.PlayerRollTheDiceREQ.class, com.protos.dice.Dice.PlayerRollTheDiceREQ.Builder.class);
    }

    public static final int DICETYPE_FIELD_NUMBER = 1;
    private int diceType_;
    /**
     * <pre>
     *投掷方式 1 普通投掷(需要消耗投掷次数) 2 元宝投资(不需要消耗元宝次数)
     * </pre>
     *
     * <code>uint32 diceType = 1;</code>
     */
    public int getDiceType() {
      return diceType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (diceType_ != 0) {
        output.writeUInt32(1, diceType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (diceType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, diceType_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.dice.Dice.PlayerRollTheDiceREQ)) {
        return super.equals(obj);
      }
      com.protos.dice.Dice.PlayerRollTheDiceREQ other = (com.protos.dice.Dice.PlayerRollTheDiceREQ) obj;

      boolean result = true;
      result = result && (getDiceType()
          == other.getDiceType());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DICETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDiceType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerRollTheDiceREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.dice.Dice.PlayerRollTheDiceREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *玩家投掷骰子请求
     * </pre>
     *
     * Protobuf type {@code com.protos.dice.PlayerRollTheDiceREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.dice.PlayerRollTheDiceREQ)
        com.protos.dice.Dice.PlayerRollTheDiceREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerRollTheDiceREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerRollTheDiceREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.dice.Dice.PlayerRollTheDiceREQ.class, com.protos.dice.Dice.PlayerRollTheDiceREQ.Builder.class);
      }

      // Construct using com.protos.dice.Dice.PlayerRollTheDiceREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        diceType_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerRollTheDiceREQ_descriptor;
      }

      public com.protos.dice.Dice.PlayerRollTheDiceREQ getDefaultInstanceForType() {
        return com.protos.dice.Dice.PlayerRollTheDiceREQ.getDefaultInstance();
      }

      public com.protos.dice.Dice.PlayerRollTheDiceREQ build() {
        com.protos.dice.Dice.PlayerRollTheDiceREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.dice.Dice.PlayerRollTheDiceREQ buildPartial() {
        com.protos.dice.Dice.PlayerRollTheDiceREQ result = new com.protos.dice.Dice.PlayerRollTheDiceREQ(this);
        result.diceType_ = diceType_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.dice.Dice.PlayerRollTheDiceREQ) {
          return mergeFrom((com.protos.dice.Dice.PlayerRollTheDiceREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.dice.Dice.PlayerRollTheDiceREQ other) {
        if (other == com.protos.dice.Dice.PlayerRollTheDiceREQ.getDefaultInstance()) return this;
        if (other.getDiceType() != 0) {
          setDiceType(other.getDiceType());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.dice.Dice.PlayerRollTheDiceREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.dice.Dice.PlayerRollTheDiceREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int diceType_ ;
      /**
       * <pre>
       *投掷方式 1 普通投掷(需要消耗投掷次数) 2 元宝投资(不需要消耗元宝次数)
       * </pre>
       *
       * <code>uint32 diceType = 1;</code>
       */
      public int getDiceType() {
        return diceType_;
      }
      /**
       * <pre>
       *投掷方式 1 普通投掷(需要消耗投掷次数) 2 元宝投资(不需要消耗元宝次数)
       * </pre>
       *
       * <code>uint32 diceType = 1;</code>
       */
      public Builder setDiceType(int value) {
        
        diceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *投掷方式 1 普通投掷(需要消耗投掷次数) 2 元宝投资(不需要消耗元宝次数)
       * </pre>
       *
       * <code>uint32 diceType = 1;</code>
       */
      public Builder clearDiceType() {
        
        diceType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.dice.PlayerRollTheDiceREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.dice.PlayerRollTheDiceREQ)
    private static final com.protos.dice.Dice.PlayerRollTheDiceREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.dice.Dice.PlayerRollTheDiceREQ();
    }

    public static com.protos.dice.Dice.PlayerRollTheDiceREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerRollTheDiceREQ>
        PARSER = new com.google.protobuf.AbstractParser<PlayerRollTheDiceREQ>() {
      public PlayerRollTheDiceREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerRollTheDiceREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerRollTheDiceREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerRollTheDiceREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.dice.Dice.PlayerRollTheDiceREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerDiceDataREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.dice.PlayerDiceDataREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *我也不知道有啥用	
     * </pre>
     *
     * <code>uint32 diceType = 1;</code>
     */
    int getDiceType();
  }
  /**
   * <pre>
   *请求玩家数据
   * </pre>
   *
   * Protobuf type {@code com.protos.dice.PlayerDiceDataREQ}
   */
  public  static final class PlayerDiceDataREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.dice.PlayerDiceDataREQ)
      PlayerDiceDataREQOrBuilder {
    // Use PlayerDiceDataREQ.newBuilder() to construct.
    private PlayerDiceDataREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerDiceDataREQ() {
      diceType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PlayerDiceDataREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              diceType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.dice.Dice.PlayerDiceDataREQ.class, com.protos.dice.Dice.PlayerDiceDataREQ.Builder.class);
    }

    public static final int DICETYPE_FIELD_NUMBER = 1;
    private int diceType_;
    /**
     * <pre>
     *我也不知道有啥用	
     * </pre>
     *
     * <code>uint32 diceType = 1;</code>
     */
    public int getDiceType() {
      return diceType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (diceType_ != 0) {
        output.writeUInt32(1, diceType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (diceType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, diceType_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.dice.Dice.PlayerDiceDataREQ)) {
        return super.equals(obj);
      }
      com.protos.dice.Dice.PlayerDiceDataREQ other = (com.protos.dice.Dice.PlayerDiceDataREQ) obj;

      boolean result = true;
      result = result && (getDiceType()
          == other.getDiceType());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DICETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDiceType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceDataREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.dice.Dice.PlayerDiceDataREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *请求玩家数据
     * </pre>
     *
     * Protobuf type {@code com.protos.dice.PlayerDiceDataREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.dice.PlayerDiceDataREQ)
        com.protos.dice.Dice.PlayerDiceDataREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.dice.Dice.PlayerDiceDataREQ.class, com.protos.dice.Dice.PlayerDiceDataREQ.Builder.class);
      }

      // Construct using com.protos.dice.Dice.PlayerDiceDataREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        diceType_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataREQ_descriptor;
      }

      public com.protos.dice.Dice.PlayerDiceDataREQ getDefaultInstanceForType() {
        return com.protos.dice.Dice.PlayerDiceDataREQ.getDefaultInstance();
      }

      public com.protos.dice.Dice.PlayerDiceDataREQ build() {
        com.protos.dice.Dice.PlayerDiceDataREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.dice.Dice.PlayerDiceDataREQ buildPartial() {
        com.protos.dice.Dice.PlayerDiceDataREQ result = new com.protos.dice.Dice.PlayerDiceDataREQ(this);
        result.diceType_ = diceType_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.dice.Dice.PlayerDiceDataREQ) {
          return mergeFrom((com.protos.dice.Dice.PlayerDiceDataREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.dice.Dice.PlayerDiceDataREQ other) {
        if (other == com.protos.dice.Dice.PlayerDiceDataREQ.getDefaultInstance()) return this;
        if (other.getDiceType() != 0) {
          setDiceType(other.getDiceType());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.dice.Dice.PlayerDiceDataREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.dice.Dice.PlayerDiceDataREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int diceType_ ;
      /**
       * <pre>
       *我也不知道有啥用	
       * </pre>
       *
       * <code>uint32 diceType = 1;</code>
       */
      public int getDiceType() {
        return diceType_;
      }
      /**
       * <pre>
       *我也不知道有啥用	
       * </pre>
       *
       * <code>uint32 diceType = 1;</code>
       */
      public Builder setDiceType(int value) {
        
        diceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *我也不知道有啥用	
       * </pre>
       *
       * <code>uint32 diceType = 1;</code>
       */
      public Builder clearDiceType() {
        
        diceType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.dice.PlayerDiceDataREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.dice.PlayerDiceDataREQ)
    private static final com.protos.dice.Dice.PlayerDiceDataREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.dice.Dice.PlayerDiceDataREQ();
    }

    public static com.protos.dice.Dice.PlayerDiceDataREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerDiceDataREQ>
        PARSER = new com.google.protobuf.AbstractParser<PlayerDiceDataREQ>() {
      public PlayerDiceDataREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerDiceDataREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerDiceDataREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerDiceDataREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.dice.Dice.PlayerDiceDataREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerDiceDataACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.dice.PlayerDiceDataACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *剩余免费次数
     * </pre>
     *
     * <code>uint32 freeNum = 1;</code>
     */
    int getFreeNum();

    /**
     * <pre>
     *今日购买次数
     * </pre>
     *
     * <code>uint32 buyTime = 2;</code>
     */
    int getBuyTime();

    /**
     * <pre>
     *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
     * </pre>
     *
     * <code>repeated uint32 eachStepList = 3;</code>
     */
    java.util.List<java.lang.Integer> getEachStepListList();
    /**
     * <pre>
     *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
     * </pre>
     *
     * <code>repeated uint32 eachStepList = 3;</code>
     */
    int getEachStepListCount();
    /**
     * <pre>
     *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
     * </pre>
     *
     * <code>repeated uint32 eachStepList = 3;</code>
     */
    int getEachStepList(int index);
  }
  /**
   * <pre>
   *返回玩家数据
   * </pre>
   *
   * Protobuf type {@code com.protos.dice.PlayerDiceDataACK}
   */
  public  static final class PlayerDiceDataACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.dice.PlayerDiceDataACK)
      PlayerDiceDataACKOrBuilder {
    // Use PlayerDiceDataACK.newBuilder() to construct.
    private PlayerDiceDataACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerDiceDataACK() {
      freeNum_ = 0;
      buyTime_ = 0;
      eachStepList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PlayerDiceDataACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              freeNum_ = input.readUInt32();
              break;
            }
            case 16: {

              buyTime_ = input.readUInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                eachStepList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              eachStepList_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                eachStepList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                eachStepList_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          eachStepList_ = java.util.Collections.unmodifiableList(eachStepList_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataACK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.dice.Dice.PlayerDiceDataACK.class, com.protos.dice.Dice.PlayerDiceDataACK.Builder.class);
    }

    private int bitField0_;
    public static final int FREENUM_FIELD_NUMBER = 1;
    private int freeNum_;
    /**
     * <pre>
     *剩余免费次数
     * </pre>
     *
     * <code>uint32 freeNum = 1;</code>
     */
    public int getFreeNum() {
      return freeNum_;
    }

    public static final int BUYTIME_FIELD_NUMBER = 2;
    private int buyTime_;
    /**
     * <pre>
     *今日购买次数
     * </pre>
     *
     * <code>uint32 buyTime = 2;</code>
     */
    public int getBuyTime() {
      return buyTime_;
    }

    public static final int EACHSTEPLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> eachStepList_;
    /**
     * <pre>
     *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
     * </pre>
     *
     * <code>repeated uint32 eachStepList = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getEachStepListList() {
      return eachStepList_;
    }
    /**
     * <pre>
     *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
     * </pre>
     *
     * <code>repeated uint32 eachStepList = 3;</code>
     */
    public int getEachStepListCount() {
      return eachStepList_.size();
    }
    /**
     * <pre>
     *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
     * </pre>
     *
     * <code>repeated uint32 eachStepList = 3;</code>
     */
    public int getEachStepList(int index) {
      return eachStepList_.get(index);
    }
    private int eachStepListMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (freeNum_ != 0) {
        output.writeUInt32(1, freeNum_);
      }
      if (buyTime_ != 0) {
        output.writeUInt32(2, buyTime_);
      }
      if (getEachStepListList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(eachStepListMemoizedSerializedSize);
      }
      for (int i = 0; i < eachStepList_.size(); i++) {
        output.writeUInt32NoTag(eachStepList_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (freeNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, freeNum_);
      }
      if (buyTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, buyTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < eachStepList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(eachStepList_.get(i));
        }
        size += dataSize;
        if (!getEachStepListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        eachStepListMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.dice.Dice.PlayerDiceDataACK)) {
        return super.equals(obj);
      }
      com.protos.dice.Dice.PlayerDiceDataACK other = (com.protos.dice.Dice.PlayerDiceDataACK) obj;

      boolean result = true;
      result = result && (getFreeNum()
          == other.getFreeNum());
      result = result && (getBuyTime()
          == other.getBuyTime());
      result = result && getEachStepListList()
          .equals(other.getEachStepListList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FREENUM_FIELD_NUMBER;
      hash = (53 * hash) + getFreeNum();
      hash = (37 * hash) + BUYTIME_FIELD_NUMBER;
      hash = (53 * hash) + getBuyTime();
      if (getEachStepListCount() > 0) {
        hash = (37 * hash) + EACHSTEPLIST_FIELD_NUMBER;
        hash = (53 * hash) + getEachStepListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceDataACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.dice.Dice.PlayerDiceDataACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *返回玩家数据
     * </pre>
     *
     * Protobuf type {@code com.protos.dice.PlayerDiceDataACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.dice.PlayerDiceDataACK)
        com.protos.dice.Dice.PlayerDiceDataACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataACK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.dice.Dice.PlayerDiceDataACK.class, com.protos.dice.Dice.PlayerDiceDataACK.Builder.class);
      }

      // Construct using com.protos.dice.Dice.PlayerDiceDataACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        freeNum_ = 0;

        buyTime_ = 0;

        eachStepList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceDataACK_descriptor;
      }

      public com.protos.dice.Dice.PlayerDiceDataACK getDefaultInstanceForType() {
        return com.protos.dice.Dice.PlayerDiceDataACK.getDefaultInstance();
      }

      public com.protos.dice.Dice.PlayerDiceDataACK build() {
        com.protos.dice.Dice.PlayerDiceDataACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.dice.Dice.PlayerDiceDataACK buildPartial() {
        com.protos.dice.Dice.PlayerDiceDataACK result = new com.protos.dice.Dice.PlayerDiceDataACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.freeNum_ = freeNum_;
        result.buyTime_ = buyTime_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          eachStepList_ = java.util.Collections.unmodifiableList(eachStepList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.eachStepList_ = eachStepList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.dice.Dice.PlayerDiceDataACK) {
          return mergeFrom((com.protos.dice.Dice.PlayerDiceDataACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.dice.Dice.PlayerDiceDataACK other) {
        if (other == com.protos.dice.Dice.PlayerDiceDataACK.getDefaultInstance()) return this;
        if (other.getFreeNum() != 0) {
          setFreeNum(other.getFreeNum());
        }
        if (other.getBuyTime() != 0) {
          setBuyTime(other.getBuyTime());
        }
        if (!other.eachStepList_.isEmpty()) {
          if (eachStepList_.isEmpty()) {
            eachStepList_ = other.eachStepList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEachStepListIsMutable();
            eachStepList_.addAll(other.eachStepList_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.dice.Dice.PlayerDiceDataACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.dice.Dice.PlayerDiceDataACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int freeNum_ ;
      /**
       * <pre>
       *剩余免费次数
       * </pre>
       *
       * <code>uint32 freeNum = 1;</code>
       */
      public int getFreeNum() {
        return freeNum_;
      }
      /**
       * <pre>
       *剩余免费次数
       * </pre>
       *
       * <code>uint32 freeNum = 1;</code>
       */
      public Builder setFreeNum(int value) {
        
        freeNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *剩余免费次数
       * </pre>
       *
       * <code>uint32 freeNum = 1;</code>
       */
      public Builder clearFreeNum() {
        
        freeNum_ = 0;
        onChanged();
        return this;
      }

      private int buyTime_ ;
      /**
       * <pre>
       *今日购买次数
       * </pre>
       *
       * <code>uint32 buyTime = 2;</code>
       */
      public int getBuyTime() {
        return buyTime_;
      }
      /**
       * <pre>
       *今日购买次数
       * </pre>
       *
       * <code>uint32 buyTime = 2;</code>
       */
      public Builder setBuyTime(int value) {
        
        buyTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今日购买次数
       * </pre>
       *
       * <code>uint32 buyTime = 2;</code>
       */
      public Builder clearBuyTime() {
        
        buyTime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> eachStepList_ = java.util.Collections.emptyList();
      private void ensureEachStepListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          eachStepList_ = new java.util.ArrayList<java.lang.Integer>(eachStepList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
       * </pre>
       *
       * <code>repeated uint32 eachStepList = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getEachStepListList() {
        return java.util.Collections.unmodifiableList(eachStepList_);
      }
      /**
       * <pre>
       *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
       * </pre>
       *
       * <code>repeated uint32 eachStepList = 3;</code>
       */
      public int getEachStepListCount() {
        return eachStepList_.size();
      }
      /**
       * <pre>
       *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
       * </pre>
       *
       * <code>repeated uint32 eachStepList = 3;</code>
       */
      public int getEachStepList(int index) {
        return eachStepList_.get(index);
      }
      /**
       * <pre>
       *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
       * </pre>
       *
       * <code>repeated uint32 eachStepList = 3;</code>
       */
      public Builder setEachStepList(
          int index, int value) {
        ensureEachStepListIsMutable();
        eachStepList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
       * </pre>
       *
       * <code>repeated uint32 eachStepList = 3;</code>
       */
      public Builder addEachStepList(int value) {
        ensureEachStepListIsMutable();
        eachStepList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
       * </pre>
       *
       * <code>repeated uint32 eachStepList = 3;</code>
       */
      public Builder addAllEachStepList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEachStepListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, eachStepList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家本次行走的记录,初始化为玩家原始下标:[1],移动会带上下标:[1,5,2],
       * </pre>
       *
       * <code>repeated uint32 eachStepList = 3;</code>
       */
      public Builder clearEachStepList() {
        eachStepList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.dice.PlayerDiceDataACK)
    }

    // @@protoc_insertion_point(class_scope:com.protos.dice.PlayerDiceDataACK)
    private static final com.protos.dice.Dice.PlayerDiceDataACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.dice.Dice.PlayerDiceDataACK();
    }

    public static com.protos.dice.Dice.PlayerDiceDataACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerDiceDataACK>
        PARSER = new com.google.protobuf.AbstractParser<PlayerDiceDataACK>() {
      public PlayerDiceDataACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerDiceDataACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerDiceDataACK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerDiceDataACK> getParserForType() {
      return PARSER;
    }

    public com.protos.dice.Dice.PlayerDiceDataACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerDiceHistoryACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.dice.PlayerDiceHistoryACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *发送的类型  1全部2更新
     * </pre>
     *
     * <code>uint32 sendType = 1;</code>
     */
    int getSendType();

    /**
     * <pre>
     *玩家的寻迹历史      
     * </pre>
     *
     * <code>repeated uint32 history = 2;</code>
     */
    java.util.List<java.lang.Integer> getHistoryList();
    /**
     * <pre>
     *玩家的寻迹历史      
     * </pre>
     *
     * <code>repeated uint32 history = 2;</code>
     */
    int getHistoryCount();
    /**
     * <pre>
     *玩家的寻迹历史      
     * </pre>
     *
     * <code>repeated uint32 history = 2;</code>
     */
    int getHistory(int index);
  }
  /**
   * <pre>
   *玩家寻迹历史
   * </pre>
   *
   * Protobuf type {@code com.protos.dice.PlayerDiceHistoryACK}
   */
  public  static final class PlayerDiceHistoryACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.dice.PlayerDiceHistoryACK)
      PlayerDiceHistoryACKOrBuilder {
    // Use PlayerDiceHistoryACK.newBuilder() to construct.
    private PlayerDiceHistoryACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerDiceHistoryACK() {
      sendType_ = 0;
      history_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PlayerDiceHistoryACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              sendType_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                history_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              history_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                history_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                history_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          history_ = java.util.Collections.unmodifiableList(history_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceHistoryACK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceHistoryACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.dice.Dice.PlayerDiceHistoryACK.class, com.protos.dice.Dice.PlayerDiceHistoryACK.Builder.class);
    }

    private int bitField0_;
    public static final int SENDTYPE_FIELD_NUMBER = 1;
    private int sendType_;
    /**
     * <pre>
     *发送的类型  1全部2更新
     * </pre>
     *
     * <code>uint32 sendType = 1;</code>
     */
    public int getSendType() {
      return sendType_;
    }

    public static final int HISTORY_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> history_;
    /**
     * <pre>
     *玩家的寻迹历史      
     * </pre>
     *
     * <code>repeated uint32 history = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getHistoryList() {
      return history_;
    }
    /**
     * <pre>
     *玩家的寻迹历史      
     * </pre>
     *
     * <code>repeated uint32 history = 2;</code>
     */
    public int getHistoryCount() {
      return history_.size();
    }
    /**
     * <pre>
     *玩家的寻迹历史      
     * </pre>
     *
     * <code>repeated uint32 history = 2;</code>
     */
    public int getHistory(int index) {
      return history_.get(index);
    }
    private int historyMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (sendType_ != 0) {
        output.writeUInt32(1, sendType_);
      }
      if (getHistoryList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(historyMemoizedSerializedSize);
      }
      for (int i = 0; i < history_.size(); i++) {
        output.writeUInt32NoTag(history_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sendType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sendType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < history_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(history_.get(i));
        }
        size += dataSize;
        if (!getHistoryList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        historyMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.dice.Dice.PlayerDiceHistoryACK)) {
        return super.equals(obj);
      }
      com.protos.dice.Dice.PlayerDiceHistoryACK other = (com.protos.dice.Dice.PlayerDiceHistoryACK) obj;

      boolean result = true;
      result = result && (getSendType()
          == other.getSendType());
      result = result && getHistoryList()
          .equals(other.getHistoryList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SENDTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSendType();
      if (getHistoryCount() > 0) {
        hash = (37 * hash) + HISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getHistoryList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceHistoryACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.dice.Dice.PlayerDiceHistoryACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *玩家寻迹历史
     * </pre>
     *
     * Protobuf type {@code com.protos.dice.PlayerDiceHistoryACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.dice.PlayerDiceHistoryACK)
        com.protos.dice.Dice.PlayerDiceHistoryACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceHistoryACK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceHistoryACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.dice.Dice.PlayerDiceHistoryACK.class, com.protos.dice.Dice.PlayerDiceHistoryACK.Builder.class);
      }

      // Construct using com.protos.dice.Dice.PlayerDiceHistoryACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sendType_ = 0;

        history_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceHistoryACK_descriptor;
      }

      public com.protos.dice.Dice.PlayerDiceHistoryACK getDefaultInstanceForType() {
        return com.protos.dice.Dice.PlayerDiceHistoryACK.getDefaultInstance();
      }

      public com.protos.dice.Dice.PlayerDiceHistoryACK build() {
        com.protos.dice.Dice.PlayerDiceHistoryACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.dice.Dice.PlayerDiceHistoryACK buildPartial() {
        com.protos.dice.Dice.PlayerDiceHistoryACK result = new com.protos.dice.Dice.PlayerDiceHistoryACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.sendType_ = sendType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          history_ = java.util.Collections.unmodifiableList(history_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.history_ = history_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.dice.Dice.PlayerDiceHistoryACK) {
          return mergeFrom((com.protos.dice.Dice.PlayerDiceHistoryACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.dice.Dice.PlayerDiceHistoryACK other) {
        if (other == com.protos.dice.Dice.PlayerDiceHistoryACK.getDefaultInstance()) return this;
        if (other.getSendType() != 0) {
          setSendType(other.getSendType());
        }
        if (!other.history_.isEmpty()) {
          if (history_.isEmpty()) {
            history_ = other.history_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHistoryIsMutable();
            history_.addAll(other.history_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.dice.Dice.PlayerDiceHistoryACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.dice.Dice.PlayerDiceHistoryACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sendType_ ;
      /**
       * <pre>
       *发送的类型  1全部2更新
       * </pre>
       *
       * <code>uint32 sendType = 1;</code>
       */
      public int getSendType() {
        return sendType_;
      }
      /**
       * <pre>
       *发送的类型  1全部2更新
       * </pre>
       *
       * <code>uint32 sendType = 1;</code>
       */
      public Builder setSendType(int value) {
        
        sendType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发送的类型  1全部2更新
       * </pre>
       *
       * <code>uint32 sendType = 1;</code>
       */
      public Builder clearSendType() {
        
        sendType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> history_ = java.util.Collections.emptyList();
      private void ensureHistoryIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          history_ = new java.util.ArrayList<java.lang.Integer>(history_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *玩家的寻迹历史      
       * </pre>
       *
       * <code>repeated uint32 history = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getHistoryList() {
        return java.util.Collections.unmodifiableList(history_);
      }
      /**
       * <pre>
       *玩家的寻迹历史      
       * </pre>
       *
       * <code>repeated uint32 history = 2;</code>
       */
      public int getHistoryCount() {
        return history_.size();
      }
      /**
       * <pre>
       *玩家的寻迹历史      
       * </pre>
       *
       * <code>repeated uint32 history = 2;</code>
       */
      public int getHistory(int index) {
        return history_.get(index);
      }
      /**
       * <pre>
       *玩家的寻迹历史      
       * </pre>
       *
       * <code>repeated uint32 history = 2;</code>
       */
      public Builder setHistory(
          int index, int value) {
        ensureHistoryIsMutable();
        history_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家的寻迹历史      
       * </pre>
       *
       * <code>repeated uint32 history = 2;</code>
       */
      public Builder addHistory(int value) {
        ensureHistoryIsMutable();
        history_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家的寻迹历史      
       * </pre>
       *
       * <code>repeated uint32 history = 2;</code>
       */
      public Builder addAllHistory(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHistoryIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, history_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家的寻迹历史      
       * </pre>
       *
       * <code>repeated uint32 history = 2;</code>
       */
      public Builder clearHistory() {
        history_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.dice.PlayerDiceHistoryACK)
    }

    // @@protoc_insertion_point(class_scope:com.protos.dice.PlayerDiceHistoryACK)
    private static final com.protos.dice.Dice.PlayerDiceHistoryACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.dice.Dice.PlayerDiceHistoryACK();
    }

    public static com.protos.dice.Dice.PlayerDiceHistoryACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerDiceHistoryACK>
        PARSER = new com.google.protobuf.AbstractParser<PlayerDiceHistoryACK>() {
      public PlayerDiceHistoryACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerDiceHistoryACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerDiceHistoryACK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerDiceHistoryACK> getParserForType() {
      return PARSER;
    }

    public com.protos.dice.Dice.PlayerDiceHistoryACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerDiceChallengeBossREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.dice.PlayerDiceChallengeBossREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *我也不知道有啥用	
     * </pre>
     *
     * <code>uint32 sendType = 1;</code>
     */
    int getSendType();
  }
  /**
   * <pre>
   *玩家挑战boss
   * </pre>
   *
   * Protobuf type {@code com.protos.dice.PlayerDiceChallengeBossREQ}
   */
  public  static final class PlayerDiceChallengeBossREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.dice.PlayerDiceChallengeBossREQ)
      PlayerDiceChallengeBossREQOrBuilder {
    // Use PlayerDiceChallengeBossREQ.newBuilder() to construct.
    private PlayerDiceChallengeBossREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerDiceChallengeBossREQ() {
      sendType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PlayerDiceChallengeBossREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              sendType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.dice.Dice.PlayerDiceChallengeBossREQ.class, com.protos.dice.Dice.PlayerDiceChallengeBossREQ.Builder.class);
    }

    public static final int SENDTYPE_FIELD_NUMBER = 1;
    private int sendType_;
    /**
     * <pre>
     *我也不知道有啥用	
     * </pre>
     *
     * <code>uint32 sendType = 1;</code>
     */
    public int getSendType() {
      return sendType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sendType_ != 0) {
        output.writeUInt32(1, sendType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sendType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sendType_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.dice.Dice.PlayerDiceChallengeBossREQ)) {
        return super.equals(obj);
      }
      com.protos.dice.Dice.PlayerDiceChallengeBossREQ other = (com.protos.dice.Dice.PlayerDiceChallengeBossREQ) obj;

      boolean result = true;
      result = result && (getSendType()
          == other.getSendType());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SENDTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSendType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.dice.Dice.PlayerDiceChallengeBossREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *玩家挑战boss
     * </pre>
     *
     * Protobuf type {@code com.protos.dice.PlayerDiceChallengeBossREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.dice.PlayerDiceChallengeBossREQ)
        com.protos.dice.Dice.PlayerDiceChallengeBossREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.dice.Dice.PlayerDiceChallengeBossREQ.class, com.protos.dice.Dice.PlayerDiceChallengeBossREQ.Builder.class);
      }

      // Construct using com.protos.dice.Dice.PlayerDiceChallengeBossREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sendType_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.dice.Dice.internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_descriptor;
      }

      public com.protos.dice.Dice.PlayerDiceChallengeBossREQ getDefaultInstanceForType() {
        return com.protos.dice.Dice.PlayerDiceChallengeBossREQ.getDefaultInstance();
      }

      public com.protos.dice.Dice.PlayerDiceChallengeBossREQ build() {
        com.protos.dice.Dice.PlayerDiceChallengeBossREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.dice.Dice.PlayerDiceChallengeBossREQ buildPartial() {
        com.protos.dice.Dice.PlayerDiceChallengeBossREQ result = new com.protos.dice.Dice.PlayerDiceChallengeBossREQ(this);
        result.sendType_ = sendType_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.dice.Dice.PlayerDiceChallengeBossREQ) {
          return mergeFrom((com.protos.dice.Dice.PlayerDiceChallengeBossREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.dice.Dice.PlayerDiceChallengeBossREQ other) {
        if (other == com.protos.dice.Dice.PlayerDiceChallengeBossREQ.getDefaultInstance()) return this;
        if (other.getSendType() != 0) {
          setSendType(other.getSendType());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.dice.Dice.PlayerDiceChallengeBossREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.dice.Dice.PlayerDiceChallengeBossREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int sendType_ ;
      /**
       * <pre>
       *我也不知道有啥用	
       * </pre>
       *
       * <code>uint32 sendType = 1;</code>
       */
      public int getSendType() {
        return sendType_;
      }
      /**
       * <pre>
       *我也不知道有啥用	
       * </pre>
       *
       * <code>uint32 sendType = 1;</code>
       */
      public Builder setSendType(int value) {
        
        sendType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *我也不知道有啥用	
       * </pre>
       *
       * <code>uint32 sendType = 1;</code>
       */
      public Builder clearSendType() {
        
        sendType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.dice.PlayerDiceChallengeBossREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.dice.PlayerDiceChallengeBossREQ)
    private static final com.protos.dice.Dice.PlayerDiceChallengeBossREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.dice.Dice.PlayerDiceChallengeBossREQ();
    }

    public static com.protos.dice.Dice.PlayerDiceChallengeBossREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerDiceChallengeBossREQ>
        PARSER = new com.google.protobuf.AbstractParser<PlayerDiceChallengeBossREQ>() {
      public PlayerDiceChallengeBossREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerDiceChallengeBossREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerDiceChallengeBossREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerDiceChallengeBossREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.dice.Dice.PlayerDiceChallengeBossREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_dice_PlayerRollTheDiceREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_dice_PlayerRollTheDiceREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_dice_PlayerDiceDataREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_dice_PlayerDiceDataREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_dice_PlayerDiceDataACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_dice_PlayerDiceDataACK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_dice_PlayerDiceHistoryACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_dice_PlayerDiceHistoryACK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ndice.proto\022\017com.protos.dice\"(\n\024PlayerR" +
      "ollTheDiceREQ\022\020\n\010diceType\030\001 \001(\r\"%\n\021Playe" +
      "rDiceDataREQ\022\020\n\010diceType\030\001 \001(\r\"K\n\021Player" +
      "DiceDataACK\022\017\n\007freeNum\030\001 \001(\r\022\017\n\007buyTime\030" +
      "\002 \001(\r\022\024\n\014eachStepList\030\003 \003(\r\"9\n\024PlayerDic" +
      "eHistoryACK\022\020\n\010sendType\030\001 \001(\r\022\017\n\007history" +
      "\030\002 \003(\r\".\n\032PlayerDiceChallengeBossREQ\022\020\n\010" +
      "sendType\030\001 \001(\rb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_protos_dice_PlayerRollTheDiceREQ_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_protos_dice_PlayerRollTheDiceREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_dice_PlayerRollTheDiceREQ_descriptor,
        new java.lang.String[] { "DiceType", });
    internal_static_com_protos_dice_PlayerDiceDataREQ_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_protos_dice_PlayerDiceDataREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_dice_PlayerDiceDataREQ_descriptor,
        new java.lang.String[] { "DiceType", });
    internal_static_com_protos_dice_PlayerDiceDataACK_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_protos_dice_PlayerDiceDataACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_dice_PlayerDiceDataACK_descriptor,
        new java.lang.String[] { "FreeNum", "BuyTime", "EachStepList", });
    internal_static_com_protos_dice_PlayerDiceHistoryACK_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_protos_dice_PlayerDiceHistoryACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_dice_PlayerDiceHistoryACK_descriptor,
        new java.lang.String[] { "SendType", "History", });
    internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_dice_PlayerDiceChallengeBossREQ_descriptor,
        new java.lang.String[] { "SendType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
