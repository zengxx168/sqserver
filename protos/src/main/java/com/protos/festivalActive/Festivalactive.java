// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: festivalactive.proto

package com.protos.festivalActive;

public final class Festivalactive {
  private Festivalactive() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HolidayPuzzleDataREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayPuzzleDataREQ)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   *请求节日拼图玩家数据
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleDataREQ}
   */
  public  static final class HolidayPuzzleDataREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayPuzzleDataREQ)
      HolidayPuzzleDataREQOrBuilder {
    // Use HolidayPuzzleDataREQ.newBuilder() to construct.
    private HolidayPuzzleDataREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayPuzzleDataREQ() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayPuzzleDataREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ other = (com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *请求节日拼图玩家数据
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleDataREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayPuzzleDataREQ)
        com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ build() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ result = new com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayPuzzleDataREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayPuzzleDataREQ)
    private static final com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayPuzzleDataREQ>
        PARSER = new com.google.protobuf.AbstractParser<HolidayPuzzleDataREQ>() {
      public HolidayPuzzleDataREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayPuzzleDataREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayPuzzleDataREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayPuzzleDataREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayPuzzleDataREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayPuzzleDataACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayPuzzleDataACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *活动开启时间
     * </pre>
     *
     * <code>uint32 startTime = 1;</code>
     */
    int getStartTime();

    /**
     * <pre>
     *活动结束时间
     * </pre>
     *
     * <code>uint32 endTime = 2;</code>
     */
    int getEndTime();

    /**
     * <pre>
     *玩家的积分
     * </pre>
     *
     * <code>uint32 points = 3;</code>
     */
    int getPoints();

    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */
    int getTaskMapCount();
    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */
    boolean containsTaskMap(
        int key);
    /**
     * Use {@link #getTaskMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
    getTaskMap();
    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */
    java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
    getTaskMapMap();
    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */

    com.protos.festivalActive.Festivalactive.TaskInfo getTaskMapOrDefault(
        int key,
        com.protos.festivalActive.Festivalactive.TaskInfo defaultValue);
    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */

    com.protos.festivalActive.Festivalactive.TaskInfo getTaskMapOrThrow(
        int key);

    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> 
        getAwardInfosList();
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    com.protos.festivalActive.Festivalactive.AwardInfo getAwardInfos(int index);
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    int getAwardInfosCount();
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    java.util.List<? extends com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> 
        getAwardInfosOrBuilderList();
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder getAwardInfosOrBuilder(
        int index);
  }
  /**
   * <pre>
   *返回节日拼图玩家数据
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleDataACK}
   */
  public  static final class HolidayPuzzleDataACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayPuzzleDataACK)
      HolidayPuzzleDataACKOrBuilder {
    // Use HolidayPuzzleDataACK.newBuilder() to construct.
    private HolidayPuzzleDataACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayPuzzleDataACK() {
      startTime_ = 0;
      endTime_ = 0;
      points_ = 0;
      awardInfos_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayPuzzleDataACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              startTime_ = input.readUInt32();
              break;
            }
            case 16: {

              endTime_ = input.readUInt32();
              break;
            }
            case 24: {

              points_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                taskMap_ = com.google.protobuf.MapField.newMapField(
                    TaskMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
              taskMap__ = input.readMessage(
                  TaskMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              taskMap_.getMutableMap().put(
                  taskMap__.getKey(), taskMap__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                awardInfos_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.AwardInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              awardInfos_.add(
                  input.readMessage(com.protos.festivalActive.Festivalactive.AwardInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          awardInfos_ = java.util.Collections.unmodifiableList(awardInfos_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetTaskMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK.Builder.class);
    }

    private int bitField0_;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private int startTime_;
    /**
     * <pre>
     *活动开启时间
     * </pre>
     *
     * <code>uint32 startTime = 1;</code>
     */
    public int getStartTime() {
      return startTime_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 2;
    private int endTime_;
    /**
     * <pre>
     *活动结束时间
     * </pre>
     *
     * <code>uint32 endTime = 2;</code>
     */
    public int getEndTime() {
      return endTime_;
    }

    public static final int POINTS_FIELD_NUMBER = 3;
    private int points_;
    /**
     * <pre>
     *玩家的积分
     * </pre>
     *
     * <code>uint32 points = 3;</code>
     */
    public int getPoints() {
      return points_;
    }

    public static final int TASKMAP_FIELD_NUMBER = 4;
    private static final class TaskMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>newDefaultInstance(
                  com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_TaskMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.protos.festivalActive.Festivalactive.TaskInfo.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> taskMap_;
    private com.google.protobuf.MapField<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
    internalGetTaskMap() {
      if (taskMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TaskMapDefaultEntryHolder.defaultEntry);
      }
      return taskMap_;
    }

    public int getTaskMapCount() {
      return internalGetTaskMap().getMap().size();
    }
    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */

    public boolean containsTaskMap(
        int key) {
      
      return internalGetTaskMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTaskMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> getTaskMap() {
      return getTaskMapMap();
    }
    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */

    public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> getTaskMapMap() {
      return internalGetTaskMap().getMap();
    }
    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */

    public com.protos.festivalActive.Festivalactive.TaskInfo getTaskMapOrDefault(
        int key,
        com.protos.festivalActive.Festivalactive.TaskInfo defaultValue) {
      
      java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> map =
          internalGetTaskMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *任务情况
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
     */

    public com.protos.festivalActive.Festivalactive.TaskInfo getTaskMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> map =
          internalGetTaskMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int AWARDINFOS_FIELD_NUMBER = 5;
    private java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> awardInfos_;
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    public java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> getAwardInfosList() {
      return awardInfos_;
    }
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    public java.util.List<? extends com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> 
        getAwardInfosOrBuilderList() {
      return awardInfos_;
    }
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    public int getAwardInfosCount() {
      return awardInfos_.size();
    }
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    public com.protos.festivalActive.Festivalactive.AwardInfo getAwardInfos(int index) {
      return awardInfos_.get(index);
    }
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
     */
    public com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder getAwardInfosOrBuilder(
        int index) {
      return awardInfos_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (startTime_ != 0) {
        output.writeUInt32(1, startTime_);
      }
      if (endTime_ != 0) {
        output.writeUInt32(2, endTime_);
      }
      if (points_ != 0) {
        output.writeUInt32(3, points_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetTaskMap(),
          TaskMapDefaultEntryHolder.defaultEntry,
          4);
      for (int i = 0; i < awardInfos_.size(); i++) {
        output.writeMessage(5, awardInfos_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (startTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, startTime_);
      }
      if (endTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, endTime_);
      }
      if (points_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, points_);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> entry
           : internalGetTaskMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
        taskMap__ = TaskMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, taskMap__);
      }
      for (int i = 0; i < awardInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, awardInfos_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK other = (com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK) obj;

      boolean result = true;
      result = result && (getStartTime()
          == other.getStartTime());
      result = result && (getEndTime()
          == other.getEndTime());
      result = result && (getPoints()
          == other.getPoints());
      result = result && internalGetTaskMap().equals(
          other.internalGetTaskMap());
      result = result && getAwardInfosList()
          .equals(other.getAwardInfosList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime();
      hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime();
      hash = (37 * hash) + POINTS_FIELD_NUMBER;
      hash = (53 * hash) + getPoints();
      if (!internalGetTaskMap().getMap().isEmpty()) {
        hash = (37 * hash) + TASKMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTaskMap().hashCode();
      }
      if (getAwardInfosCount() > 0) {
        hash = (37 * hash) + AWARDINFOS_FIELD_NUMBER;
        hash = (53 * hash) + getAwardInfosList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *返回节日拼图玩家数据
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleDataACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayPuzzleDataACK)
        com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetTaskMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableTaskMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAwardInfosFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        startTime_ = 0;

        endTime_ = 0;

        points_ = 0;

        internalGetMutableTaskMap().clear();
        if (awardInfosBuilder_ == null) {
          awardInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          awardInfosBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK build() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK result = new com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.startTime_ = startTime_;
        result.endTime_ = endTime_;
        result.points_ = points_;
        result.taskMap_ = internalGetTaskMap();
        result.taskMap_.makeImmutable();
        if (awardInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            awardInfos_ = java.util.Collections.unmodifiableList(awardInfos_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.awardInfos_ = awardInfos_;
        } else {
          result.awardInfos_ = awardInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK.getDefaultInstance()) return this;
        if (other.getStartTime() != 0) {
          setStartTime(other.getStartTime());
        }
        if (other.getEndTime() != 0) {
          setEndTime(other.getEndTime());
        }
        if (other.getPoints() != 0) {
          setPoints(other.getPoints());
        }
        internalGetMutableTaskMap().mergeFrom(
            other.internalGetTaskMap());
        if (awardInfosBuilder_ == null) {
          if (!other.awardInfos_.isEmpty()) {
            if (awardInfos_.isEmpty()) {
              awardInfos_ = other.awardInfos_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureAwardInfosIsMutable();
              awardInfos_.addAll(other.awardInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.awardInfos_.isEmpty()) {
            if (awardInfosBuilder_.isEmpty()) {
              awardInfosBuilder_.dispose();
              awardInfosBuilder_ = null;
              awardInfos_ = other.awardInfos_;
              bitField0_ = (bitField0_ & ~0x00000010);
              awardInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAwardInfosFieldBuilder() : null;
            } else {
              awardInfosBuilder_.addAllMessages(other.awardInfos_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int startTime_ ;
      /**
       * <pre>
       *活动开启时间
       * </pre>
       *
       * <code>uint32 startTime = 1;</code>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <pre>
       *活动开启时间
       * </pre>
       *
       * <code>uint32 startTime = 1;</code>
       */
      public Builder setStartTime(int value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *活动开启时间
       * </pre>
       *
       * <code>uint32 startTime = 1;</code>
       */
      public Builder clearStartTime() {
        
        startTime_ = 0;
        onChanged();
        return this;
      }

      private int endTime_ ;
      /**
       * <pre>
       *活动结束时间
       * </pre>
       *
       * <code>uint32 endTime = 2;</code>
       */
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <pre>
       *活动结束时间
       * </pre>
       *
       * <code>uint32 endTime = 2;</code>
       */
      public Builder setEndTime(int value) {
        
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *活动结束时间
       * </pre>
       *
       * <code>uint32 endTime = 2;</code>
       */
      public Builder clearEndTime() {
        
        endTime_ = 0;
        onChanged();
        return this;
      }

      private int points_ ;
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 3;</code>
       */
      public int getPoints() {
        return points_;
      }
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 3;</code>
       */
      public Builder setPoints(int value) {
        
        points_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 3;</code>
       */
      public Builder clearPoints() {
        
        points_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> taskMap_;
      private com.google.protobuf.MapField<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
      internalGetTaskMap() {
        if (taskMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TaskMapDefaultEntryHolder.defaultEntry);
        }
        return taskMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
      internalGetMutableTaskMap() {
        onChanged();;
        if (taskMap_ == null) {
          taskMap_ = com.google.protobuf.MapField.newMapField(
              TaskMapDefaultEntryHolder.defaultEntry);
        }
        if (!taskMap_.isMutable()) {
          taskMap_ = taskMap_.copy();
        }
        return taskMap_;
      }

      public int getTaskMapCount() {
        return internalGetTaskMap().getMap().size();
      }
      /**
       * <pre>
       *任务情况
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
       */

      public boolean containsTaskMap(
          int key) {
        
        return internalGetTaskMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTaskMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> getTaskMap() {
        return getTaskMapMap();
      }
      /**
       * <pre>
       *任务情况
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
       */

      public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> getTaskMapMap() {
        return internalGetTaskMap().getMap();
      }
      /**
       * <pre>
       *任务情况
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
       */

      public com.protos.festivalActive.Festivalactive.TaskInfo getTaskMapOrDefault(
          int key,
          com.protos.festivalActive.Festivalactive.TaskInfo defaultValue) {
        
        java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> map =
            internalGetTaskMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *任务情况
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
       */

      public com.protos.festivalActive.Festivalactive.TaskInfo getTaskMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> map =
            internalGetTaskMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTaskMap() {
        internalGetMutableTaskMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *任务情况
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
       */

      public Builder removeTaskMap(
          int key) {
        
        internalGetMutableTaskMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
      getMutableTaskMap() {
        return internalGetMutableTaskMap().getMutableMap();
      }
      /**
       * <pre>
       *任务情况
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
       */
      public Builder putTaskMap(
          int key,
          com.protos.festivalActive.Festivalactive.TaskInfo value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTaskMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *任务情况
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; taskMap = 4;</code>
       */

      public Builder putAllTaskMap(
          java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> values) {
        internalGetMutableTaskMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> awardInfos_ =
        java.util.Collections.emptyList();
      private void ensureAwardInfosIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          awardInfos_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.AwardInfo>(awardInfos_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.AwardInfo, com.protos.festivalActive.Festivalactive.AwardInfo.Builder, com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> awardInfosBuilder_;

      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> getAwardInfosList() {
        if (awardInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(awardInfos_);
        } else {
          return awardInfosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public int getAwardInfosCount() {
        if (awardInfosBuilder_ == null) {
          return awardInfos_.size();
        } else {
          return awardInfosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfo getAwardInfos(int index) {
        if (awardInfosBuilder_ == null) {
          return awardInfos_.get(index);
        } else {
          return awardInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder setAwardInfos(
          int index, com.protos.festivalActive.Festivalactive.AwardInfo value) {
        if (awardInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardInfosIsMutable();
          awardInfos_.set(index, value);
          onChanged();
        } else {
          awardInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder setAwardInfos(
          int index, com.protos.festivalActive.Festivalactive.AwardInfo.Builder builderForValue) {
        if (awardInfosBuilder_ == null) {
          ensureAwardInfosIsMutable();
          awardInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          awardInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder addAwardInfos(com.protos.festivalActive.Festivalactive.AwardInfo value) {
        if (awardInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardInfosIsMutable();
          awardInfos_.add(value);
          onChanged();
        } else {
          awardInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder addAwardInfos(
          int index, com.protos.festivalActive.Festivalactive.AwardInfo value) {
        if (awardInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardInfosIsMutable();
          awardInfos_.add(index, value);
          onChanged();
        } else {
          awardInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder addAwardInfos(
          com.protos.festivalActive.Festivalactive.AwardInfo.Builder builderForValue) {
        if (awardInfosBuilder_ == null) {
          ensureAwardInfosIsMutable();
          awardInfos_.add(builderForValue.build());
          onChanged();
        } else {
          awardInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder addAwardInfos(
          int index, com.protos.festivalActive.Festivalactive.AwardInfo.Builder builderForValue) {
        if (awardInfosBuilder_ == null) {
          ensureAwardInfosIsMutable();
          awardInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          awardInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder addAllAwardInfos(
          java.lang.Iterable<? extends com.protos.festivalActive.Festivalactive.AwardInfo> values) {
        if (awardInfosBuilder_ == null) {
          ensureAwardInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, awardInfos_);
          onChanged();
        } else {
          awardInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder clearAwardInfos() {
        if (awardInfosBuilder_ == null) {
          awardInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          awardInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public Builder removeAwardInfos(int index) {
        if (awardInfosBuilder_ == null) {
          ensureAwardInfosIsMutable();
          awardInfos_.remove(index);
          onChanged();
        } else {
          awardInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfo.Builder getAwardInfosBuilder(
          int index) {
        return getAwardInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder getAwardInfosOrBuilder(
          int index) {
        if (awardInfosBuilder_ == null) {
          return awardInfos_.get(index);  } else {
          return awardInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public java.util.List<? extends com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> 
           getAwardInfosOrBuilderList() {
        if (awardInfosBuilder_ != null) {
          return awardInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(awardInfos_);
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfo.Builder addAwardInfosBuilder() {
        return getAwardInfosFieldBuilder().addBuilder(
            com.protos.festivalActive.Festivalactive.AwardInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfo.Builder addAwardInfosBuilder(
          int index) {
        return getAwardInfosFieldBuilder().addBuilder(
            index, com.protos.festivalActive.Festivalactive.AwardInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfos = 5;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo.Builder> 
           getAwardInfosBuilderList() {
        return getAwardInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.AwardInfo, com.protos.festivalActive.Festivalactive.AwardInfo.Builder, com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> 
          getAwardInfosFieldBuilder() {
        if (awardInfosBuilder_ == null) {
          awardInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.protos.festivalActive.Festivalactive.AwardInfo, com.protos.festivalActive.Festivalactive.AwardInfo.Builder, com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder>(
                  awardInfos_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          awardInfos_ = null;
        }
        return awardInfosBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayPuzzleDataACK)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayPuzzleDataACK)
    private static final com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayPuzzleDataACK>
        PARSER = new com.google.protobuf.AbstractParser<HolidayPuzzleDataACK>() {
      public HolidayPuzzleDataACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayPuzzleDataACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayPuzzleDataACK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayPuzzleDataACK> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayPuzzleDataACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AwardInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.AwardInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 awardSite = 1;</code>
     */
    int getAwardSite();

    /**
     * <pre>
     *1可以领取,2已领取
     * </pre>
     *
     * <code>uint32 state = 2;</code>
     */
    int getState();
  }
  /**
   * <pre>
   *奖励信息
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.AwardInfo}
   */
  public  static final class AwardInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.AwardInfo)
      AwardInfoOrBuilder {
    // Use AwardInfo.newBuilder() to construct.
    private AwardInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AwardInfo() {
      awardSite_ = 0;
      state_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AwardInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              awardSite_ = input.readUInt32();
              break;
            }
            case 16: {

              state_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_AwardInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_AwardInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.AwardInfo.class, com.protos.festivalActive.Festivalactive.AwardInfo.Builder.class);
    }

    public static final int AWARDSITE_FIELD_NUMBER = 1;
    private int awardSite_;
    /**
     * <code>uint32 awardSite = 1;</code>
     */
    public int getAwardSite() {
      return awardSite_;
    }

    public static final int STATE_FIELD_NUMBER = 2;
    private int state_;
    /**
     * <pre>
     *1可以领取,2已领取
     * </pre>
     *
     * <code>uint32 state = 2;</code>
     */
    public int getState() {
      return state_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (awardSite_ != 0) {
        output.writeUInt32(1, awardSite_);
      }
      if (state_ != 0) {
        output.writeUInt32(2, state_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (awardSite_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, awardSite_);
      }
      if (state_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, state_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.AwardInfo)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.AwardInfo other = (com.protos.festivalActive.Festivalactive.AwardInfo) obj;

      boolean result = true;
      result = result && (getAwardSite()
          == other.getAwardSite());
      result = result && (getState()
          == other.getState());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AWARDSITE_FIELD_NUMBER;
      hash = (53 * hash) + getAwardSite();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + getState();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.AwardInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.AwardInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *奖励信息
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.AwardInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.AwardInfo)
        com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_AwardInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_AwardInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.AwardInfo.class, com.protos.festivalActive.Festivalactive.AwardInfo.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.AwardInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        awardSite_ = 0;

        state_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_AwardInfo_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.AwardInfo getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.AwardInfo.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.AwardInfo build() {
        com.protos.festivalActive.Festivalactive.AwardInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.AwardInfo buildPartial() {
        com.protos.festivalActive.Festivalactive.AwardInfo result = new com.protos.festivalActive.Festivalactive.AwardInfo(this);
        result.awardSite_ = awardSite_;
        result.state_ = state_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.AwardInfo) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.AwardInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.AwardInfo other) {
        if (other == com.protos.festivalActive.Festivalactive.AwardInfo.getDefaultInstance()) return this;
        if (other.getAwardSite() != 0) {
          setAwardSite(other.getAwardSite());
        }
        if (other.getState() != 0) {
          setState(other.getState());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.AwardInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.AwardInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int awardSite_ ;
      /**
       * <code>uint32 awardSite = 1;</code>
       */
      public int getAwardSite() {
        return awardSite_;
      }
      /**
       * <code>uint32 awardSite = 1;</code>
       */
      public Builder setAwardSite(int value) {
        
        awardSite_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 awardSite = 1;</code>
       */
      public Builder clearAwardSite() {
        
        awardSite_ = 0;
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <pre>
       *1可以领取,2已领取
       * </pre>
       *
       * <code>uint32 state = 2;</code>
       */
      public int getState() {
        return state_;
      }
      /**
       * <pre>
       *1可以领取,2已领取
       * </pre>
       *
       * <code>uint32 state = 2;</code>
       */
      public Builder setState(int value) {
        
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *1可以领取,2已领取
       * </pre>
       *
       * <code>uint32 state = 2;</code>
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.AwardInfo)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.AwardInfo)
    private static final com.protos.festivalActive.Festivalactive.AwardInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.AwardInfo();
    }

    public static com.protos.festivalActive.Festivalactive.AwardInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AwardInfo>
        PARSER = new com.google.protobuf.AbstractParser<AwardInfo>() {
      public AwardInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AwardInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AwardInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AwardInfo> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.AwardInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TaskInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.TaskInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *今日剩余领取次数
     * </pre>
     *
     * <code>uint32 acceptNum = 1;</code>
     */
    int getAcceptNum();

    /**
     * <pre>
     *今日完成进度
     * </pre>
     *
     * <code>uint32 todayComplete = 2;</code>
     */
    int getTodayComplete();

    /**
     * <pre>
     *总领取次数
     * </pre>
     *
     * <code>uint32 allComplete = 3;</code>
     */
    int getAllComplete();
  }
  /**
   * <pre>
   *任务信息
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.TaskInfo}
   */
  public  static final class TaskInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.TaskInfo)
      TaskInfoOrBuilder {
    // Use TaskInfo.newBuilder() to construct.
    private TaskInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TaskInfo() {
      acceptNum_ = 0;
      todayComplete_ = 0;
      allComplete_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TaskInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              acceptNum_ = input.readUInt32();
              break;
            }
            case 16: {

              todayComplete_ = input.readUInt32();
              break;
            }
            case 24: {

              allComplete_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_TaskInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_TaskInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.TaskInfo.class, com.protos.festivalActive.Festivalactive.TaskInfo.Builder.class);
    }

    public static final int ACCEPTNUM_FIELD_NUMBER = 1;
    private int acceptNum_;
    /**
     * <pre>
     *今日剩余领取次数
     * </pre>
     *
     * <code>uint32 acceptNum = 1;</code>
     */
    public int getAcceptNum() {
      return acceptNum_;
    }

    public static final int TODAYCOMPLETE_FIELD_NUMBER = 2;
    private int todayComplete_;
    /**
     * <pre>
     *今日完成进度
     * </pre>
     *
     * <code>uint32 todayComplete = 2;</code>
     */
    public int getTodayComplete() {
      return todayComplete_;
    }

    public static final int ALLCOMPLETE_FIELD_NUMBER = 3;
    private int allComplete_;
    /**
     * <pre>
     *总领取次数
     * </pre>
     *
     * <code>uint32 allComplete = 3;</code>
     */
    public int getAllComplete() {
      return allComplete_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (acceptNum_ != 0) {
        output.writeUInt32(1, acceptNum_);
      }
      if (todayComplete_ != 0) {
        output.writeUInt32(2, todayComplete_);
      }
      if (allComplete_ != 0) {
        output.writeUInt32(3, allComplete_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (acceptNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, acceptNum_);
      }
      if (todayComplete_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, todayComplete_);
      }
      if (allComplete_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, allComplete_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.TaskInfo)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.TaskInfo other = (com.protos.festivalActive.Festivalactive.TaskInfo) obj;

      boolean result = true;
      result = result && (getAcceptNum()
          == other.getAcceptNum());
      result = result && (getTodayComplete()
          == other.getTodayComplete());
      result = result && (getAllComplete()
          == other.getAllComplete());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACCEPTNUM_FIELD_NUMBER;
      hash = (53 * hash) + getAcceptNum();
      hash = (37 * hash) + TODAYCOMPLETE_FIELD_NUMBER;
      hash = (53 * hash) + getTodayComplete();
      hash = (37 * hash) + ALLCOMPLETE_FIELD_NUMBER;
      hash = (53 * hash) + getAllComplete();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.TaskInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.TaskInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *任务信息
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.TaskInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.TaskInfo)
        com.protos.festivalActive.Festivalactive.TaskInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_TaskInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_TaskInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.TaskInfo.class, com.protos.festivalActive.Festivalactive.TaskInfo.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.TaskInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        acceptNum_ = 0;

        todayComplete_ = 0;

        allComplete_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_TaskInfo_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.TaskInfo getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.TaskInfo.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.TaskInfo build() {
        com.protos.festivalActive.Festivalactive.TaskInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.TaskInfo buildPartial() {
        com.protos.festivalActive.Festivalactive.TaskInfo result = new com.protos.festivalActive.Festivalactive.TaskInfo(this);
        result.acceptNum_ = acceptNum_;
        result.todayComplete_ = todayComplete_;
        result.allComplete_ = allComplete_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.TaskInfo) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.TaskInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.TaskInfo other) {
        if (other == com.protos.festivalActive.Festivalactive.TaskInfo.getDefaultInstance()) return this;
        if (other.getAcceptNum() != 0) {
          setAcceptNum(other.getAcceptNum());
        }
        if (other.getTodayComplete() != 0) {
          setTodayComplete(other.getTodayComplete());
        }
        if (other.getAllComplete() != 0) {
          setAllComplete(other.getAllComplete());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.TaskInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.TaskInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int acceptNum_ ;
      /**
       * <pre>
       *今日剩余领取次数
       * </pre>
       *
       * <code>uint32 acceptNum = 1;</code>
       */
      public int getAcceptNum() {
        return acceptNum_;
      }
      /**
       * <pre>
       *今日剩余领取次数
       * </pre>
       *
       * <code>uint32 acceptNum = 1;</code>
       */
      public Builder setAcceptNum(int value) {
        
        acceptNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今日剩余领取次数
       * </pre>
       *
       * <code>uint32 acceptNum = 1;</code>
       */
      public Builder clearAcceptNum() {
        
        acceptNum_ = 0;
        onChanged();
        return this;
      }

      private int todayComplete_ ;
      /**
       * <pre>
       *今日完成进度
       * </pre>
       *
       * <code>uint32 todayComplete = 2;</code>
       */
      public int getTodayComplete() {
        return todayComplete_;
      }
      /**
       * <pre>
       *今日完成进度
       * </pre>
       *
       * <code>uint32 todayComplete = 2;</code>
       */
      public Builder setTodayComplete(int value) {
        
        todayComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今日完成进度
       * </pre>
       *
       * <code>uint32 todayComplete = 2;</code>
       */
      public Builder clearTodayComplete() {
        
        todayComplete_ = 0;
        onChanged();
        return this;
      }

      private int allComplete_ ;
      /**
       * <pre>
       *总领取次数
       * </pre>
       *
       * <code>uint32 allComplete = 3;</code>
       */
      public int getAllComplete() {
        return allComplete_;
      }
      /**
       * <pre>
       *总领取次数
       * </pre>
       *
       * <code>uint32 allComplete = 3;</code>
       */
      public Builder setAllComplete(int value) {
        
        allComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总领取次数
       * </pre>
       *
       * <code>uint32 allComplete = 3;</code>
       */
      public Builder clearAllComplete() {
        
        allComplete_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.TaskInfo)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.TaskInfo)
    private static final com.protos.festivalActive.Festivalactive.TaskInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.TaskInfo();
    }

    public static com.protos.festivalActive.Festivalactive.TaskInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TaskInfo>
        PARSER = new com.google.protobuf.AbstractParser<TaskInfo>() {
      public TaskInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TaskInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TaskInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TaskInfo> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.TaskInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayPuzzleAcceptAwardREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayPuzzleAcceptAwardREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *领取奖励的位置
     * </pre>
     *
     * <code>uint32 awardId = 1;</code>
     */
    int getAwardId();
  }
  /**
   * <pre>
   *请求领取节日拼图奖励
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleAcceptAwardREQ}
   */
  public  static final class HolidayPuzzleAcceptAwardREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayPuzzleAcceptAwardREQ)
      HolidayPuzzleAcceptAwardREQOrBuilder {
    // Use HolidayPuzzleAcceptAwardREQ.newBuilder() to construct.
    private HolidayPuzzleAcceptAwardREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayPuzzleAcceptAwardREQ() {
      awardId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayPuzzleAcceptAwardREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              awardId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ.Builder.class);
    }

    public static final int AWARDID_FIELD_NUMBER = 1;
    private int awardId_;
    /**
     * <pre>
     *领取奖励的位置
     * </pre>
     *
     * <code>uint32 awardId = 1;</code>
     */
    public int getAwardId() {
      return awardId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (awardId_ != 0) {
        output.writeUInt32(1, awardId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (awardId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, awardId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ other = (com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ) obj;

      boolean result = true;
      result = result && (getAwardId()
          == other.getAwardId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AWARDID_FIELD_NUMBER;
      hash = (53 * hash) + getAwardId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *请求领取节日拼图奖励
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleAcceptAwardREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayPuzzleAcceptAwardREQ)
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        awardId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ build() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ result = new com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ(this);
        result.awardId_ = awardId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ.getDefaultInstance()) return this;
        if (other.getAwardId() != 0) {
          setAwardId(other.getAwardId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int awardId_ ;
      /**
       * <pre>
       *领取奖励的位置
       * </pre>
       *
       * <code>uint32 awardId = 1;</code>
       */
      public int getAwardId() {
        return awardId_;
      }
      /**
       * <pre>
       *领取奖励的位置
       * </pre>
       *
       * <code>uint32 awardId = 1;</code>
       */
      public Builder setAwardId(int value) {
        
        awardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *领取奖励的位置
       * </pre>
       *
       * <code>uint32 awardId = 1;</code>
       */
      public Builder clearAwardId() {
        
        awardId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayPuzzleAcceptAwardREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayPuzzleAcceptAwardREQ)
    private static final com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayPuzzleAcceptAwardREQ>
        PARSER = new com.google.protobuf.AbstractParser<HolidayPuzzleAcceptAwardREQ>() {
      public HolidayPuzzleAcceptAwardREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayPuzzleAcceptAwardREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayPuzzleAcceptAwardREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayPuzzleAcceptAwardREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayPuzzleAcceptAwardACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayPuzzleAcceptAwardACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> 
        getAwardInfoList();
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    com.protos.festivalActive.Festivalactive.AwardInfo getAwardInfo(int index);
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    int getAwardInfoCount();
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    java.util.List<? extends com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> 
        getAwardInfoOrBuilderList();
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder getAwardInfoOrBuilder(
        int index);

    /**
     * <pre>
     *玩家的积分
     * </pre>
     *
     * <code>uint32 points = 2;</code>
     */
    int getPoints();
  }
  /**
   * <pre>
   *返回领取节日拼图奖励
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleAcceptAwardACK}
   */
  public  static final class HolidayPuzzleAcceptAwardACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayPuzzleAcceptAwardACK)
      HolidayPuzzleAcceptAwardACKOrBuilder {
    // Use HolidayPuzzleAcceptAwardACK.newBuilder() to construct.
    private HolidayPuzzleAcceptAwardACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayPuzzleAcceptAwardACK() {
      awardInfo_ = java.util.Collections.emptyList();
      points_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayPuzzleAcceptAwardACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                awardInfo_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.AwardInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              awardInfo_.add(
                  input.readMessage(com.protos.festivalActive.Festivalactive.AwardInfo.parser(), extensionRegistry));
              break;
            }
            case 16: {

              points_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          awardInfo_ = java.util.Collections.unmodifiableList(awardInfo_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK.Builder.class);
    }

    private int bitField0_;
    public static final int AWARDINFO_FIELD_NUMBER = 1;
    private java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> awardInfo_;
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    public java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> getAwardInfoList() {
      return awardInfo_;
    }
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    public java.util.List<? extends com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> 
        getAwardInfoOrBuilderList() {
      return awardInfo_;
    }
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    public int getAwardInfoCount() {
      return awardInfo_.size();
    }
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    public com.protos.festivalActive.Festivalactive.AwardInfo getAwardInfo(int index) {
      return awardInfo_.get(index);
    }
    /**
     * <pre>
     *奖励情况
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
     */
    public com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder getAwardInfoOrBuilder(
        int index) {
      return awardInfo_.get(index);
    }

    public static final int POINTS_FIELD_NUMBER = 2;
    private int points_;
    /**
     * <pre>
     *玩家的积分
     * </pre>
     *
     * <code>uint32 points = 2;</code>
     */
    public int getPoints() {
      return points_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < awardInfo_.size(); i++) {
        output.writeMessage(1, awardInfo_.get(i));
      }
      if (points_ != 0) {
        output.writeUInt32(2, points_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < awardInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, awardInfo_.get(i));
      }
      if (points_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, points_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK other = (com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK) obj;

      boolean result = true;
      result = result && getAwardInfoList()
          .equals(other.getAwardInfoList());
      result = result && (getPoints()
          == other.getPoints());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAwardInfoCount() > 0) {
        hash = (37 * hash) + AWARDINFO_FIELD_NUMBER;
        hash = (53 * hash) + getAwardInfoList().hashCode();
      }
      hash = (37 * hash) + POINTS_FIELD_NUMBER;
      hash = (53 * hash) + getPoints();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *返回领取节日拼图奖励
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleAcceptAwardACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayPuzzleAcceptAwardACK)
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAwardInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (awardInfoBuilder_ == null) {
          awardInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          awardInfoBuilder_.clear();
        }
        points_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK build() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK result = new com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (awardInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            awardInfo_ = java.util.Collections.unmodifiableList(awardInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.awardInfo_ = awardInfo_;
        } else {
          result.awardInfo_ = awardInfoBuilder_.build();
        }
        result.points_ = points_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK.getDefaultInstance()) return this;
        if (awardInfoBuilder_ == null) {
          if (!other.awardInfo_.isEmpty()) {
            if (awardInfo_.isEmpty()) {
              awardInfo_ = other.awardInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAwardInfoIsMutable();
              awardInfo_.addAll(other.awardInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.awardInfo_.isEmpty()) {
            if (awardInfoBuilder_.isEmpty()) {
              awardInfoBuilder_.dispose();
              awardInfoBuilder_ = null;
              awardInfo_ = other.awardInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              awardInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAwardInfoFieldBuilder() : null;
            } else {
              awardInfoBuilder_.addAllMessages(other.awardInfo_);
            }
          }
        }
        if (other.getPoints() != 0) {
          setPoints(other.getPoints());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> awardInfo_ =
        java.util.Collections.emptyList();
      private void ensureAwardInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          awardInfo_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.AwardInfo>(awardInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.AwardInfo, com.protos.festivalActive.Festivalactive.AwardInfo.Builder, com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> awardInfoBuilder_;

      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo> getAwardInfoList() {
        if (awardInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(awardInfo_);
        } else {
          return awardInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public int getAwardInfoCount() {
        if (awardInfoBuilder_ == null) {
          return awardInfo_.size();
        } else {
          return awardInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfo getAwardInfo(int index) {
        if (awardInfoBuilder_ == null) {
          return awardInfo_.get(index);
        } else {
          return awardInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder setAwardInfo(
          int index, com.protos.festivalActive.Festivalactive.AwardInfo value) {
        if (awardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardInfoIsMutable();
          awardInfo_.set(index, value);
          onChanged();
        } else {
          awardInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder setAwardInfo(
          int index, com.protos.festivalActive.Festivalactive.AwardInfo.Builder builderForValue) {
        if (awardInfoBuilder_ == null) {
          ensureAwardInfoIsMutable();
          awardInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          awardInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder addAwardInfo(com.protos.festivalActive.Festivalactive.AwardInfo value) {
        if (awardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardInfoIsMutable();
          awardInfo_.add(value);
          onChanged();
        } else {
          awardInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder addAwardInfo(
          int index, com.protos.festivalActive.Festivalactive.AwardInfo value) {
        if (awardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAwardInfoIsMutable();
          awardInfo_.add(index, value);
          onChanged();
        } else {
          awardInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder addAwardInfo(
          com.protos.festivalActive.Festivalactive.AwardInfo.Builder builderForValue) {
        if (awardInfoBuilder_ == null) {
          ensureAwardInfoIsMutable();
          awardInfo_.add(builderForValue.build());
          onChanged();
        } else {
          awardInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder addAwardInfo(
          int index, com.protos.festivalActive.Festivalactive.AwardInfo.Builder builderForValue) {
        if (awardInfoBuilder_ == null) {
          ensureAwardInfoIsMutable();
          awardInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          awardInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder addAllAwardInfo(
          java.lang.Iterable<? extends com.protos.festivalActive.Festivalactive.AwardInfo> values) {
        if (awardInfoBuilder_ == null) {
          ensureAwardInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, awardInfo_);
          onChanged();
        } else {
          awardInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder clearAwardInfo() {
        if (awardInfoBuilder_ == null) {
          awardInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          awardInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public Builder removeAwardInfo(int index) {
        if (awardInfoBuilder_ == null) {
          ensureAwardInfoIsMutable();
          awardInfo_.remove(index);
          onChanged();
        } else {
          awardInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfo.Builder getAwardInfoBuilder(
          int index) {
        return getAwardInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder getAwardInfoOrBuilder(
          int index) {
        if (awardInfoBuilder_ == null) {
          return awardInfo_.get(index);  } else {
          return awardInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public java.util.List<? extends com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> 
           getAwardInfoOrBuilderList() {
        if (awardInfoBuilder_ != null) {
          return awardInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(awardInfo_);
        }
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfo.Builder addAwardInfoBuilder() {
        return getAwardInfoFieldBuilder().addBuilder(
            com.protos.festivalActive.Festivalactive.AwardInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public com.protos.festivalActive.Festivalactive.AwardInfo.Builder addAwardInfoBuilder(
          int index) {
        return getAwardInfoFieldBuilder().addBuilder(
            index, com.protos.festivalActive.Festivalactive.AwardInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *奖励情况
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.AwardInfo awardInfo = 1;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.AwardInfo.Builder> 
           getAwardInfoBuilderList() {
        return getAwardInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.AwardInfo, com.protos.festivalActive.Festivalactive.AwardInfo.Builder, com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder> 
          getAwardInfoFieldBuilder() {
        if (awardInfoBuilder_ == null) {
          awardInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.protos.festivalActive.Festivalactive.AwardInfo, com.protos.festivalActive.Festivalactive.AwardInfo.Builder, com.protos.festivalActive.Festivalactive.AwardInfoOrBuilder>(
                  awardInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          awardInfo_ = null;
        }
        return awardInfoBuilder_;
      }

      private int points_ ;
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 2;</code>
       */
      public int getPoints() {
        return points_;
      }
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 2;</code>
       */
      public Builder setPoints(int value) {
        
        points_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 2;</code>
       */
      public Builder clearPoints() {
        
        points_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayPuzzleAcceptAwardACK)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayPuzzleAcceptAwardACK)
    private static final com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayPuzzleAcceptAwardACK>
        PARSER = new com.google.protobuf.AbstractParser<HolidayPuzzleAcceptAwardACK>() {
      public HolidayPuzzleAcceptAwardACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayPuzzleAcceptAwardACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayPuzzleAcceptAwardACK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayPuzzleAcceptAwardACK> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayPuzzleAcceptAwardACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayPuzzleAccomplishTaskREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayPuzzleAccomplishTaskREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *任务Id
     * </pre>
     *
     * <code>uint32 taskId = 1;</code>
     */
    int getTaskId();
  }
  /**
   * <pre>
   *请求完成节日拼图任务
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleAccomplishTaskREQ}
   */
  public  static final class HolidayPuzzleAccomplishTaskREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayPuzzleAccomplishTaskREQ)
      HolidayPuzzleAccomplishTaskREQOrBuilder {
    // Use HolidayPuzzleAccomplishTaskREQ.newBuilder() to construct.
    private HolidayPuzzleAccomplishTaskREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayPuzzleAccomplishTaskREQ() {
      taskId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayPuzzleAccomplishTaskREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              taskId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ.Builder.class);
    }

    public static final int TASKID_FIELD_NUMBER = 1;
    private int taskId_;
    /**
     * <pre>
     *任务Id
     * </pre>
     *
     * <code>uint32 taskId = 1;</code>
     */
    public int getTaskId() {
      return taskId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (taskId_ != 0) {
        output.writeUInt32(1, taskId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (taskId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, taskId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ other = (com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ) obj;

      boolean result = true;
      result = result && (getTaskId()
          == other.getTaskId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TASKID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *请求完成节日拼图任务
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleAccomplishTaskREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayPuzzleAccomplishTaskREQ)
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        taskId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ build() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ result = new com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ(this);
        result.taskId_ = taskId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ.getDefaultInstance()) return this;
        if (other.getTaskId() != 0) {
          setTaskId(other.getTaskId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int taskId_ ;
      /**
       * <pre>
       *任务Id
       * </pre>
       *
       * <code>uint32 taskId = 1;</code>
       */
      public int getTaskId() {
        return taskId_;
      }
      /**
       * <pre>
       *任务Id
       * </pre>
       *
       * <code>uint32 taskId = 1;</code>
       */
      public Builder setTaskId(int value) {
        
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务Id
       * </pre>
       *
       * <code>uint32 taskId = 1;</code>
       */
      public Builder clearTaskId() {
        
        taskId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayPuzzleAccomplishTaskREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayPuzzleAccomplishTaskREQ)
    private static final com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayPuzzleAccomplishTaskREQ>
        PARSER = new com.google.protobuf.AbstractParser<HolidayPuzzleAccomplishTaskREQ>() {
      public HolidayPuzzleAccomplishTaskREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayPuzzleAccomplishTaskREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayPuzzleAccomplishTaskREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayPuzzleAccomplishTaskREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayPuzzleAccomplishTaskACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayPuzzleAccomplishTaskACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */
    int getUpdateTaskCount();
    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */
    boolean containsUpdateTask(
        int key);
    /**
     * Use {@link #getUpdateTaskMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
    getUpdateTask();
    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */
    java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
    getUpdateTaskMap();
    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */

    com.protos.festivalActive.Festivalactive.TaskInfo getUpdateTaskOrDefault(
        int key,
        com.protos.festivalActive.Festivalactive.TaskInfo defaultValue);
    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */

    com.protos.festivalActive.Festivalactive.TaskInfo getUpdateTaskOrThrow(
        int key);

    /**
     * <pre>
     *玩家的积分
     * </pre>
     *
     * <code>uint32 points = 2;</code>
     */
    int getPoints();
  }
  /**
   * <pre>
   *返回完成节日拼图任务	
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleAccomplishTaskACK}
   */
  public  static final class HolidayPuzzleAccomplishTaskACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayPuzzleAccomplishTaskACK)
      HolidayPuzzleAccomplishTaskACKOrBuilder {
    // Use HolidayPuzzleAccomplishTaskACK.newBuilder() to construct.
    private HolidayPuzzleAccomplishTaskACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayPuzzleAccomplishTaskACK() {
      points_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayPuzzleAccomplishTaskACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                updateTask_ = com.google.protobuf.MapField.newMapField(
                    UpdateTaskDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
              updateTask__ = input.readMessage(
                  UpdateTaskDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              updateTask_.getMutableMap().put(
                  updateTask__.getKey(), updateTask__.getValue());
              break;
            }
            case 16: {

              points_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetUpdateTask();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK.Builder.class);
    }

    private int bitField0_;
    public static final int UPDATETASK_FIELD_NUMBER = 1;
    private static final class UpdateTaskDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>newDefaultInstance(
                  com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_UpdateTaskEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.protos.festivalActive.Festivalactive.TaskInfo.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> updateTask_;
    private com.google.protobuf.MapField<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
    internalGetUpdateTask() {
      if (updateTask_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            UpdateTaskDefaultEntryHolder.defaultEntry);
      }
      return updateTask_;
    }

    public int getUpdateTaskCount() {
      return internalGetUpdateTask().getMap().size();
    }
    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */

    public boolean containsUpdateTask(
        int key) {
      
      return internalGetUpdateTask().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUpdateTaskMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> getUpdateTask() {
      return getUpdateTaskMap();
    }
    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */

    public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> getUpdateTaskMap() {
      return internalGetUpdateTask().getMap();
    }
    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */

    public com.protos.festivalActive.Festivalactive.TaskInfo getUpdateTaskOrDefault(
        int key,
        com.protos.festivalActive.Festivalactive.TaskInfo defaultValue) {
      
      java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> map =
          internalGetUpdateTask().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *更新的任务
     * </pre>
     *
     * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
     */

    public com.protos.festivalActive.Festivalactive.TaskInfo getUpdateTaskOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> map =
          internalGetUpdateTask().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int POINTS_FIELD_NUMBER = 2;
    private int points_;
    /**
     * <pre>
     *玩家的积分
     * </pre>
     *
     * <code>uint32 points = 2;</code>
     */
    public int getPoints() {
      return points_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetUpdateTask(),
          UpdateTaskDefaultEntryHolder.defaultEntry,
          1);
      if (points_ != 0) {
        output.writeUInt32(2, points_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> entry
           : internalGetUpdateTask().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
        updateTask__ = UpdateTaskDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, updateTask__);
      }
      if (points_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, points_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK other = (com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK) obj;

      boolean result = true;
      result = result && internalGetUpdateTask().equals(
          other.internalGetUpdateTask());
      result = result && (getPoints()
          == other.getPoints());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetUpdateTask().getMap().isEmpty()) {
        hash = (37 * hash) + UPDATETASK_FIELD_NUMBER;
        hash = (53 * hash) + internalGetUpdateTask().hashCode();
      }
      hash = (37 * hash) + POINTS_FIELD_NUMBER;
      hash = (53 * hash) + getPoints();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *返回完成节日拼图任务	
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayPuzzleAccomplishTaskACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayPuzzleAccomplishTaskACK)
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetUpdateTask();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableUpdateTask();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK.class, com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableUpdateTask().clear();
        points_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK build() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK result = new com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.updateTask_ = internalGetUpdateTask();
        result.updateTask_.makeImmutable();
        result.points_ = points_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK.getDefaultInstance()) return this;
        internalGetMutableUpdateTask().mergeFrom(
            other.internalGetUpdateTask());
        if (other.getPoints() != 0) {
          setPoints(other.getPoints());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> updateTask_;
      private com.google.protobuf.MapField<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
      internalGetUpdateTask() {
        if (updateTask_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              UpdateTaskDefaultEntryHolder.defaultEntry);
        }
        return updateTask_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
      internalGetMutableUpdateTask() {
        onChanged();;
        if (updateTask_ == null) {
          updateTask_ = com.google.protobuf.MapField.newMapField(
              UpdateTaskDefaultEntryHolder.defaultEntry);
        }
        if (!updateTask_.isMutable()) {
          updateTask_ = updateTask_.copy();
        }
        return updateTask_;
      }

      public int getUpdateTaskCount() {
        return internalGetUpdateTask().getMap().size();
      }
      /**
       * <pre>
       *更新的任务
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
       */

      public boolean containsUpdateTask(
          int key) {
        
        return internalGetUpdateTask().getMap().containsKey(key);
      }
      /**
       * Use {@link #getUpdateTaskMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> getUpdateTask() {
        return getUpdateTaskMap();
      }
      /**
       * <pre>
       *更新的任务
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
       */

      public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> getUpdateTaskMap() {
        return internalGetUpdateTask().getMap();
      }
      /**
       * <pre>
       *更新的任务
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
       */

      public com.protos.festivalActive.Festivalactive.TaskInfo getUpdateTaskOrDefault(
          int key,
          com.protos.festivalActive.Festivalactive.TaskInfo defaultValue) {
        
        java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> map =
            internalGetUpdateTask().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *更新的任务
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
       */

      public com.protos.festivalActive.Festivalactive.TaskInfo getUpdateTaskOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> map =
            internalGetUpdateTask().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearUpdateTask() {
        internalGetMutableUpdateTask().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *更新的任务
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
       */

      public Builder removeUpdateTask(
          int key) {
        
        internalGetMutableUpdateTask().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo>
      getMutableUpdateTask() {
        return internalGetMutableUpdateTask().getMutableMap();
      }
      /**
       * <pre>
       *更新的任务
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
       */
      public Builder putUpdateTask(
          int key,
          com.protos.festivalActive.Festivalactive.TaskInfo value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableUpdateTask().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *更新的任务
       * </pre>
       *
       * <code>map&lt;uint32, .com.protos.festivalActive.TaskInfo&gt; updateTask = 1;</code>
       */

      public Builder putAllUpdateTask(
          java.util.Map<java.lang.Integer, com.protos.festivalActive.Festivalactive.TaskInfo> values) {
        internalGetMutableUpdateTask().getMutableMap()
            .putAll(values);
        return this;
      }

      private int points_ ;
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 2;</code>
       */
      public int getPoints() {
        return points_;
      }
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 2;</code>
       */
      public Builder setPoints(int value) {
        
        points_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家的积分
       * </pre>
       *
       * <code>uint32 points = 2;</code>
       */
      public Builder clearPoints() {
        
        points_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayPuzzleAccomplishTaskACK)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayPuzzleAccomplishTaskACK)
    private static final com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayPuzzleAccomplishTaskACK>
        PARSER = new com.google.protobuf.AbstractParser<HolidayPuzzleAccomplishTaskACK>() {
      public HolidayPuzzleAccomplishTaskACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayPuzzleAccomplishTaskACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayPuzzleAccomplishTaskACK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayPuzzleAccomplishTaskACK> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayPuzzleAccomplishTaskACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FestivalActiveInfoREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.FestivalActiveInfoREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *  7抽宠，9累计消耗
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    int getType();
  }
  /**
   * <pre>
   *请求节日活动【抽宠、消费好礼】信息
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.FestivalActiveInfoREQ}
   */
  public  static final class FestivalActiveInfoREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.FestivalActiveInfoREQ)
      FestivalActiveInfoREQOrBuilder {
    // Use FestivalActiveInfoREQ.newBuilder() to construct.
    private FestivalActiveInfoREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FestivalActiveInfoREQ() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FestivalActiveInfoREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ.class, com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *  7抽宠，9累计消耗
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ other = (com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ) obj;

      boolean result = true;
      result = result && (getType()
          == other.getType());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *请求节日活动【抽宠、消费好礼】信息
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.FestivalActiveInfoREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.FestivalActiveInfoREQ)
        com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ.class, com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ build() {
        com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ buildPartial() {
        com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ result = new com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ(this);
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ other) {
        if (other == com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *  7抽宠，9累计消耗
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *  7抽宠，9累计消耗
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  7抽宠，9累计消耗
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.FestivalActiveInfoREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.FestivalActiveInfoREQ)
    private static final com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ();
    }

    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FestivalActiveInfoREQ>
        PARSER = new com.google.protobuf.AbstractParser<FestivalActiveInfoREQ>() {
      public FestivalActiveInfoREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FestivalActiveInfoREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FestivalActiveInfoREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FestivalActiveInfoREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.FestivalActiveInfoREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DrawPetRwdInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.DrawPetRwdInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *节日抽宠宝箱礼包id，每日福利礼包id，累计消耗礼包id
     * </pre>
     *
     * <code>uint32 giftId = 1;</code>
     */
    int getGiftId();

    /**
     * <pre>
     *  领取状态: 0-不能领取, 1-可领取, 2-已领取 
     * </pre>
     *
     * <code>uint32 status = 2;</code>
     */
    int getStatus();
  }
  /**
   * <pre>
   *节日礼包【点击领取，活动结束后未领取的邮件发送】
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.DrawPetRwdInfo}
   */
  public  static final class DrawPetRwdInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.DrawPetRwdInfo)
      DrawPetRwdInfoOrBuilder {
    // Use DrawPetRwdInfo.newBuilder() to construct.
    private DrawPetRwdInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DrawPetRwdInfo() {
      giftId_ = 0;
      status_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DrawPetRwdInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              giftId_ = input.readUInt32();
              break;
            }
            case 16: {

              status_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetRwdInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetRwdInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.class, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder.class);
    }

    public static final int GIFTID_FIELD_NUMBER = 1;
    private int giftId_;
    /**
     * <pre>
     *节日抽宠宝箱礼包id，每日福利礼包id，累计消耗礼包id
     * </pre>
     *
     * <code>uint32 giftId = 1;</code>
     */
    public int getGiftId() {
      return giftId_;
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <pre>
     *  领取状态: 0-不能领取, 1-可领取, 2-已领取 
     * </pre>
     *
     * <code>uint32 status = 2;</code>
     */
    public int getStatus() {
      return status_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (giftId_ != 0) {
        output.writeUInt32(1, giftId_);
      }
      if (status_ != 0) {
        output.writeUInt32(2, status_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (giftId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, giftId_);
      }
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, status_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.DrawPetRwdInfo)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.DrawPetRwdInfo other = (com.protos.festivalActive.Festivalactive.DrawPetRwdInfo) obj;

      boolean result = true;
      result = result && (getGiftId()
          == other.getGiftId());
      result = result && (getStatus()
          == other.getStatus());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GIFTID_FIELD_NUMBER;
      hash = (53 * hash) + getGiftId();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.DrawPetRwdInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *节日礼包【点击领取，活动结束后未领取的邮件发送】
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.DrawPetRwdInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.DrawPetRwdInfo)
        com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetRwdInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetRwdInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.class, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        giftId_ = 0;

        status_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetRwdInfo_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo build() {
        com.protos.festivalActive.Festivalactive.DrawPetRwdInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo buildPartial() {
        com.protos.festivalActive.Festivalactive.DrawPetRwdInfo result = new com.protos.festivalActive.Festivalactive.DrawPetRwdInfo(this);
        result.giftId_ = giftId_;
        result.status_ = status_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.DrawPetRwdInfo) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.DrawPetRwdInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.DrawPetRwdInfo other) {
        if (other == com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.getDefaultInstance()) return this;
        if (other.getGiftId() != 0) {
          setGiftId(other.getGiftId());
        }
        if (other.getStatus() != 0) {
          setStatus(other.getStatus());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.DrawPetRwdInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.DrawPetRwdInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int giftId_ ;
      /**
       * <pre>
       *节日抽宠宝箱礼包id，每日福利礼包id，累计消耗礼包id
       * </pre>
       *
       * <code>uint32 giftId = 1;</code>
       */
      public int getGiftId() {
        return giftId_;
      }
      /**
       * <pre>
       *节日抽宠宝箱礼包id，每日福利礼包id，累计消耗礼包id
       * </pre>
       *
       * <code>uint32 giftId = 1;</code>
       */
      public Builder setGiftId(int value) {
        
        giftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节日抽宠宝箱礼包id，每日福利礼包id，累计消耗礼包id
       * </pre>
       *
       * <code>uint32 giftId = 1;</code>
       */
      public Builder clearGiftId() {
        
        giftId_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       *  领取状态: 0-不能领取, 1-可领取, 2-已领取 
       * </pre>
       *
       * <code>uint32 status = 2;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       *  领取状态: 0-不能领取, 1-可领取, 2-已领取 
       * </pre>
       *
       * <code>uint32 status = 2;</code>
       */
      public Builder setStatus(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  领取状态: 0-不能领取, 1-可领取, 2-已领取 
       * </pre>
       *
       * <code>uint32 status = 2;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.DrawPetRwdInfo)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.DrawPetRwdInfo)
    private static final com.protos.festivalActive.Festivalactive.DrawPetRwdInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.DrawPetRwdInfo();
    }

    public static com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DrawPetRwdInfo>
        PARSER = new com.google.protobuf.AbstractParser<DrawPetRwdInfo>() {
      public DrawPetRwdInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DrawPetRwdInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DrawPetRwdInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DrawPetRwdInfo> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DrawPetLogInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.DrawPetLogInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 playerId = 1;</code>
     */
    long getPlayerId();

    /**
     * <pre>
     *抽奖时间    
     * </pre>
     *
     * <code>uint64 time = 2;</code>
     */
    long getTime();

    /**
     * <code>string items = 3;</code>
     */
    java.lang.String getItems();
    /**
     * <code>string items = 3;</code>
     */
    com.google.protobuf.ByteString
        getItemsBytes();

    /**
     * <code>string playerName = 4;</code>
     */
    java.lang.String getPlayerName();
    /**
     * <code>string playerName = 4;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();
  }
  /**
   * <pre>
   *抽宠活动信息
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.DrawPetLogInfo}
   */
  public  static final class DrawPetLogInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.DrawPetLogInfo)
      DrawPetLogInfoOrBuilder {
    // Use DrawPetLogInfo.newBuilder() to construct.
    private DrawPetLogInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DrawPetLogInfo() {
      playerId_ = 0L;
      time_ = 0L;
      items_ = "";
      playerName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DrawPetLogInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              playerId_ = input.readUInt64();
              break;
            }
            case 16: {

              time_ = input.readUInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              items_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              playerName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetLogInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetLogInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.DrawPetLogInfo.class, com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder.class);
    }

    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>uint64 playerId = 1;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    /**
     * <pre>
     *抽奖时间    
     * </pre>
     *
     * <code>uint64 time = 2;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int ITEMS_FIELD_NUMBER = 3;
    private volatile java.lang.Object items_;
    /**
     * <code>string items = 3;</code>
     */
    public java.lang.String getItems() {
      java.lang.Object ref = items_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        items_ = s;
        return s;
      }
    }
    /**
     * <code>string items = 3;</code>
     */
    public com.google.protobuf.ByteString
        getItemsBytes() {
      java.lang.Object ref = items_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        items_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERNAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object playerName_;
    /**
     * <code>string playerName = 4;</code>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        playerName_ = s;
        return s;
      }
    }
    /**
     * <code>string playerName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (playerId_ != 0L) {
        output.writeUInt64(1, playerId_);
      }
      if (time_ != 0L) {
        output.writeUInt64(2, time_);
      }
      if (!getItemsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, items_);
      }
      if (!getPlayerNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, playerName_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (playerId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, playerId_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, time_);
      }
      if (!getItemsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, items_);
      }
      if (!getPlayerNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, playerName_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.DrawPetLogInfo)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.DrawPetLogInfo other = (com.protos.festivalActive.Festivalactive.DrawPetLogInfo) obj;

      boolean result = true;
      result = result && (getPlayerId()
          == other.getPlayerId());
      result = result && (getTime()
          == other.getTime());
      result = result && getItems()
          .equals(other.getItems());
      result = result && getPlayerName()
          .equals(other.getPlayerName());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPlayerId());
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + ITEMS_FIELD_NUMBER;
      hash = (53 * hash) + getItems().hashCode();
      hash = (37 * hash) + PLAYERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.DrawPetLogInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *抽宠活动信息
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.DrawPetLogInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.DrawPetLogInfo)
        com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetLogInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetLogInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.DrawPetLogInfo.class, com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.DrawPetLogInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        playerId_ = 0L;

        time_ = 0L;

        items_ = "";

        playerName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetLogInfo_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.DrawPetLogInfo getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.DrawPetLogInfo.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.DrawPetLogInfo build() {
        com.protos.festivalActive.Festivalactive.DrawPetLogInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.DrawPetLogInfo buildPartial() {
        com.protos.festivalActive.Festivalactive.DrawPetLogInfo result = new com.protos.festivalActive.Festivalactive.DrawPetLogInfo(this);
        result.playerId_ = playerId_;
        result.time_ = time_;
        result.items_ = items_;
        result.playerName_ = playerName_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.DrawPetLogInfo) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.DrawPetLogInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.DrawPetLogInfo other) {
        if (other == com.protos.festivalActive.Festivalactive.DrawPetLogInfo.getDefaultInstance()) return this;
        if (other.getPlayerId() != 0L) {
          setPlayerId(other.getPlayerId());
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (!other.getItems().isEmpty()) {
          items_ = other.items_;
          onChanged();
        }
        if (!other.getPlayerName().isEmpty()) {
          playerName_ = other.playerName_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.DrawPetLogInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.DrawPetLogInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long playerId_ ;
      /**
       * <code>uint64 playerId = 1;</code>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>uint64 playerId = 1;</code>
       */
      public Builder setPlayerId(long value) {
        
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <pre>
       *抽奖时间    
       * </pre>
       *
       * <code>uint64 time = 2;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <pre>
       *抽奖时间    
       * </pre>
       *
       * <code>uint64 time = 2;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *抽奖时间    
       * </pre>
       *
       * <code>uint64 time = 2;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object items_ = "";
      /**
       * <code>string items = 3;</code>
       */
      public java.lang.String getItems() {
        java.lang.Object ref = items_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          items_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string items = 3;</code>
       */
      public com.google.protobuf.ByteString
          getItemsBytes() {
        java.lang.Object ref = items_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          items_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string items = 3;</code>
       */
      public Builder setItems(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        items_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string items = 3;</code>
       */
      public Builder clearItems() {
        
        items_ = getDefaultInstance().getItems();
        onChanged();
        return this;
      }
      /**
       * <code>string items = 3;</code>
       */
      public Builder setItemsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        items_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object playerName_ = "";
      /**
       * <code>string playerName = 4;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string playerName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string playerName = 4;</code>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string playerName = 4;</code>
       */
      public Builder clearPlayerName() {
        
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>string playerName = 4;</code>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.DrawPetLogInfo)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.DrawPetLogInfo)
    private static final com.protos.festivalActive.Festivalactive.DrawPetLogInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.DrawPetLogInfo();
    }

    public static com.protos.festivalActive.Festivalactive.DrawPetLogInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DrawPetLogInfo>
        PARSER = new com.google.protobuf.AbstractParser<DrawPetLogInfo>() {
      public DrawPetLogInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DrawPetLogInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DrawPetLogInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DrawPetLogInfo> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.DrawPetLogInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FestivalActiveInfoACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.FestivalActiveInfoACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *7节日抽宠，9累计消耗
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     *活动开始时间
     * </pre>
     *
     * <code>uint32 betweenTime = 2;</code>
     */
    int getBetweenTime();

    /**
     * <pre>
     *活动结束时间
     * </pre>
     *
     * <code>uint32 overTime = 3;</code>
     */
    int getOverTime();

    /**
     * <pre>
     *已抽宠次数
     * </pre>
     *
     * <code>uint32 drawPetCount = 4;</code>
     */
    int getDrawPetCount();

    /**
     * <pre>
     *消耗贝壳数量
     * </pre>
     *
     * <code>uint32 consumeGold = 5;</code>
     */
    int getConsumeGold();

    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> 
        getDrawPetRwdInfosList();
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getDrawPetRwdInfos(int index);
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    int getDrawPetRwdInfosCount();
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> 
        getDrawPetRwdInfosOrBuilderList();
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder getDrawPetRwdInfosOrBuilder(
        int index);

    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    java.util.List<com.protos.festivalActive.Festivalactive.DrawPetLogInfo> 
        getPlayerDrawPetLogsList();
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    com.protos.festivalActive.Festivalactive.DrawPetLogInfo getPlayerDrawPetLogs(int index);
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    int getPlayerDrawPetLogsCount();
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder> 
        getPlayerDrawPetLogsOrBuilderList();
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder getPlayerDrawPetLogsOrBuilder(
        int index);

    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> 
        getTotalConsumeInfosList();
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getTotalConsumeInfos(int index);
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    int getTotalConsumeInfosCount();
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> 
        getTotalConsumeInfosOrBuilderList();
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder getTotalConsumeInfosOrBuilder(
        int index);
  }
  /**
   * <pre>
   *节日抽宠、消费好礼等，活动信息返回
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.FestivalActiveInfoACK}
   */
  public  static final class FestivalActiveInfoACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.FestivalActiveInfoACK)
      FestivalActiveInfoACKOrBuilder {
    // Use FestivalActiveInfoACK.newBuilder() to construct.
    private FestivalActiveInfoACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FestivalActiveInfoACK() {
      type_ = 0;
      betweenTime_ = 0;
      overTime_ = 0;
      drawPetCount_ = 0;
      consumeGold_ = 0;
      drawPetRwdInfos_ = java.util.Collections.emptyList();
      playerDrawPetLogs_ = java.util.Collections.emptyList();
      totalConsumeInfos_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FestivalActiveInfoACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              type_ = input.readUInt32();
              break;
            }
            case 16: {

              betweenTime_ = input.readUInt32();
              break;
            }
            case 24: {

              overTime_ = input.readUInt32();
              break;
            }
            case 32: {

              drawPetCount_ = input.readUInt32();
              break;
            }
            case 40: {

              consumeGold_ = input.readUInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                drawPetRwdInfos_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              drawPetRwdInfos_.add(
                  input.readMessage(com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                playerDrawPetLogs_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.DrawPetLogInfo>();
                mutable_bitField0_ |= 0x00000040;
              }
              playerDrawPetLogs_.add(
                  input.readMessage(com.protos.festivalActive.Festivalactive.DrawPetLogInfo.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                totalConsumeInfos_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo>();
                mutable_bitField0_ |= 0x00000080;
              }
              totalConsumeInfos_.add(
                  input.readMessage(com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          drawPetRwdInfos_ = java.util.Collections.unmodifiableList(drawPetRwdInfos_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          playerDrawPetLogs_ = java.util.Collections.unmodifiableList(playerDrawPetLogs_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          totalConsumeInfos_ = java.util.Collections.unmodifiableList(totalConsumeInfos_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoACK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK.class, com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *7节日抽宠，9累计消耗
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int BETWEENTIME_FIELD_NUMBER = 2;
    private int betweenTime_;
    /**
     * <pre>
     *活动开始时间
     * </pre>
     *
     * <code>uint32 betweenTime = 2;</code>
     */
    public int getBetweenTime() {
      return betweenTime_;
    }

    public static final int OVERTIME_FIELD_NUMBER = 3;
    private int overTime_;
    /**
     * <pre>
     *活动结束时间
     * </pre>
     *
     * <code>uint32 overTime = 3;</code>
     */
    public int getOverTime() {
      return overTime_;
    }

    public static final int DRAWPETCOUNT_FIELD_NUMBER = 4;
    private int drawPetCount_;
    /**
     * <pre>
     *已抽宠次数
     * </pre>
     *
     * <code>uint32 drawPetCount = 4;</code>
     */
    public int getDrawPetCount() {
      return drawPetCount_;
    }

    public static final int CONSUMEGOLD_FIELD_NUMBER = 5;
    private int consumeGold_;
    /**
     * <pre>
     *消耗贝壳数量
     * </pre>
     *
     * <code>uint32 consumeGold = 5;</code>
     */
    public int getConsumeGold() {
      return consumeGold_;
    }

    public static final int DRAWPETRWDINFOS_FIELD_NUMBER = 6;
    private java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> drawPetRwdInfos_;
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> getDrawPetRwdInfosList() {
      return drawPetRwdInfos_;
    }
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    public java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> 
        getDrawPetRwdInfosOrBuilderList() {
      return drawPetRwdInfos_;
    }
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    public int getDrawPetRwdInfosCount() {
      return drawPetRwdInfos_.size();
    }
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getDrawPetRwdInfos(int index) {
      return drawPetRwdInfos_.get(index);
    }
    /**
     * <pre>
     *节日抽宠礼包（每日福利、宝箱）
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
     */
    public com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder getDrawPetRwdInfosOrBuilder(
        int index) {
      return drawPetRwdInfos_.get(index);
    }

    public static final int PLAYERDRAWPETLOGS_FIELD_NUMBER = 7;
    private java.util.List<com.protos.festivalActive.Festivalactive.DrawPetLogInfo> playerDrawPetLogs_;
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetLogInfo> getPlayerDrawPetLogsList() {
      return playerDrawPetLogs_;
    }
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    public java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder> 
        getPlayerDrawPetLogsOrBuilderList() {
      return playerDrawPetLogs_;
    }
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    public int getPlayerDrawPetLogsCount() {
      return playerDrawPetLogs_.size();
    }
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    public com.protos.festivalActive.Festivalactive.DrawPetLogInfo getPlayerDrawPetLogs(int index) {
      return playerDrawPetLogs_.get(index);
    }
    /**
     * <pre>
     *玩家节日抽宠记录
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
     */
    public com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder getPlayerDrawPetLogsOrBuilder(
        int index) {
      return playerDrawPetLogs_.get(index);
    }

    public static final int TOTALCONSUMEINFOS_FIELD_NUMBER = 8;
    private java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> totalConsumeInfos_;
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> getTotalConsumeInfosList() {
      return totalConsumeInfos_;
    }
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    public java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> 
        getTotalConsumeInfosOrBuilderList() {
      return totalConsumeInfos_;
    }
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    public int getTotalConsumeInfosCount() {
      return totalConsumeInfos_.size();
    }
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getTotalConsumeInfos(int index) {
      return totalConsumeInfos_.get(index);
    }
    /**
     * <pre>
     *节日累计消耗，每个礼包领取状态
     * </pre>
     *
     * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
     */
    public com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder getTotalConsumeInfosOrBuilder(
        int index) {
      return totalConsumeInfos_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
      if (betweenTime_ != 0) {
        output.writeUInt32(2, betweenTime_);
      }
      if (overTime_ != 0) {
        output.writeUInt32(3, overTime_);
      }
      if (drawPetCount_ != 0) {
        output.writeUInt32(4, drawPetCount_);
      }
      if (consumeGold_ != 0) {
        output.writeUInt32(5, consumeGold_);
      }
      for (int i = 0; i < drawPetRwdInfos_.size(); i++) {
        output.writeMessage(6, drawPetRwdInfos_.get(i));
      }
      for (int i = 0; i < playerDrawPetLogs_.size(); i++) {
        output.writeMessage(7, playerDrawPetLogs_.get(i));
      }
      for (int i = 0; i < totalConsumeInfos_.size(); i++) {
        output.writeMessage(8, totalConsumeInfos_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (betweenTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, betweenTime_);
      }
      if (overTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, overTime_);
      }
      if (drawPetCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, drawPetCount_);
      }
      if (consumeGold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, consumeGold_);
      }
      for (int i = 0; i < drawPetRwdInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, drawPetRwdInfos_.get(i));
      }
      for (int i = 0; i < playerDrawPetLogs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, playerDrawPetLogs_.get(i));
      }
      for (int i = 0; i < totalConsumeInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, totalConsumeInfos_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK other = (com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK) obj;

      boolean result = true;
      result = result && (getType()
          == other.getType());
      result = result && (getBetweenTime()
          == other.getBetweenTime());
      result = result && (getOverTime()
          == other.getOverTime());
      result = result && (getDrawPetCount()
          == other.getDrawPetCount());
      result = result && (getConsumeGold()
          == other.getConsumeGold());
      result = result && getDrawPetRwdInfosList()
          .equals(other.getDrawPetRwdInfosList());
      result = result && getPlayerDrawPetLogsList()
          .equals(other.getPlayerDrawPetLogsList());
      result = result && getTotalConsumeInfosList()
          .equals(other.getTotalConsumeInfosList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + BETWEENTIME_FIELD_NUMBER;
      hash = (53 * hash) + getBetweenTime();
      hash = (37 * hash) + OVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + getOverTime();
      hash = (37 * hash) + DRAWPETCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getDrawPetCount();
      hash = (37 * hash) + CONSUMEGOLD_FIELD_NUMBER;
      hash = (53 * hash) + getConsumeGold();
      if (getDrawPetRwdInfosCount() > 0) {
        hash = (37 * hash) + DRAWPETRWDINFOS_FIELD_NUMBER;
        hash = (53 * hash) + getDrawPetRwdInfosList().hashCode();
      }
      if (getPlayerDrawPetLogsCount() > 0) {
        hash = (37 * hash) + PLAYERDRAWPETLOGS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerDrawPetLogsList().hashCode();
      }
      if (getTotalConsumeInfosCount() > 0) {
        hash = (37 * hash) + TOTALCONSUMEINFOS_FIELD_NUMBER;
        hash = (53 * hash) + getTotalConsumeInfosList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *节日抽宠、消费好礼等，活动信息返回
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.FestivalActiveInfoACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.FestivalActiveInfoACK)
        com.protos.festivalActive.Festivalactive.FestivalActiveInfoACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoACK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK.class, com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDrawPetRwdInfosFieldBuilder();
          getPlayerDrawPetLogsFieldBuilder();
          getTotalConsumeInfosFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        betweenTime_ = 0;

        overTime_ = 0;

        drawPetCount_ = 0;

        consumeGold_ = 0;

        if (drawPetRwdInfosBuilder_ == null) {
          drawPetRwdInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          drawPetRwdInfosBuilder_.clear();
        }
        if (playerDrawPetLogsBuilder_ == null) {
          playerDrawPetLogs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          playerDrawPetLogsBuilder_.clear();
        }
        if (totalConsumeInfosBuilder_ == null) {
          totalConsumeInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          totalConsumeInfosBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_FestivalActiveInfoACK_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK build() {
        com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK buildPartial() {
        com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK result = new com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.type_ = type_;
        result.betweenTime_ = betweenTime_;
        result.overTime_ = overTime_;
        result.drawPetCount_ = drawPetCount_;
        result.consumeGold_ = consumeGold_;
        if (drawPetRwdInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            drawPetRwdInfos_ = java.util.Collections.unmodifiableList(drawPetRwdInfos_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.drawPetRwdInfos_ = drawPetRwdInfos_;
        } else {
          result.drawPetRwdInfos_ = drawPetRwdInfosBuilder_.build();
        }
        if (playerDrawPetLogsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            playerDrawPetLogs_ = java.util.Collections.unmodifiableList(playerDrawPetLogs_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.playerDrawPetLogs_ = playerDrawPetLogs_;
        } else {
          result.playerDrawPetLogs_ = playerDrawPetLogsBuilder_.build();
        }
        if (totalConsumeInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            totalConsumeInfos_ = java.util.Collections.unmodifiableList(totalConsumeInfos_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.totalConsumeInfos_ = totalConsumeInfos_;
        } else {
          result.totalConsumeInfos_ = totalConsumeInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK other) {
        if (other == com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getBetweenTime() != 0) {
          setBetweenTime(other.getBetweenTime());
        }
        if (other.getOverTime() != 0) {
          setOverTime(other.getOverTime());
        }
        if (other.getDrawPetCount() != 0) {
          setDrawPetCount(other.getDrawPetCount());
        }
        if (other.getConsumeGold() != 0) {
          setConsumeGold(other.getConsumeGold());
        }
        if (drawPetRwdInfosBuilder_ == null) {
          if (!other.drawPetRwdInfos_.isEmpty()) {
            if (drawPetRwdInfos_.isEmpty()) {
              drawPetRwdInfos_ = other.drawPetRwdInfos_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureDrawPetRwdInfosIsMutable();
              drawPetRwdInfos_.addAll(other.drawPetRwdInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.drawPetRwdInfos_.isEmpty()) {
            if (drawPetRwdInfosBuilder_.isEmpty()) {
              drawPetRwdInfosBuilder_.dispose();
              drawPetRwdInfosBuilder_ = null;
              drawPetRwdInfos_ = other.drawPetRwdInfos_;
              bitField0_ = (bitField0_ & ~0x00000020);
              drawPetRwdInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDrawPetRwdInfosFieldBuilder() : null;
            } else {
              drawPetRwdInfosBuilder_.addAllMessages(other.drawPetRwdInfos_);
            }
          }
        }
        if (playerDrawPetLogsBuilder_ == null) {
          if (!other.playerDrawPetLogs_.isEmpty()) {
            if (playerDrawPetLogs_.isEmpty()) {
              playerDrawPetLogs_ = other.playerDrawPetLogs_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensurePlayerDrawPetLogsIsMutable();
              playerDrawPetLogs_.addAll(other.playerDrawPetLogs_);
            }
            onChanged();
          }
        } else {
          if (!other.playerDrawPetLogs_.isEmpty()) {
            if (playerDrawPetLogsBuilder_.isEmpty()) {
              playerDrawPetLogsBuilder_.dispose();
              playerDrawPetLogsBuilder_ = null;
              playerDrawPetLogs_ = other.playerDrawPetLogs_;
              bitField0_ = (bitField0_ & ~0x00000040);
              playerDrawPetLogsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerDrawPetLogsFieldBuilder() : null;
            } else {
              playerDrawPetLogsBuilder_.addAllMessages(other.playerDrawPetLogs_);
            }
          }
        }
        if (totalConsumeInfosBuilder_ == null) {
          if (!other.totalConsumeInfos_.isEmpty()) {
            if (totalConsumeInfos_.isEmpty()) {
              totalConsumeInfos_ = other.totalConsumeInfos_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureTotalConsumeInfosIsMutable();
              totalConsumeInfos_.addAll(other.totalConsumeInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.totalConsumeInfos_.isEmpty()) {
            if (totalConsumeInfosBuilder_.isEmpty()) {
              totalConsumeInfosBuilder_.dispose();
              totalConsumeInfosBuilder_ = null;
              totalConsumeInfos_ = other.totalConsumeInfos_;
              bitField0_ = (bitField0_ & ~0x00000080);
              totalConsumeInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTotalConsumeInfosFieldBuilder() : null;
            } else {
              totalConsumeInfosBuilder_.addAllMessages(other.totalConsumeInfos_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <pre>
       *7节日抽宠，9累计消耗
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *7节日抽宠，9累计消耗
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *7节日抽宠，9累计消耗
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int betweenTime_ ;
      /**
       * <pre>
       *活动开始时间
       * </pre>
       *
       * <code>uint32 betweenTime = 2;</code>
       */
      public int getBetweenTime() {
        return betweenTime_;
      }
      /**
       * <pre>
       *活动开始时间
       * </pre>
       *
       * <code>uint32 betweenTime = 2;</code>
       */
      public Builder setBetweenTime(int value) {
        
        betweenTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *活动开始时间
       * </pre>
       *
       * <code>uint32 betweenTime = 2;</code>
       */
      public Builder clearBetweenTime() {
        
        betweenTime_ = 0;
        onChanged();
        return this;
      }

      private int overTime_ ;
      /**
       * <pre>
       *活动结束时间
       * </pre>
       *
       * <code>uint32 overTime = 3;</code>
       */
      public int getOverTime() {
        return overTime_;
      }
      /**
       * <pre>
       *活动结束时间
       * </pre>
       *
       * <code>uint32 overTime = 3;</code>
       */
      public Builder setOverTime(int value) {
        
        overTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *活动结束时间
       * </pre>
       *
       * <code>uint32 overTime = 3;</code>
       */
      public Builder clearOverTime() {
        
        overTime_ = 0;
        onChanged();
        return this;
      }

      private int drawPetCount_ ;
      /**
       * <pre>
       *已抽宠次数
       * </pre>
       *
       * <code>uint32 drawPetCount = 4;</code>
       */
      public int getDrawPetCount() {
        return drawPetCount_;
      }
      /**
       * <pre>
       *已抽宠次数
       * </pre>
       *
       * <code>uint32 drawPetCount = 4;</code>
       */
      public Builder setDrawPetCount(int value) {
        
        drawPetCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已抽宠次数
       * </pre>
       *
       * <code>uint32 drawPetCount = 4;</code>
       */
      public Builder clearDrawPetCount() {
        
        drawPetCount_ = 0;
        onChanged();
        return this;
      }

      private int consumeGold_ ;
      /**
       * <pre>
       *消耗贝壳数量
       * </pre>
       *
       * <code>uint32 consumeGold = 5;</code>
       */
      public int getConsumeGold() {
        return consumeGold_;
      }
      /**
       * <pre>
       *消耗贝壳数量
       * </pre>
       *
       * <code>uint32 consumeGold = 5;</code>
       */
      public Builder setConsumeGold(int value) {
        
        consumeGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消耗贝壳数量
       * </pre>
       *
       * <code>uint32 consumeGold = 5;</code>
       */
      public Builder clearConsumeGold() {
        
        consumeGold_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> drawPetRwdInfos_ =
        java.util.Collections.emptyList();
      private void ensureDrawPetRwdInfosIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          drawPetRwdInfos_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo>(drawPetRwdInfos_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.DrawPetRwdInfo, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> drawPetRwdInfosBuilder_;

      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> getDrawPetRwdInfosList() {
        if (drawPetRwdInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drawPetRwdInfos_);
        } else {
          return drawPetRwdInfosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public int getDrawPetRwdInfosCount() {
        if (drawPetRwdInfosBuilder_ == null) {
          return drawPetRwdInfos_.size();
        } else {
          return drawPetRwdInfosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getDrawPetRwdInfos(int index) {
        if (drawPetRwdInfosBuilder_ == null) {
          return drawPetRwdInfos_.get(index);
        } else {
          return drawPetRwdInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder setDrawPetRwdInfos(
          int index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo value) {
        if (drawPetRwdInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawPetRwdInfosIsMutable();
          drawPetRwdInfos_.set(index, value);
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder setDrawPetRwdInfos(
          int index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder builderForValue) {
        if (drawPetRwdInfosBuilder_ == null) {
          ensureDrawPetRwdInfosIsMutable();
          drawPetRwdInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder addDrawPetRwdInfos(com.protos.festivalActive.Festivalactive.DrawPetRwdInfo value) {
        if (drawPetRwdInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawPetRwdInfosIsMutable();
          drawPetRwdInfos_.add(value);
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder addDrawPetRwdInfos(
          int index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo value) {
        if (drawPetRwdInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrawPetRwdInfosIsMutable();
          drawPetRwdInfos_.add(index, value);
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder addDrawPetRwdInfos(
          com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder builderForValue) {
        if (drawPetRwdInfosBuilder_ == null) {
          ensureDrawPetRwdInfosIsMutable();
          drawPetRwdInfos_.add(builderForValue.build());
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder addDrawPetRwdInfos(
          int index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder builderForValue) {
        if (drawPetRwdInfosBuilder_ == null) {
          ensureDrawPetRwdInfosIsMutable();
          drawPetRwdInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder addAllDrawPetRwdInfos(
          java.lang.Iterable<? extends com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> values) {
        if (drawPetRwdInfosBuilder_ == null) {
          ensureDrawPetRwdInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, drawPetRwdInfos_);
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder clearDrawPetRwdInfos() {
        if (drawPetRwdInfosBuilder_ == null) {
          drawPetRwdInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public Builder removeDrawPetRwdInfos(int index) {
        if (drawPetRwdInfosBuilder_ == null) {
          ensureDrawPetRwdInfosIsMutable();
          drawPetRwdInfos_.remove(index);
          onChanged();
        } else {
          drawPetRwdInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder getDrawPetRwdInfosBuilder(
          int index) {
        return getDrawPetRwdInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder getDrawPetRwdInfosOrBuilder(
          int index) {
        if (drawPetRwdInfosBuilder_ == null) {
          return drawPetRwdInfos_.get(index);  } else {
          return drawPetRwdInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> 
           getDrawPetRwdInfosOrBuilderList() {
        if (drawPetRwdInfosBuilder_ != null) {
          return drawPetRwdInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drawPetRwdInfos_);
        }
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder addDrawPetRwdInfosBuilder() {
        return getDrawPetRwdInfosFieldBuilder().addBuilder(
            com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder addDrawPetRwdInfosBuilder(
          int index) {
        return getDrawPetRwdInfosFieldBuilder().addBuilder(
            index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *节日抽宠礼包（每日福利、宝箱）
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo drawPetRwdInfos = 6;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder> 
           getDrawPetRwdInfosBuilderList() {
        return getDrawPetRwdInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.DrawPetRwdInfo, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> 
          getDrawPetRwdInfosFieldBuilder() {
        if (drawPetRwdInfosBuilder_ == null) {
          drawPetRwdInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.protos.festivalActive.Festivalactive.DrawPetRwdInfo, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder>(
                  drawPetRwdInfos_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          drawPetRwdInfos_ = null;
        }
        return drawPetRwdInfosBuilder_;
      }

      private java.util.List<com.protos.festivalActive.Festivalactive.DrawPetLogInfo> playerDrawPetLogs_ =
        java.util.Collections.emptyList();
      private void ensurePlayerDrawPetLogsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          playerDrawPetLogs_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.DrawPetLogInfo>(playerDrawPetLogs_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.DrawPetLogInfo, com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder> playerDrawPetLogsBuilder_;

      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetLogInfo> getPlayerDrawPetLogsList() {
        if (playerDrawPetLogsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerDrawPetLogs_);
        } else {
          return playerDrawPetLogsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public int getPlayerDrawPetLogsCount() {
        if (playerDrawPetLogsBuilder_ == null) {
          return playerDrawPetLogs_.size();
        } else {
          return playerDrawPetLogsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetLogInfo getPlayerDrawPetLogs(int index) {
        if (playerDrawPetLogsBuilder_ == null) {
          return playerDrawPetLogs_.get(index);
        } else {
          return playerDrawPetLogsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder setPlayerDrawPetLogs(
          int index, com.protos.festivalActive.Festivalactive.DrawPetLogInfo value) {
        if (playerDrawPetLogsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDrawPetLogsIsMutable();
          playerDrawPetLogs_.set(index, value);
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder setPlayerDrawPetLogs(
          int index, com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder builderForValue) {
        if (playerDrawPetLogsBuilder_ == null) {
          ensurePlayerDrawPetLogsIsMutable();
          playerDrawPetLogs_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder addPlayerDrawPetLogs(com.protos.festivalActive.Festivalactive.DrawPetLogInfo value) {
        if (playerDrawPetLogsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDrawPetLogsIsMutable();
          playerDrawPetLogs_.add(value);
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder addPlayerDrawPetLogs(
          int index, com.protos.festivalActive.Festivalactive.DrawPetLogInfo value) {
        if (playerDrawPetLogsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDrawPetLogsIsMutable();
          playerDrawPetLogs_.add(index, value);
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder addPlayerDrawPetLogs(
          com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder builderForValue) {
        if (playerDrawPetLogsBuilder_ == null) {
          ensurePlayerDrawPetLogsIsMutable();
          playerDrawPetLogs_.add(builderForValue.build());
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder addPlayerDrawPetLogs(
          int index, com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder builderForValue) {
        if (playerDrawPetLogsBuilder_ == null) {
          ensurePlayerDrawPetLogsIsMutable();
          playerDrawPetLogs_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder addAllPlayerDrawPetLogs(
          java.lang.Iterable<? extends com.protos.festivalActive.Festivalactive.DrawPetLogInfo> values) {
        if (playerDrawPetLogsBuilder_ == null) {
          ensurePlayerDrawPetLogsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerDrawPetLogs_);
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder clearPlayerDrawPetLogs() {
        if (playerDrawPetLogsBuilder_ == null) {
          playerDrawPetLogs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public Builder removePlayerDrawPetLogs(int index) {
        if (playerDrawPetLogsBuilder_ == null) {
          ensurePlayerDrawPetLogsIsMutable();
          playerDrawPetLogs_.remove(index);
          onChanged();
        } else {
          playerDrawPetLogsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder getPlayerDrawPetLogsBuilder(
          int index) {
        return getPlayerDrawPetLogsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder getPlayerDrawPetLogsOrBuilder(
          int index) {
        if (playerDrawPetLogsBuilder_ == null) {
          return playerDrawPetLogs_.get(index);  } else {
          return playerDrawPetLogsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder> 
           getPlayerDrawPetLogsOrBuilderList() {
        if (playerDrawPetLogsBuilder_ != null) {
          return playerDrawPetLogsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerDrawPetLogs_);
        }
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder addPlayerDrawPetLogsBuilder() {
        return getPlayerDrawPetLogsFieldBuilder().addBuilder(
            com.protos.festivalActive.Festivalactive.DrawPetLogInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder addPlayerDrawPetLogsBuilder(
          int index) {
        return getPlayerDrawPetLogsFieldBuilder().addBuilder(
            index, com.protos.festivalActive.Festivalactive.DrawPetLogInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *玩家节日抽宠记录
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetLogInfo playerDrawPetLogs = 7;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder> 
           getPlayerDrawPetLogsBuilderList() {
        return getPlayerDrawPetLogsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.DrawPetLogInfo, com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder> 
          getPlayerDrawPetLogsFieldBuilder() {
        if (playerDrawPetLogsBuilder_ == null) {
          playerDrawPetLogsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.protos.festivalActive.Festivalactive.DrawPetLogInfo, com.protos.festivalActive.Festivalactive.DrawPetLogInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetLogInfoOrBuilder>(
                  playerDrawPetLogs_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          playerDrawPetLogs_ = null;
        }
        return playerDrawPetLogsBuilder_;
      }

      private java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> totalConsumeInfos_ =
        java.util.Collections.emptyList();
      private void ensureTotalConsumeInfosIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          totalConsumeInfos_ = new java.util.ArrayList<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo>(totalConsumeInfos_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.DrawPetRwdInfo, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> totalConsumeInfosBuilder_;

      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> getTotalConsumeInfosList() {
        if (totalConsumeInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(totalConsumeInfos_);
        } else {
          return totalConsumeInfosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public int getTotalConsumeInfosCount() {
        if (totalConsumeInfosBuilder_ == null) {
          return totalConsumeInfos_.size();
        } else {
          return totalConsumeInfosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo getTotalConsumeInfos(int index) {
        if (totalConsumeInfosBuilder_ == null) {
          return totalConsumeInfos_.get(index);
        } else {
          return totalConsumeInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder setTotalConsumeInfos(
          int index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo value) {
        if (totalConsumeInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTotalConsumeInfosIsMutable();
          totalConsumeInfos_.set(index, value);
          onChanged();
        } else {
          totalConsumeInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder setTotalConsumeInfos(
          int index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder builderForValue) {
        if (totalConsumeInfosBuilder_ == null) {
          ensureTotalConsumeInfosIsMutable();
          totalConsumeInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          totalConsumeInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder addTotalConsumeInfos(com.protos.festivalActive.Festivalactive.DrawPetRwdInfo value) {
        if (totalConsumeInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTotalConsumeInfosIsMutable();
          totalConsumeInfos_.add(value);
          onChanged();
        } else {
          totalConsumeInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder addTotalConsumeInfos(
          int index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo value) {
        if (totalConsumeInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTotalConsumeInfosIsMutable();
          totalConsumeInfos_.add(index, value);
          onChanged();
        } else {
          totalConsumeInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder addTotalConsumeInfos(
          com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder builderForValue) {
        if (totalConsumeInfosBuilder_ == null) {
          ensureTotalConsumeInfosIsMutable();
          totalConsumeInfos_.add(builderForValue.build());
          onChanged();
        } else {
          totalConsumeInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder addTotalConsumeInfos(
          int index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder builderForValue) {
        if (totalConsumeInfosBuilder_ == null) {
          ensureTotalConsumeInfosIsMutable();
          totalConsumeInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          totalConsumeInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder addAllTotalConsumeInfos(
          java.lang.Iterable<? extends com.protos.festivalActive.Festivalactive.DrawPetRwdInfo> values) {
        if (totalConsumeInfosBuilder_ == null) {
          ensureTotalConsumeInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, totalConsumeInfos_);
          onChanged();
        } else {
          totalConsumeInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder clearTotalConsumeInfos() {
        if (totalConsumeInfosBuilder_ == null) {
          totalConsumeInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          totalConsumeInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public Builder removeTotalConsumeInfos(int index) {
        if (totalConsumeInfosBuilder_ == null) {
          ensureTotalConsumeInfosIsMutable();
          totalConsumeInfos_.remove(index);
          onChanged();
        } else {
          totalConsumeInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder getTotalConsumeInfosBuilder(
          int index) {
        return getTotalConsumeInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder getTotalConsumeInfosOrBuilder(
          int index) {
        if (totalConsumeInfosBuilder_ == null) {
          return totalConsumeInfos_.get(index);  } else {
          return totalConsumeInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public java.util.List<? extends com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> 
           getTotalConsumeInfosOrBuilderList() {
        if (totalConsumeInfosBuilder_ != null) {
          return totalConsumeInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(totalConsumeInfos_);
        }
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder addTotalConsumeInfosBuilder() {
        return getTotalConsumeInfosFieldBuilder().addBuilder(
            com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder addTotalConsumeInfosBuilder(
          int index) {
        return getTotalConsumeInfosFieldBuilder().addBuilder(
            index, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *节日累计消耗，每个礼包领取状态
       * </pre>
       *
       * <code>repeated .com.protos.festivalActive.DrawPetRwdInfo totalConsumeInfos = 8;</code>
       */
      public java.util.List<com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder> 
           getTotalConsumeInfosBuilderList() {
        return getTotalConsumeInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protos.festivalActive.Festivalactive.DrawPetRwdInfo, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder> 
          getTotalConsumeInfosFieldBuilder() {
        if (totalConsumeInfosBuilder_ == null) {
          totalConsumeInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.protos.festivalActive.Festivalactive.DrawPetRwdInfo, com.protos.festivalActive.Festivalactive.DrawPetRwdInfo.Builder, com.protos.festivalActive.Festivalactive.DrawPetRwdInfoOrBuilder>(
                  totalConsumeInfos_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          totalConsumeInfos_ = null;
        }
        return totalConsumeInfosBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.FestivalActiveInfoACK)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.FestivalActiveInfoACK)
    private static final com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK();
    }

    public static com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FestivalActiveInfoACK>
        PARSER = new com.google.protobuf.AbstractParser<FestivalActiveInfoACK>() {
      public FestivalActiveInfoACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FestivalActiveInfoACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FestivalActiveInfoACK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FestivalActiveInfoACK> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.FestivalActiveInfoACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DrawPetREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.DrawPetREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *  祈愿石数量 1,10
     * </pre>
     *
     * <code>uint32 stoneCount = 1;</code>
     */
    int getStoneCount();

    /**
     * <pre>
     *0默认祈愿石数量充足，1祈愿石不足，自动扣除贝壳补足祈愿石
     * </pre>
     *
     * <code>uint32 type = 2;</code>
     */
    int getType();
  }
  /**
   * <pre>
   *节日抽宠活动
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.DrawPetREQ}
   */
  public  static final class DrawPetREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.DrawPetREQ)
      DrawPetREQOrBuilder {
    // Use DrawPetREQ.newBuilder() to construct.
    private DrawPetREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DrawPetREQ() {
      stoneCount_ = 0;
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DrawPetREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              stoneCount_ = input.readUInt32();
              break;
            }
            case 16: {

              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.DrawPetREQ.class, com.protos.festivalActive.Festivalactive.DrawPetREQ.Builder.class);
    }

    public static final int STONECOUNT_FIELD_NUMBER = 1;
    private int stoneCount_;
    /**
     * <pre>
     *  祈愿石数量 1,10
     * </pre>
     *
     * <code>uint32 stoneCount = 1;</code>
     */
    public int getStoneCount() {
      return stoneCount_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     *0默认祈愿石数量充足，1祈愿石不足，自动扣除贝壳补足祈愿石
     * </pre>
     *
     * <code>uint32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stoneCount_ != 0) {
        output.writeUInt32(1, stoneCount_);
      }
      if (type_ != 0) {
        output.writeUInt32(2, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (stoneCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, stoneCount_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.DrawPetREQ)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.DrawPetREQ other = (com.protos.festivalActive.Festivalactive.DrawPetREQ) obj;

      boolean result = true;
      result = result && (getStoneCount()
          == other.getStoneCount());
      result = result && (getType()
          == other.getType());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STONECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getStoneCount();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.DrawPetREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.DrawPetREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *节日抽宠活动
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.DrawPetREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.DrawPetREQ)
        com.protos.festivalActive.Festivalactive.DrawPetREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.DrawPetREQ.class, com.protos.festivalActive.Festivalactive.DrawPetREQ.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.DrawPetREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        stoneCount_ = 0;

        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_DrawPetREQ_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.DrawPetREQ getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.DrawPetREQ.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.DrawPetREQ build() {
        com.protos.festivalActive.Festivalactive.DrawPetREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.DrawPetREQ buildPartial() {
        com.protos.festivalActive.Festivalactive.DrawPetREQ result = new com.protos.festivalActive.Festivalactive.DrawPetREQ(this);
        result.stoneCount_ = stoneCount_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.DrawPetREQ) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.DrawPetREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.DrawPetREQ other) {
        if (other == com.protos.festivalActive.Festivalactive.DrawPetREQ.getDefaultInstance()) return this;
        if (other.getStoneCount() != 0) {
          setStoneCount(other.getStoneCount());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.DrawPetREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.DrawPetREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int stoneCount_ ;
      /**
       * <pre>
       *  祈愿石数量 1,10
       * </pre>
       *
       * <code>uint32 stoneCount = 1;</code>
       */
      public int getStoneCount() {
        return stoneCount_;
      }
      /**
       * <pre>
       *  祈愿石数量 1,10
       * </pre>
       *
       * <code>uint32 stoneCount = 1;</code>
       */
      public Builder setStoneCount(int value) {
        
        stoneCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  祈愿石数量 1,10
       * </pre>
       *
       * <code>uint32 stoneCount = 1;</code>
       */
      public Builder clearStoneCount() {
        
        stoneCount_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *0默认祈愿石数量充足，1祈愿石不足，自动扣除贝壳补足祈愿石
       * </pre>
       *
       * <code>uint32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *0默认祈愿石数量充足，1祈愿石不足，自动扣除贝壳补足祈愿石
       * </pre>
       *
       * <code>uint32 type = 2;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0默认祈愿石数量充足，1祈愿石不足，自动扣除贝壳补足祈愿石
       * </pre>
       *
       * <code>uint32 type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.DrawPetREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.DrawPetREQ)
    private static final com.protos.festivalActive.Festivalactive.DrawPetREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.DrawPetREQ();
    }

    public static com.protos.festivalActive.Festivalactive.DrawPetREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DrawPetREQ>
        PARSER = new com.google.protobuf.AbstractParser<DrawPetREQ>() {
      public DrawPetREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DrawPetREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DrawPetREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DrawPetREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.DrawPetREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetFestivalActiveRewardREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.GetFestivalActiveRewardREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *  1 首充，2连续充值 3累计充值,4礼包 7抽宠宝箱礼包 9消费好礼
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     * </pre>
     *
     * <code>uint32 giftId = 2;</code>
     */
    int getGiftId();
  }
  /**
   * <pre>
   *领取宝箱等奖励
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.GetFestivalActiveRewardREQ}
   */
  public  static final class GetFestivalActiveRewardREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.GetFestivalActiveRewardREQ)
      GetFestivalActiveRewardREQOrBuilder {
    // Use GetFestivalActiveRewardREQ.newBuilder() to construct.
    private GetFestivalActiveRewardREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetFestivalActiveRewardREQ() {
      type_ = 0;
      giftId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GetFestivalActiveRewardREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              type_ = input.readUInt32();
              break;
            }
            case 16: {

              giftId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ.class, com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *  1 首充，2连续充值 3累计充值,4礼包 7抽宠宝箱礼包 9消费好礼
     * </pre>
     *
     * <code>uint32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int GIFTID_FIELD_NUMBER = 2;
    private int giftId_;
    /**
     * <pre>
     * </pre>
     *
     * <code>uint32 giftId = 2;</code>
     */
    public int getGiftId() {
      return giftId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
      if (giftId_ != 0) {
        output.writeUInt32(2, giftId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (giftId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, giftId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ other = (com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ) obj;

      boolean result = true;
      result = result && (getType()
          == other.getType());
      result = result && (getGiftId()
          == other.getGiftId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + GIFTID_FIELD_NUMBER;
      hash = (53 * hash) + getGiftId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *领取宝箱等奖励
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.GetFestivalActiveRewardREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.GetFestivalActiveRewardREQ)
        com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ.class, com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        giftId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ build() {
        com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ buildPartial() {
        com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ result = new com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ(this);
        result.type_ = type_;
        result.giftId_ = giftId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ other) {
        if (other == com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getGiftId() != 0) {
          setGiftId(other.getGiftId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *  1 首充，2连续充值 3累计充值,4礼包 7抽宠宝箱礼包 9消费好礼
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *  1 首充，2连续充值 3累计充值,4礼包 7抽宠宝箱礼包 9消费好礼
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  1 首充，2连续充值 3累计充值,4礼包 7抽宠宝箱礼包 9消费好礼
       * </pre>
       *
       * <code>uint32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int giftId_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>uint32 giftId = 2;</code>
       */
      public int getGiftId() {
        return giftId_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>uint32 giftId = 2;</code>
       */
      public Builder setGiftId(int value) {
        
        giftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>uint32 giftId = 2;</code>
       */
      public Builder clearGiftId() {
        
        giftId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.GetFestivalActiveRewardREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.GetFestivalActiveRewardREQ)
    private static final com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ();
    }

    public static com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetFestivalActiveRewardREQ>
        PARSER = new com.google.protobuf.AbstractParser<GetFestivalActiveRewardREQ>() {
      public GetFestivalActiveRewardREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetFestivalActiveRewardREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetFestivalActiveRewardREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetFestivalActiveRewardREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.GetFestivalActiveRewardREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayLimitGiftEnterREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayLimitGiftEnterREQ)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   *进入节日限时礼包
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayLimitGiftEnterREQ}
   */
  public  static final class HolidayLimitGiftEnterREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayLimitGiftEnterREQ)
      HolidayLimitGiftEnterREQOrBuilder {
    // Use HolidayLimitGiftEnterREQ.newBuilder() to construct.
    private HolidayLimitGiftEnterREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayLimitGiftEnterREQ() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayLimitGiftEnterREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ.class, com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ other = (com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *进入节日限时礼包
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayLimitGiftEnterREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayLimitGiftEnterREQ)
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ.class, com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ build() {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ result = new com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayLimitGiftEnterREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayLimitGiftEnterREQ)
    private static final com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayLimitGiftEnterREQ>
        PARSER = new com.google.protobuf.AbstractParser<HolidayLimitGiftEnterREQ>() {
      public HolidayLimitGiftEnterREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayLimitGiftEnterREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayLimitGiftEnterREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayLimitGiftEnterREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayLimitGiftEnterACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayLimitGiftEnterACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *开启时间
     * </pre>
     *
     * <code>uint32 startTime = 1;</code>
     */
    int getStartTime();

    /**
     * <pre>
     *结束时间
     * </pre>
     *
     * <code>uint32 endTime = 2;</code>
     */
    int getEndTime();

    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */
    int getLimitGiftMapCount();
    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */
    boolean containsLimitGiftMap(
        int key);
    /**
     * Use {@link #getLimitGiftMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLimitGiftMap();
    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLimitGiftMapMap();
    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */

    int getLimitGiftMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */

    int getLimitGiftMapOrThrow(
        int key);
  }
  /**
   * <pre>
   *返回节日限时礼包
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayLimitGiftEnterACK}
   */
  public  static final class HolidayLimitGiftEnterACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayLimitGiftEnterACK)
      HolidayLimitGiftEnterACKOrBuilder {
    // Use HolidayLimitGiftEnterACK.newBuilder() to construct.
    private HolidayLimitGiftEnterACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayLimitGiftEnterACK() {
      startTime_ = 0;
      endTime_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayLimitGiftEnterACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              startTime_ = input.readUInt32();
              break;
            }
            case 16: {

              endTime_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                limitGiftMap_ = com.google.protobuf.MapField.newMapField(
                    LimitGiftMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              limitGiftMap__ = input.readMessage(
                  LimitGiftMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              limitGiftMap_.getMutableMap().put(
                  limitGiftMap__.getKey(), limitGiftMap__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetLimitGiftMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK.class, com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK.Builder.class);
    }

    private int bitField0_;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private int startTime_;
    /**
     * <pre>
     *开启时间
     * </pre>
     *
     * <code>uint32 startTime = 1;</code>
     */
    public int getStartTime() {
      return startTime_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 2;
    private int endTime_;
    /**
     * <pre>
     *结束时间
     * </pre>
     *
     * <code>uint32 endTime = 2;</code>
     */
    public int getEndTime() {
      return endTime_;
    }

    public static final int LIMITGIFTMAP_FIELD_NUMBER = 3;
    private static final class LimitGiftMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_LimitGiftMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> limitGiftMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLimitGiftMap() {
      if (limitGiftMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LimitGiftMapDefaultEntryHolder.defaultEntry);
      }
      return limitGiftMap_;
    }

    public int getLimitGiftMapCount() {
      return internalGetLimitGiftMap().getMap().size();
    }
    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */

    public boolean containsLimitGiftMap(
        int key) {
      
      return internalGetLimitGiftMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLimitGiftMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLimitGiftMap() {
      return getLimitGiftMapMap();
    }
    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLimitGiftMapMap() {
      return internalGetLimitGiftMap().getMap();
    }
    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */

    public int getLimitGiftMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLimitGiftMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *限时礼包map
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
     */

    public int getLimitGiftMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLimitGiftMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (startTime_ != 0) {
        output.writeUInt32(1, startTime_);
      }
      if (endTime_ != 0) {
        output.writeUInt32(2, endTime_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLimitGiftMap(),
          LimitGiftMapDefaultEntryHolder.defaultEntry,
          3);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (startTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, startTime_);
      }
      if (endTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, endTime_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLimitGiftMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        limitGiftMap__ = LimitGiftMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, limitGiftMap__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK other = (com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK) obj;

      boolean result = true;
      result = result && (getStartTime()
          == other.getStartTime());
      result = result && (getEndTime()
          == other.getEndTime());
      result = result && internalGetLimitGiftMap().equals(
          other.internalGetLimitGiftMap());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime();
      hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime();
      if (!internalGetLimitGiftMap().getMap().isEmpty()) {
        hash = (37 * hash) + LIMITGIFTMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLimitGiftMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *返回节日限时礼包
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayLimitGiftEnterACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayLimitGiftEnterACK)
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetLimitGiftMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableLimitGiftMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK.class, com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        startTime_ = 0;

        endTime_ = 0;

        internalGetMutableLimitGiftMap().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK build() {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK result = new com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.startTime_ = startTime_;
        result.endTime_ = endTime_;
        result.limitGiftMap_ = internalGetLimitGiftMap();
        result.limitGiftMap_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK.getDefaultInstance()) return this;
        if (other.getStartTime() != 0) {
          setStartTime(other.getStartTime());
        }
        if (other.getEndTime() != 0) {
          setEndTime(other.getEndTime());
        }
        internalGetMutableLimitGiftMap().mergeFrom(
            other.internalGetLimitGiftMap());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int startTime_ ;
      /**
       * <pre>
       *开启时间
       * </pre>
       *
       * <code>uint32 startTime = 1;</code>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <pre>
       *开启时间
       * </pre>
       *
       * <code>uint32 startTime = 1;</code>
       */
      public Builder setStartTime(int value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开启时间
       * </pre>
       *
       * <code>uint32 startTime = 1;</code>
       */
      public Builder clearStartTime() {
        
        startTime_ = 0;
        onChanged();
        return this;
      }

      private int endTime_ ;
      /**
       * <pre>
       *结束时间
       * </pre>
       *
       * <code>uint32 endTime = 2;</code>
       */
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <pre>
       *结束时间
       * </pre>
       *
       * <code>uint32 endTime = 2;</code>
       */
      public Builder setEndTime(int value) {
        
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结束时间
       * </pre>
       *
       * <code>uint32 endTime = 2;</code>
       */
      public Builder clearEndTime() {
        
        endTime_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> limitGiftMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLimitGiftMap() {
        if (limitGiftMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LimitGiftMapDefaultEntryHolder.defaultEntry);
        }
        return limitGiftMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLimitGiftMap() {
        onChanged();;
        if (limitGiftMap_ == null) {
          limitGiftMap_ = com.google.protobuf.MapField.newMapField(
              LimitGiftMapDefaultEntryHolder.defaultEntry);
        }
        if (!limitGiftMap_.isMutable()) {
          limitGiftMap_ = limitGiftMap_.copy();
        }
        return limitGiftMap_;
      }

      public int getLimitGiftMapCount() {
        return internalGetLimitGiftMap().getMap().size();
      }
      /**
       * <pre>
       *限时礼包map
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
       */

      public boolean containsLimitGiftMap(
          int key) {
        
        return internalGetLimitGiftMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLimitGiftMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLimitGiftMap() {
        return getLimitGiftMapMap();
      }
      /**
       * <pre>
       *限时礼包map
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLimitGiftMapMap() {
        return internalGetLimitGiftMap().getMap();
      }
      /**
       * <pre>
       *限时礼包map
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
       */

      public int getLimitGiftMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLimitGiftMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *限时礼包map
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
       */

      public int getLimitGiftMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLimitGiftMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLimitGiftMap() {
        internalGetMutableLimitGiftMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *限时礼包map
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
       */

      public Builder removeLimitGiftMap(
          int key) {
        
        internalGetMutableLimitGiftMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLimitGiftMap() {
        return internalGetMutableLimitGiftMap().getMutableMap();
      }
      /**
       * <pre>
       *限时礼包map
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
       */
      public Builder putLimitGiftMap(
          int key,
          int value) {
        
        
        internalGetMutableLimitGiftMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *限时礼包map
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 3;</code>
       */

      public Builder putAllLimitGiftMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLimitGiftMap().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayLimitGiftEnterACK)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayLimitGiftEnterACK)
    private static final com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayLimitGiftEnterACK>
        PARSER = new com.google.protobuf.AbstractParser<HolidayLimitGiftEnterACK>() {
      public HolidayLimitGiftEnterACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayLimitGiftEnterACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayLimitGiftEnterACK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayLimitGiftEnterACK> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayLimitGiftEnterACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayLimitGiftBuyREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayLimitGiftBuyREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *礼包id
     * </pre>
     *
     * <code>uint32 giftId = 1;</code>
     */
    int getGiftId();
  }
  /**
   * <pre>
   *请求购买节日限时礼包
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayLimitGiftBuyREQ}
   */
  public  static final class HolidayLimitGiftBuyREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayLimitGiftBuyREQ)
      HolidayLimitGiftBuyREQOrBuilder {
    // Use HolidayLimitGiftBuyREQ.newBuilder() to construct.
    private HolidayLimitGiftBuyREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayLimitGiftBuyREQ() {
      giftId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayLimitGiftBuyREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              giftId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ.class, com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ.Builder.class);
    }

    public static final int GIFTID_FIELD_NUMBER = 1;
    private int giftId_;
    /**
     * <pre>
     *礼包id
     * </pre>
     *
     * <code>uint32 giftId = 1;</code>
     */
    public int getGiftId() {
      return giftId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (giftId_ != 0) {
        output.writeUInt32(1, giftId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (giftId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, giftId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ other = (com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ) obj;

      boolean result = true;
      result = result && (getGiftId()
          == other.getGiftId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GIFTID_FIELD_NUMBER;
      hash = (53 * hash) + getGiftId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *请求购买节日限时礼包
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayLimitGiftBuyREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayLimitGiftBuyREQ)
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ.class, com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        giftId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ build() {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ result = new com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ(this);
        result.giftId_ = giftId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ.getDefaultInstance()) return this;
        if (other.getGiftId() != 0) {
          setGiftId(other.getGiftId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int giftId_ ;
      /**
       * <pre>
       *礼包id
       * </pre>
       *
       * <code>uint32 giftId = 1;</code>
       */
      public int getGiftId() {
        return giftId_;
      }
      /**
       * <pre>
       *礼包id
       * </pre>
       *
       * <code>uint32 giftId = 1;</code>
       */
      public Builder setGiftId(int value) {
        
        giftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *礼包id
       * </pre>
       *
       * <code>uint32 giftId = 1;</code>
       */
      public Builder clearGiftId() {
        
        giftId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayLimitGiftBuyREQ)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayLimitGiftBuyREQ)
    private static final com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayLimitGiftBuyREQ>
        PARSER = new com.google.protobuf.AbstractParser<HolidayLimitGiftBuyREQ>() {
      public HolidayLimitGiftBuyREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayLimitGiftBuyREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayLimitGiftBuyREQ> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayLimitGiftBuyREQ> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HolidayLimitGiftBuyACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.festivalActive.HolidayLimitGiftBuyACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */
    int getLimitGiftMapCount();
    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */
    boolean containsLimitGiftMap(
        int key);
    /**
     * Use {@link #getLimitGiftMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLimitGiftMap();
    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLimitGiftMapMap();
    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */

    int getLimitGiftMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */

    int getLimitGiftMapOrThrow(
        int key);
  }
  /**
   * <pre>
   *返回购买节日限时礼包
   * </pre>
   *
   * Protobuf type {@code com.protos.festivalActive.HolidayLimitGiftBuyACK}
   */
  public  static final class HolidayLimitGiftBuyACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.festivalActive.HolidayLimitGiftBuyACK)
      HolidayLimitGiftBuyACKOrBuilder {
    // Use HolidayLimitGiftBuyACK.newBuilder() to construct.
    private HolidayLimitGiftBuyACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HolidayLimitGiftBuyACK() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HolidayLimitGiftBuyACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                limitGiftMap_ = com.google.protobuf.MapField.newMapField(
                    LimitGiftMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              limitGiftMap__ = input.readMessage(
                  LimitGiftMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              limitGiftMap_.getMutableMap().put(
                  limitGiftMap__.getKey(), limitGiftMap__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetLimitGiftMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK.class, com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK.Builder.class);
    }

    public static final int LIMITGIFTMAP_FIELD_NUMBER = 1;
    private static final class LimitGiftMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_LimitGiftMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> limitGiftMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLimitGiftMap() {
      if (limitGiftMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LimitGiftMapDefaultEntryHolder.defaultEntry);
      }
      return limitGiftMap_;
    }

    public int getLimitGiftMapCount() {
      return internalGetLimitGiftMap().getMap().size();
    }
    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */

    public boolean containsLimitGiftMap(
        int key) {
      
      return internalGetLimitGiftMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLimitGiftMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLimitGiftMap() {
      return getLimitGiftMapMap();
    }
    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLimitGiftMapMap() {
      return internalGetLimitGiftMap().getMap();
    }
    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */

    public int getLimitGiftMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLimitGiftMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *礼包信息
     * </pre>
     *
     * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
     */

    public int getLimitGiftMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLimitGiftMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLimitGiftMap(),
          LimitGiftMapDefaultEntryHolder.defaultEntry,
          1);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLimitGiftMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        limitGiftMap__ = LimitGiftMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, limitGiftMap__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK)) {
        return super.equals(obj);
      }
      com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK other = (com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK) obj;

      boolean result = true;
      result = result && internalGetLimitGiftMap().equals(
          other.internalGetLimitGiftMap());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetLimitGiftMap().getMap().isEmpty()) {
        hash = (37 * hash) + LIMITGIFTMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLimitGiftMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *返回购买节日限时礼包
     * </pre>
     *
     * Protobuf type {@code com.protos.festivalActive.HolidayLimitGiftBuyACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.festivalActive.HolidayLimitGiftBuyACK)
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetLimitGiftMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableLimitGiftMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK.class, com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK.Builder.class);
      }

      // Construct using com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableLimitGiftMap().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protos.festivalActive.Festivalactive.internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_descriptor;
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK getDefaultInstanceForType() {
        return com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK.getDefaultInstance();
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK build() {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK buildPartial() {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK result = new com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK(this);
        int from_bitField0_ = bitField0_;
        result.limitGiftMap_ = internalGetLimitGiftMap();
        result.limitGiftMap_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK) {
          return mergeFrom((com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK other) {
        if (other == com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK.getDefaultInstance()) return this;
        internalGetMutableLimitGiftMap().mergeFrom(
            other.internalGetLimitGiftMap());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> limitGiftMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLimitGiftMap() {
        if (limitGiftMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LimitGiftMapDefaultEntryHolder.defaultEntry);
        }
        return limitGiftMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLimitGiftMap() {
        onChanged();;
        if (limitGiftMap_ == null) {
          limitGiftMap_ = com.google.protobuf.MapField.newMapField(
              LimitGiftMapDefaultEntryHolder.defaultEntry);
        }
        if (!limitGiftMap_.isMutable()) {
          limitGiftMap_ = limitGiftMap_.copy();
        }
        return limitGiftMap_;
      }

      public int getLimitGiftMapCount() {
        return internalGetLimitGiftMap().getMap().size();
      }
      /**
       * <pre>
       *礼包信息
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
       */

      public boolean containsLimitGiftMap(
          int key) {
        
        return internalGetLimitGiftMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLimitGiftMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLimitGiftMap() {
        return getLimitGiftMapMap();
      }
      /**
       * <pre>
       *礼包信息
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLimitGiftMapMap() {
        return internalGetLimitGiftMap().getMap();
      }
      /**
       * <pre>
       *礼包信息
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
       */

      public int getLimitGiftMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLimitGiftMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *礼包信息
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
       */

      public int getLimitGiftMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLimitGiftMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLimitGiftMap() {
        internalGetMutableLimitGiftMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *礼包信息
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
       */

      public Builder removeLimitGiftMap(
          int key) {
        
        internalGetMutableLimitGiftMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLimitGiftMap() {
        return internalGetMutableLimitGiftMap().getMutableMap();
      }
      /**
       * <pre>
       *礼包信息
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
       */
      public Builder putLimitGiftMap(
          int key,
          int value) {
        
        
        internalGetMutableLimitGiftMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *礼包信息
       * </pre>
       *
       * <code>map&lt;uint32, uint32&gt; limitGiftMap = 1;</code>
       */

      public Builder putAllLimitGiftMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLimitGiftMap().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.festivalActive.HolidayLimitGiftBuyACK)
    }

    // @@protoc_insertion_point(class_scope:com.protos.festivalActive.HolidayLimitGiftBuyACK)
    private static final com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK();
    }

    public static com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HolidayLimitGiftBuyACK>
        PARSER = new com.google.protobuf.AbstractParser<HolidayLimitGiftBuyACK>() {
      public HolidayLimitGiftBuyACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HolidayLimitGiftBuyACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HolidayLimitGiftBuyACK> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HolidayLimitGiftBuyACK> getParserForType() {
      return PARSER;
    }

    public com.protos.festivalActive.Festivalactive.HolidayLimitGiftBuyACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_TaskMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_TaskMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_AwardInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_AwardInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_TaskInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_TaskInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_UpdateTaskEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_UpdateTaskEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_DrawPetRwdInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_DrawPetRwdInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_DrawPetLogInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_DrawPetLogInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_FestivalActiveInfoACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_FestivalActiveInfoACK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_DrawPetREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_DrawPetREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_LimitGiftMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_LimitGiftMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_LimitGiftMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_LimitGiftMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024festivalactive.proto\022\031com.protos.festi" +
      "valActive\"\026\n\024HolidayPuzzleDataREQ\"\250\002\n\024Ho" +
      "lidayPuzzleDataACK\022\021\n\tstartTime\030\001 \001(\r\022\017\n" +
      "\007endTime\030\002 \001(\r\022\016\n\006points\030\003 \001(\r\022M\n\007taskMa" +
      "p\030\004 \003(\0132<.com.protos.festivalActive.Holi" +
      "dayPuzzleDataACK.TaskMapEntry\0228\n\nawardIn" +
      "fos\030\005 \003(\0132$.com.protos.festivalActive.Aw" +
      "ardInfo\032S\n\014TaskMapEntry\022\013\n\003key\030\001 \001(\r\0222\n\005" +
      "value\030\002 \001(\0132#.com.protos.festivalActive." +
      "TaskInfo:\0028\001\"-\n\tAwardInfo\022\021\n\tawardSite\030\001",
      " \001(\r\022\r\n\005state\030\002 \001(\r\"I\n\010TaskInfo\022\021\n\taccep" +
      "tNum\030\001 \001(\r\022\025\n\rtodayComplete\030\002 \001(\r\022\023\n\013all" +
      "Complete\030\003 \001(\r\".\n\033HolidayPuzzleAcceptAwa" +
      "rdREQ\022\017\n\007awardId\030\001 \001(\r\"f\n\033HolidayPuzzleA" +
      "cceptAwardACK\0227\n\tawardInfo\030\001 \003(\0132$.com.p" +
      "rotos.festivalActive.AwardInfo\022\016\n\006points" +
      "\030\002 \001(\r\"0\n\036HolidayPuzzleAccomplishTaskREQ" +
      "\022\016\n\006taskId\030\001 \001(\r\"\347\001\n\036HolidayPuzzleAccomp" +
      "lishTaskACK\022]\n\nupdateTask\030\001 \003(\0132I.com.pr" +
      "otos.festivalActive.HolidayPuzzleAccompl",
      "ishTaskACK.UpdateTaskEntry\022\016\n\006points\030\002 \001" +
      "(\r\032V\n\017UpdateTaskEntry\022\013\n\003key\030\001 \001(\r\0222\n\005va" +
      "lue\030\002 \001(\0132#.com.protos.festivalActive.Ta" +
      "skInfo:\0028\001\"%\n\025FestivalActiveInfoREQ\022\014\n\004t" +
      "ype\030\001 \001(\r\"0\n\016DrawPetRwdInfo\022\016\n\006giftId\030\001 " +
      "\001(\r\022\016\n\006status\030\002 \001(\r\"S\n\016DrawPetLogInfo\022\020\n" +
      "\010playerId\030\001 \001(\004\022\014\n\004time\030\002 \001(\004\022\r\n\005items\030\003" +
      " \001(\t\022\022\n\nplayerName\030\004 \001(\t\"\307\002\n\025FestivalAct" +
      "iveInfoACK\022\014\n\004type\030\001 \001(\r\022\023\n\013betweenTime\030" +
      "\002 \001(\r\022\020\n\010overTime\030\003 \001(\r\022\024\n\014drawPetCount\030",
      "\004 \001(\r\022\023\n\013consumeGold\030\005 \001(\r\022B\n\017drawPetRwd" +
      "Infos\030\006 \003(\0132).com.protos.festivalActive." +
      "DrawPetRwdInfo\022D\n\021playerDrawPetLogs\030\007 \003(" +
      "\0132).com.protos.festivalActive.DrawPetLog" +
      "Info\022D\n\021totalConsumeInfos\030\010 \003(\0132).com.pr" +
      "otos.festivalActive.DrawPetRwdInfo\".\n\nDr" +
      "awPetREQ\022\022\n\nstoneCount\030\001 \001(\r\022\014\n\004type\030\002 \001" +
      "(\r\":\n\032GetFestivalActiveRewardREQ\022\014\n\004type" +
      "\030\001 \001(\r\022\016\n\006giftId\030\002 \001(\r\"\032\n\030HolidayLimitGi" +
      "ftEnterREQ\"\320\001\n\030HolidayLimitGiftEnterACK\022",
      "\021\n\tstartTime\030\001 \001(\r\022\017\n\007endTime\030\002 \001(\r\022[\n\014l" +
      "imitGiftMap\030\003 \003(\0132E.com.protos.festivalA" +
      "ctive.HolidayLimitGiftEnterACK.LimitGift" +
      "MapEntry\0323\n\021LimitGiftMapEntry\022\013\n\003key\030\001 \001" +
      "(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"(\n\026HolidayLimitGif" +
      "tBuyREQ\022\016\n\006giftId\030\001 \001(\r\"\250\001\n\026HolidayLimit" +
      "GiftBuyACK\022Y\n\014limitGiftMap\030\001 \003(\0132C.com.p" +
      "rotos.festivalActive.HolidayLimitGiftBuy" +
      "ACK.LimitGiftMapEntry\0323\n\021LimitGiftMapEnt" +
      "ry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001b\006prot",
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayPuzzleDataREQ_descriptor,
        new java.lang.String[] { });
    internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_descriptor,
        new java.lang.String[] { "StartTime", "EndTime", "Points", "TaskMap", "AwardInfos", });
    internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_TaskMapEntry_descriptor =
      internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_descriptor.getNestedTypes().get(0);
    internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_TaskMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayPuzzleDataACK_TaskMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_protos_festivalActive_AwardInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_protos_festivalActive_AwardInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_AwardInfo_descriptor,
        new java.lang.String[] { "AwardSite", "State", });
    internal_static_com_protos_festivalActive_TaskInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_protos_festivalActive_TaskInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_TaskInfo_descriptor,
        new java.lang.String[] { "AcceptNum", "TodayComplete", "AllComplete", });
    internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardREQ_descriptor,
        new java.lang.String[] { "AwardId", });
    internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayPuzzleAcceptAwardACK_descriptor,
        new java.lang.String[] { "AwardInfo", "Points", });
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskREQ_descriptor,
        new java.lang.String[] { "TaskId", });
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_descriptor,
        new java.lang.String[] { "UpdateTask", "Points", });
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_UpdateTaskEntry_descriptor =
      internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_descriptor.getNestedTypes().get(0);
    internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_UpdateTaskEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayPuzzleAccomplishTaskACK_UpdateTaskEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_FestivalActiveInfoREQ_descriptor,
        new java.lang.String[] { "Type", });
    internal_static_com_protos_festivalActive_DrawPetRwdInfo_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_protos_festivalActive_DrawPetRwdInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_DrawPetRwdInfo_descriptor,
        new java.lang.String[] { "GiftId", "Status", });
    internal_static_com_protos_festivalActive_DrawPetLogInfo_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_protos_festivalActive_DrawPetLogInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_DrawPetLogInfo_descriptor,
        new java.lang.String[] { "PlayerId", "Time", "Items", "PlayerName", });
    internal_static_com_protos_festivalActive_FestivalActiveInfoACK_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_protos_festivalActive_FestivalActiveInfoACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_FestivalActiveInfoACK_descriptor,
        new java.lang.String[] { "Type", "BetweenTime", "OverTime", "DrawPetCount", "ConsumeGold", "DrawPetRwdInfos", "PlayerDrawPetLogs", "TotalConsumeInfos", });
    internal_static_com_protos_festivalActive_DrawPetREQ_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_protos_festivalActive_DrawPetREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_DrawPetREQ_descriptor,
        new java.lang.String[] { "StoneCount", "Type", });
    internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_GetFestivalActiveRewardREQ_descriptor,
        new java.lang.String[] { "Type", "GiftId", });
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayLimitGiftEnterREQ_descriptor,
        new java.lang.String[] { });
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_descriptor,
        new java.lang.String[] { "StartTime", "EndTime", "LimitGiftMap", });
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_LimitGiftMapEntry_descriptor =
      internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_descriptor.getNestedTypes().get(0);
    internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_LimitGiftMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayLimitGiftEnterACK_LimitGiftMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayLimitGiftBuyREQ_descriptor,
        new java.lang.String[] { "GiftId", });
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_descriptor,
        new java.lang.String[] { "LimitGiftMap", });
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_LimitGiftMapEntry_descriptor =
      internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_descriptor.getNestedTypes().get(0);
    internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_LimitGiftMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_festivalActive_HolidayLimitGiftBuyACK_LimitGiftMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
