// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package com.protos.message;

public final class Message {
  private Message() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MessageEnumOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.protos.message.MessageEnum)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.protos.message.MessageEnum}
   */
  public  static final class MessageEnum extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.protos.message.MessageEnum)
      MessageEnumOrBuilder {
    // Use MessageEnum.newBuilder() to construct.
    private MessageEnum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageEnum() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MessageEnum(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Message.internal_static_com_protos_message_MessageEnum_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Message.internal_static_com_protos_message_MessageEnum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MessageEnum.class, Builder.class);
    }

    /**
     * Protobuf enum {@code com.protos.message.MessageEnum.MessageID}
     */
    public enum MessageID
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * 测试
       * </pre>
       *
       * <code>ZeroTest = 0;</code>
       */
      ZeroTest(0),
      /**
       * <pre>
       * 飘字
       * </pre>
       *
       * <code>FolatMsg = 1001;</code>
       */
      FolatMsg(1001),
      /**
       * <pre>
       * 弹框
       * </pre>
       *
       * <code>AlertMsg = 1002;</code>
       */
      AlertMsg(1002),
      /**
       * <pre>
       *心跳  
       * </pre>
       *
       * <code>HeartREQ = 1003;</code>
       */
      HeartREQ(1003),
      /**
       * <pre>
       *心跳 
       * </pre>
       *
       * <code>HeartACK = 1004;</code>
       */
      HeartACK(1004),
      /**
       * <pre>
       *报错发送到服务器
       * </pre>
       *
       * <code>ExceptionREQ = 1005;</code>
       */
      ExceptionREQ(1005),
      /**
       * <pre>
       *服务器报错发送
       * </pre>
       *
       * <code>ExceptionACK = 1006;</code>
       */
      ExceptionACK(1006),
      /**
       * <pre>
       *停服公告
       * </pre>
       *
       * <code>StopServerNoticeACK = 1007;</code>
       */
      StopServerNoticeACK(1007),
      /**
       * <pre>
       * </pre>
       *
       * <code>InitSocket = 1008;</code>
       */
      InitSocket(1008),
      /**
       * <pre>
       *获取版本信息 http
       * </pre>
       *
       * <code>GetVInfo = 1009;</code>
       */
      GetVInfo(1009),
      /**
       * <pre>
       *客户端测试日志 http
       * </pre>
       *
       * <code>ClientTestLogREQ = 2000;</code>
       */
      ClientTestLogREQ(2000),
      /**
       * <pre>
       *帐号登录 http
       * </pre>
       *
       * <code>LoginAccountREQ = 2001;</code>
       */
      LoginAccountREQ(2001),
      /**
       * <pre>
       *帐号登录返回 http
       * </pre>
       *
       * <code>LoginAccountACK = 2002;</code>
       */
      LoginAccountACK(2002),
      /**
       * <pre>
       *创建帐号 http
       * </pre>
       *
       * <code>CreateAccountREQ = 2003;</code>
       */
      CreateAccountREQ(2003),
      /**
       * <pre>
       *创建帐号 http
       * </pre>
       *
       * <code>CreateAccountACK = 2004;</code>
       */
      CreateAccountACK(2004),
      /**
       * <pre>
       *获取手机验证码 http
       * </pre>
       *
       * <code>GetAccountCoedREQ = 2005;</code>
       */
      GetAccountCoedREQ(2005),
      /**
       * <pre>
       *分页获取正试服 http
       * </pre>
       *
       * <code>GetPageServerConfigREQ = 2006;</code>
       */
      GetPageServerConfigREQ(2006),
      /**
       * <pre>
       *创建登录趣炫  http
       * </pre>
       *
       * <code>QxCreateAccountREQ = 2007;</code>
       */
      QxCreateAccountREQ(2007),
      /**
       * <pre>
       *请求服务器加入防沉迷 {"userAccount":"唯一用户名","idNum":"身份证","name":"姓名"}
       * </pre>
       *
       * <code>AntiAddictionREQ = 2008;</code>
       */
      AntiAddictionREQ(2008),
      /**
       * <pre>
       *请求服务器校验防沉迷是否实名成功{"userAccount":"唯一用户名"}
       * </pre>
       *
       * <code>AgainVerifyAntiAddictionREQ = 2009;</code>
       */
      AgainVerifyAntiAddictionREQ(2009),
      /**
       * <pre>
       *进入游戏 http
       * </pre>
       *
       * <code>LoginGameREQ = 3001;</code>
       */
      LoginGameREQ(3001),
      /**
       * <pre>
       *进入游戏返回 http
       * </pre>
       *
       * <code>LoginGameACK = 3002;</code>
       */
      LoginGameACK(3002),
      /**
       * <pre>
       *请求服务器随机生成的游戏名 http
       * </pre>
       *
       * <code>RandomCreateNickNameREQ = 3003;</code>
       */
      RandomCreateNickNameREQ(3003),
      /**
       * <pre>
       *创建人物 http
       * </pre>
       *
       * <code>CreatePlayerREQ = 100004;</code>
       */
      CreatePlayerREQ(100004),
      /**
       * <pre>
       *创建人物 http
       * </pre>
       *
       * <code>CreatePlayerACK = 100005;</code>
       */
      CreatePlayerACK(100005),
      /**
       * <pre>
       *player
       * </pre>
       *
       * <code>LoginPlayerREQ = 100001;</code>
       */
      LoginPlayerREQ(100001),
      /**
       * <pre>
       *人物进入游戏
       * </pre>
       *
       * <code>LoginPlayerACK = 100002;</code>
       */
      LoginPlayerACK(100002),
      /**
       * <pre>
       *其它人物登录
       * </pre>
       *
       * <code>PlayerLoginOut = 100003;</code>
       */
      PlayerLoginOut(100003),
      /**
       * <pre>
       *阵型 战术策略 所有信息
       * </pre>
       *
       * <code>FormationInfoACK = 100006;</code>
       */
      FormationInfoACK(100006),
      /**
       * <pre>
       *主角属性
       * </pre>
       *
       * <code>HeroAttaributeACK = 100007;</code>
       */
      HeroAttaributeACK(100007),
      /**
       * <pre>
       *修改玩家动作
       * </pre>
       *
       * <code>HeroUpdateActionACK = 100008;</code>
       */
      HeroUpdateActionACK(100008),
      /**
       * <pre>
       *显示其它人信息
       * </pre>
       *
       * <code>ShowOtherPlayer = 100009;</code>
       */
      ShowOtherPlayer(100009),
      /**
       * <pre>
       *获取宠物伙伴详细属性
       * </pre>
       *
       * <code>HeroAttaributeREQ = 100010;</code>
       */
      HeroAttaributeREQ(100010),
      /**
       * <pre>
       *调整上阵 
       * </pre>
       *
       * <code>FormationUpdateREQ = 100011;</code>
       */
      FormationUpdateREQ(100011),
      /**
       * <pre>
       *人物属性修改近回
       * </pre>
       *
       * <code>UpdatePlayerACK = 100012;</code>
       */
      UpdatePlayerACK(100012),
      /**
       * <pre>
       *调试模式gm请求
       * </pre>
       *
       * <code>GmCmdREQ = 100013;</code>
       */
      GmCmdREQ(100013),
      /**
       * <pre>
       *删除宠物伙伴
       * </pre>
       *
       * <code>DelHeroREQ = 100014;</code>
       */
      DelHeroREQ(100014),
      /**
       * <pre>
       *加点描述
       * </pre>
       *
       * <code>GrowPointDesREQ = 100015;</code>
       */
      GrowPointDesREQ(100015),
      /**
       * <pre>
       *加点描述返回
       * </pre>
       *
       * <code>GrowPointDesACK = 100016;</code>
       */
      GrowPointDesACK(100016),
      /**
       * <pre>
       *购买体力
       * </pre>
       *
       * <code>StamtnaBuyREQ = 100017;</code>
       */
      StamtnaBuyREQ(100017),
      /**
       * <pre>
       *购买体力信息返回
       * </pre>
       *
       * <code>StamtnaBuyACK = 100018;</code>
       */
      StamtnaBuyACK(100018),
      /**
       * <pre>
       *请求宠物献祭获得道具
       * </pre>
       *
       * <code>DismissHeroRebateItemREQ = 100019;</code>
       */
      DismissHeroRebateItemREQ(100019),
      /**
       * <pre>
       *返回宠物献祭获得道具
       * </pre>
       *
       * <code>DismissHeroRebateItemACK = 100020;</code>
       */
      DismissHeroRebateItemACK(100020),
      /**
       * <pre>
       *初始化完成
       * </pre>
       *
       * <code>InitPlayerFinishACK = 100021;</code>
       */
      InitPlayerFinishACK(100021),
      /**
       * <pre>
       *请求屏蔽其他玩家
       * </pre>
       *
       * <code>ShieldOtherPlayerREQ = 100037;</code>
       */
      ShieldOtherPlayerREQ(100037),
      /**
       * <pre>
       *返回玩家系统设置
       * </pre>
       *
       * <code>ShieldOtherPlayerACK = 100038;</code>
       */
      ShieldOtherPlayerACK(100038),
      /**
       * <pre>
       *屏蔽骑宠技能
       * </pre>
       *
       * <code>ShieldRidingPetSkillREQ = 100039;</code>
       */
      ShieldRidingPetSkillREQ(100039),
      /**
       * <pre>
       *支付成功响应
       * </pre>
       *
       * <code>PaySuccACK = 100040;</code>
       */
      PaySuccACK(100040),
      /**
       * <pre>
       *请求组队游戏加速
       * </pre>
       *
       * <code>FightExpediteREQ = 100041;</code>
       */
      FightExpediteREQ(100041),
      /**
       * <pre>
       *响应组队游戏加速
       * </pre>
       *
       * <code>FightExpediteACK = 100042;</code>
       */
      FightExpediteACK(100042),
      /**
       * <pre>
       *bag
       * </pre>
       *
       * <code>AllItemInfosACK = 110001;</code>
       */
      AllItemInfosACK(110001),
      /**
       * <pre>
       *穿装备 
       * </pre>
       *
       * <code>EquipClothingREQ = 110002;</code>
       */
      EquipClothingREQ(110002),
      /**
       * <pre>
       *脱装备
       * </pre>
       *
       * <code>UnEquipClothingREQ = 110003;</code>
       */
      UnEquipClothingREQ(110003),
      /**
       * <pre>
       *一键传装备
       * </pre>
       *
       * <code>AutoEquipClothingREQ = 110004;</code>
       */
      AutoEquipClothingREQ(110004),
      /**
       * <pre>
       *全脱 
       * </pre>
       *
       * <code>UnAllEquipClothingREQ = 110005;</code>
       */
      UnAllEquipClothingREQ(110005),
      /**
       * <pre>
       *物品信息改变
       * </pre>
       *
       * <code>ItemInfoUpdateACK = 110006;</code>
       */
      ItemInfoUpdateACK(110006),
      /**
       * <pre>
       *添加物品让前端飘动画
       * </pre>
       *
       * <code>ItemAdminInfoACK = 110007;</code>
       */
      ItemAdminInfoACK(110007),
      /**
       * <pre>
       *丢弃物品
       * </pre>
       *
       * <code>ItemDropREQ = 110008;</code>
       */
      ItemDropREQ(110008),
      /**
       * <pre>
       *使用普通物品（非装备)
       * </pre>
       *
       * <code>ItemUseREQ = 110009;</code>
       */
      ItemUseREQ(110009),
      /**
       * <pre>
       *合并物品
       * </pre>
       *
       * <code>ItemMergeREQ = 110010;</code>
       */
      ItemMergeREQ(110010),
      /**
       * <pre>
       *拆分物品
       * </pre>
       *
       * <code>ItemSplitREQ = 110011;</code>
       */
      ItemSplitREQ(110011),
      /**
       * <pre>
       *打开格子
       * </pre>
       *
       * <code>ItemOpenREQ = 110012;</code>
       */
      ItemOpenREQ(110012),
      /**
       * <pre>
       *更新格子数量信息
       * </pre>
       *
       * <code>ItemUpdateGirdACK = 110013;</code>
       */
      ItemUpdateGirdACK(110013),
      /**
       * <pre>
       *查看分享物品
       * </pre>
       *
       * <code>ItemShareLookREQ = 110014;</code>
       */
      ItemShareLookREQ(110014),
      /**
       * <pre>
       *查看分享物品
       * </pre>
       *
       * <code>ItemShareLookACK = 110015;</code>
       */
      ItemShareLookACK(110015),
      /**
       * <pre>
       *出售物品
       * </pre>
       *
       * <code>ItemSellREQ = 110016;</code>
       */
      ItemSellREQ(110016),
      /**
       * <pre>
       *获得宠物飘动画
       * </pre>
       *
       * <code>ItemHeroACK = 110017;</code>
       */
      ItemHeroACK(110017),
      /**
       * <pre>
       *碎片合成
       * </pre>
       *
       * <code>ItemHecengREQ = 110019;</code>
       */
      ItemHecengREQ(110019),
      /**
       * <pre>
       *整理物品
       * </pre>
       *
       * <code>ItemClearREQ = 110020;</code>
       */
      ItemClearREQ(110020),
      /**
       * <pre>
       *skill
       * </pre>
       *
       * <code>SkillInfosACK = 120001;</code>
       */
      SkillInfosACK(120001),
      /**
       * <pre>
       *技能学习或者说激活
       * </pre>
       *
       * <code>StudySkillREQ = 120002;</code>
       */
      StudySkillREQ(120002),
      /**
       * <pre>
       *装备技能
       * </pre>
       *
       * <code>FixSkillREQ = 120003;</code>
       */
      FixSkillREQ(120003),
      /**
       * <pre>
       *切换转职技能 
       * </pre>
       *
       * <code>SwitchoverSkillREQ = 120004;</code>
       */
      SwitchoverSkillREQ(120004),
      /**
       * <pre>
       *请求开启转职技能
       * </pre>
       *
       * <code>EnableSubjoinSkillREQ = 120005;</code>
       */
      EnableSubjoinSkillREQ(120005),
      /**
       * <pre>
       *返回开启转职技能		
       * </pre>
       *
       * <code>EnableSubjoinSkillACK = 120006;</code>
       */
      EnableSubjoinSkillACK(120006),
      /**
       * <pre>
       *task
       * </pre>
       *
       * <code>TaskInitACK = 130001;</code>
       */
      TaskInitACK(130001),
      /**
       * <pre>
       *完成新手步骤 
       * </pre>
       *
       * <code>TaskGuideREQ = 130002;</code>
       */
      TaskGuideREQ(130002),
      /**
       * <pre>
       *接受任务 
       * </pre>
       *
       * <code>TaskAcceptREQ = 130003;</code>
       */
      TaskAcceptREQ(130003),
      /**
       * <pre>
       *放弃任务 
       * </pre>
       *
       * <code>TaskGiveREQ = 130004;</code>
       */
      TaskGiveREQ(130004),
      /**
       * <pre>
       *完成任务 
       * </pre>
       *
       * <code>TaskComPleteREQ = 130005;</code>
       */
      TaskComPleteREQ(130005),
      /**
       * <pre>
       *与NPC说话
       * </pre>
       *
       * <code>TaskTalkREQ = 130006;</code>
       */
      TaskTalkREQ(130006),
      /**
       * <pre>
       *任务采集
       * </pre>
       *
       * <code>TaskCollectREQ = 130007;</code>
       */
      TaskCollectREQ(130007),
      /**
       * <pre>
       *玩家任务更新
       * </pre>
       *
       * <code>TaskUpdataACK = 130008;</code>
       */
      TaskUpdataACK(130008),
      /**
       * <pre>
       *完成任务步骤
       * </pre>
       *
       * <code>TaskStepREQ = 130009;</code>
       */
      TaskStepREQ(130009),
      /**
       * <pre>
       *重置任务
       * </pre>
       *
       * <code>TaskResetREQ = 130010;</code>
       */
      TaskResetREQ(130010),
      /**
       * <pre>
       *简单刷新采集任务(客户端使用)
       * </pre>
       *
       * <code>FreshCollectTaskREQ = 130011;</code>
       */
      FreshCollectTaskREQ(130011),
      /**
       * <pre>
       *friend
       * </pre>
       *
       * <code>FriendListACK = 140001;</code>
       */
      FriendListACK(140001),
      /**
       * <pre>
       *添加好友
       * </pre>
       *
       * <code>AddFriendREQ = 140002;</code>
       */
      AddFriendREQ(140002),
      /**
       * <pre>
       *加黑名单
       * </pre>
       *
       * <code>AddBlackREQ = 140003;</code>
       */
      AddBlackREQ(140003),
      /**
       * <pre>
       *删除好友
       * </pre>
       *
       * <code>DelFriendREQ = 140004;</code>
       */
      DelFriendREQ(140004),
      /**
       * <pre>
       *改变好友分组
       * </pre>
       *
       * <code>SwitchFriendREQ = 140005;</code>
       */
      SwitchFriendREQ(140005),
      /**
       * <pre>
       *查看好友详细信息
       * </pre>
       *
       * <code>FriendInfoREQ = 140006;</code>
       */
      FriendInfoREQ(140006),
      /**
       * <pre>
       *个性签名修改
       * </pre>
       *
       * <code>FriendSignitureREQ = 140007;</code>
       */
      FriendSignitureREQ(140007),
      /**
       * <pre>
       *私聊
       * </pre>
       *
       * <code>FriendPrivateREQ = 140008;</code>
       */
      FriendPrivateREQ(140008),
      /**
       * <pre>
       *请求好友列表信息
       * </pre>
       *
       * <code>FriendListREQ = 140009;</code>
       */
      FriendListREQ(140009),
      /**
       * <pre>
       *单个好友信息修改
       * </pre>
       *
       * <code>FriendInfoUpdateACK = 140010;</code>
       */
      FriendInfoUpdateACK(140010),
      /**
       * <pre>
       *私聊信息返回
       * </pre>
       *
       * <code>FriendPrivateACK = 140011;</code>
       */
      FriendPrivateACK(140011),
      /**
       * <pre>
       *&#47;获取单个玩家的好友信息(只有名字或id私聊时用)
       * </pre>
       *
       * <code>FriendGetInfoREQ = 140012;</code>
       */
      FriendGetInfoREQ(140012),
      /**
       * <pre>
       *获取单个玩家的好友信息返回
       * </pre>
       *
       * <code>FriendGetInfoACK = 140013;</code>
       */
      FriendGetInfoACK(140013),
      /**
       * <pre>
       *好友上线通知
       * </pre>
       *
       * <code>FriendOnlineACK = 140014;</code>
       */
      FriendOnlineACK(140014),
      /**
       * <pre>
       *下发一键关注好友信息
       * </pre>
       *
       * <code>FriendAttentionACK = 140015;</code>
       */
      FriendAttentionACK(140015),
      /**
       * <pre>
       *祝福信息
       * </pre>
       *
       * <code>FriendBlessInfoACK = 140016;</code>
       */
      FriendBlessInfoACK(140016),
      /**
       * <pre>
       *好友祝福列表
       * </pre>
       *
       * <code>FriendBlessInfosACK = 140017;</code>
       */
      FriendBlessInfosACK(140017),
      /**
       * <pre>
       *好友祝福更新
       * </pre>
       *
       * <code>FriendTrendUpdateACK = 140018;</code>
       */
      FriendTrendUpdateACK(140018),
      /**
       * <pre>
       *好友祝贺更新
       * </pre>
       *
       * <code>FriendCongratUpateACK = 140019;</code>
       */
      FriendCongratUpateACK(140019),
      /**
       * <pre>
       *好友祝贺列表
       * </pre>
       *
       * <code>FriendCongratACK = 140020;</code>
       */
      FriendCongratACK(140020),
      /**
       * <pre>
       *祝福删除信息
       * </pre>
       *
       * <code>FriendTrendDeleteACK = 140021;</code>
       */
      FriendTrendDeleteACK(140021),
      /**
       * <pre>
       *互为好友列表信息
       * </pre>
       *
       * <code>DoubleFriendACK = 140022;</code>
       */
      DoubleFriendACK(140022),
      /**
       * <pre>
       *主菜单
       * </pre>
       *
       * <code>MenuInfoACK = 150001;</code>
       */
      MenuInfoACK(150001),
      /**
       * <pre>
       *活动开启，活动菜单
       * </pre>
       *
       * <code>ActivityOpenACK = 150002;</code>
       */
      ActivityOpenACK(150002),
      /**
       * <pre>
       *等级开启菜单
       * </pre>
       *
       * <code>LeveMenuInfoACK = 150003;</code>
       */
      LeveMenuInfoACK(150003),
      /**
       * <pre>
       *让前端打开某个界面
       * </pre>
       *
       * <code>OpenMenuWinACK = 150004;</code>
       */
      OpenMenuWinACK(150004),
      /**
       * <pre>
       *下推菜单特效
       * </pre>
       *
       * <code>MenuBlinkACK = 150005;</code>
       */
      MenuBlinkACK(150005),
      /**
       * <pre>
       *客户端通知关闭菜单红点
       * </pre>
       *
       * <code>MenuRedDotUpdateREQ = 150006;</code>
       */
      MenuRedDotUpdateREQ(150006),
      /**
       * <pre>
       *组队 team
       * </pre>
       *
       * <code>CreateTeamREQ = 160002;</code>
       */
      CreateTeamREQ(160002),
      /**
       * <pre>
       *加入组队
       * </pre>
       *
       * <code>EnterTeamREQ = 160003;</code>
       */
      EnterTeamREQ(160003),
      /**
       * <pre>
       *离开组队
       * </pre>
       *
       * <code>LeaveTeamREQ = 160004;</code>
       */
      LeaveTeamREQ(160004),
      /**
       * <pre>
       * 组队信息
       * </pre>
       *
       * <code>TeamInfoACK = 160005;</code>
       */
      TeamInfoACK(160005),
      /**
       * <pre>
       * 离开组队
       * </pre>
       *
       * <code>LeaveTeamACK = 160006;</code>
       */
      LeaveTeamACK(160006),
      /**
       * <pre>
       * 转让更换队长 
       * </pre>
       *
       * <code>TeamRransferCaptainREQ = 160007;</code>
       */
      TeamRransferCaptainREQ(160007),
      /**
       * <pre>
       * 转让更换队长 
       * </pre>
       *
       * <code>TeamRransferCaptainACK = 160008;</code>
       */
      TeamRransferCaptainACK(160008),
      /**
       * <pre>
       * 踢人
       * </pre>
       *
       * <code>TeamKickREQ = 160009;</code>
       */
      TeamKickREQ(160009),
      /**
       * <pre>
       * 踢人
       * </pre>
       *
       * <code>TeamKickACK = 160010;</code>
       */
      TeamKickACK(160010),
      /**
       * <pre>
       * 组队列表
       * </pre>
       *
       * <code>TeamListInforREQ = 160011;</code>
       */
      TeamListInforREQ(160011),
      /**
       * <pre>
       * 组队列表
       * </pre>
       *
       * <code>TeamListInforACK = 160012;</code>
       */
      TeamListInforACK(160012),
      /**
       * <pre>
       * 解散组队
       * </pre>
       *
       * <code>DisbandTeamREQ = 160013;</code>
       */
      DisbandTeamREQ(160013),
      /**
       * <pre>
       * 解散组队
       * </pre>
       *
       * <code>DisbandTeamACK = 160014;</code>
       */
      DisbandTeamACK(160014),
      /**
       * <pre>
       * 同步战力
       * </pre>
       *
       * <code>TeamMemberFightPowerSyncACK = 160015;</code>
       */
      TeamMemberFightPowerSyncACK(160015),
      /**
       * <pre>
       *请求调整队伍成员顺序  
       * </pre>
       *
       * <code>AdjustTeamMentorSiteREQ = 160016;</code>
       */
      AdjustTeamMentorSiteREQ(160016),
      /**
       * <pre>
       *请求调整组队战斗加速  
       * </pre>
       *
       * <code>UpdateTeamFightSpeedREQ = 160017;</code>
       */
      UpdateTeamFightSpeedREQ(160017),
      /**
       * <pre>
       *响应调整组队战斗加速
       * </pre>
       *
       * <code>UpdateTeamFightSpeedACK = 160018;</code>
       */
      UpdateTeamFightSpeedACK(160018),
      /**
       * <pre>
       *组队副本 team
       * </pre>
       *
       * <code>JointoTeamFbREQ = 161001;</code>
       */
      JointoTeamFbREQ(161001),
      /**
       * <pre>
       *进入战斗
       * </pre>
       *
       * <code>TeamFbFightREQ = 161002;</code>
       */
      TeamFbFightREQ(161002),
      /**
       * <pre>
       * 退出副本
       * </pre>
       *
       * <code>TeamFbExitREQ = 161003;</code>
       */
      TeamFbExitREQ(161003),
      /**
       * <pre>
       * 每日进入次数
       * </pre>
       *
       * <code>TeamFbBuyREQ = 161004;</code>
       */
      TeamFbBuyREQ(161004),
      /**
       * <pre>
       *场景的信息
       * </pre>
       *
       * <code>TeamFbSceneInfoACK = 161005;</code>
       */
      TeamFbSceneInfoACK(161005),
      /**
       * <pre>
       *打开团队副本
       * </pre>
       *
       * <code>OpenTeamFbREQ = 161006;</code>
       */
      OpenTeamFbREQ(161006),
      /**
       * <pre>
       *打开团队副本信息返回
       * </pre>
       *
       * <code>TeamFbInfoACK = 161007;</code>
       */
      TeamFbInfoACK(161007),
      /**
       * <pre>
       *获取当前团队副本清剿信息
       * </pre>
       *
       * <code>TeamFbCleanInfoREQ = 161008;</code>
       */
      TeamFbCleanInfoREQ(161008),
      /**
       * <pre>
       *开始清剿团队副本
       * </pre>
       *
       * <code>SweepTeamFbREQ = 161009;</code>
       */
      SweepTeamFbREQ(161009),
      /**
       * <pre>
       *清剿团队副本ACK
       * </pre>
       *
       * <code>TeamDeputyCleanFightInfoACK = 161010;</code>
       */
      TeamDeputyCleanFightInfoACK(161010),
      /**
       * <pre>
       *团队副本清剿状态信息
       * </pre>
       *
       * <code>TeamDeputyCleanStateACK = 161011;</code>
       */
      TeamDeputyCleanStateACK(161011),
      /**
       * <pre>
       *Email
       * </pre>
       *
       * <code>EmailStatusACK = 170001;</code>
       */
      EmailStatusACK(170001),
      /**
       * <pre>
       *请求有所邮件信息
       * </pre>
       *
       * <code>EmailInfosREQ = 170002;</code>
       */
      EmailInfosREQ(170002),
      /**
       * <pre>
       *返回有所邮件信息
       * </pre>
       *
       * <code>EmailInfosACK = 170003;</code>
       */
      EmailInfosACK(170003),
      /**
       * <pre>
       *邮件发送
       * </pre>
       *
       * <code>EmailSendREQ = 170004;</code>
       */
      EmailSendREQ(170004),
      /**
       * <pre>
       *单个邮件信息返回
       * </pre>
       *
       * <code>EmailOneInfoACK = 170005;</code>
       */
      EmailOneInfoACK(170005),
      /**
       * <pre>
       *删除邮件
       * </pre>
       *
       * <code>EmailDeleteREQ = 170006;</code>
       */
      EmailDeleteREQ(170006),
      /**
       * <pre>
       *阅读邮件
       * </pre>
       *
       * <code>EmailReadREQ = 170007;</code>
       */
      EmailReadREQ(170007),
      /**
       * <pre>
       *邮件领取附件
       * </pre>
       *
       * <code>EmailGetAttachedREQ = 170008;</code>
       */
      EmailGetAttachedREQ(170008),
      /**
       * <pre>
       *排行榜 
       * </pre>
       *
       * <code>GetRankPageREQ = 180001;</code>
       */
      GetRankPageREQ(180001),
      /**
       * <pre>
       *自已在排行榜里的排名
       * </pre>
       *
       * <code>GetRankSelfREQ = 180002;</code>
       */
      GetRankSelfREQ(180002),
      /**
       * <pre>
       *自已排行信息
       * </pre>
       *
       * <code>GetRankSelfACK = 180003;</code>
       */
      GetRankSelfACK(180003),
      /**
       * <pre>
       *请求排行榜列表返回
       * </pre>
       *
       * <code>GetRankPageACK = 180004;</code>
       */
      GetRankPageACK(180004),
      /**
       * <pre>
       *强化宝石
       * </pre>
       *
       * <code>JewelInsertREQ = 190001;</code>
       */
      JewelInsertREQ(190001),
      /**
       * <pre>
       *装备宝石摘除
       * </pre>
       *
       * <code>JewelTakeoffREQ = 190002;</code>
       */
      JewelTakeoffREQ(190002),
      /**
       * <pre>
       *装备上的宝石升级
       * </pre>
       *
       * <code>EquipJewelUpREQ = 190003;</code>
       */
      EquipJewelUpREQ(190003),
      /**
       * <pre>
       *一键合成
       * </pre>
       *
       * <code>EquipJewelAllUpREQ = 190004;</code>
       */
      EquipJewelAllUpREQ(190004),
      /**
       * <pre>
       *宝石分解
       * </pre>
       *
       * <code>JewelDownREQ = 190005;</code>
       */
      JewelDownREQ(190005),
      /**
       * <pre>
       *宝石合成
       * </pre>
       *
       * <code>JeweUpREQ = 190006;</code>
       */
      JeweUpREQ(190006),
      /**
       * <pre>
       *宝石升级返回
       * </pre>
       *
       * <code>JewelUpACK = 190007;</code>
       */
      JewelUpACK(190007),
      /**
       * <pre>
       *宝石分解返回
       * </pre>
       *
       * <code>JewelDownACK = 190008;</code>
       */
      JewelDownACK(190008),
      /**
       * <pre>
       *装备上的宝石升级返回
       * </pre>
       *
       * <code>EquipJewelUpACK = 190009;</code>
       */
      EquipJewelUpACK(190009),
      /**
       * <pre>
       *装备修改宝石返回
       * </pre>
       *
       * <code>JewelUpdageACK = 190010;</code>
       */
      JewelUpdageACK(190010),
      /**
       * <pre>
       *强化装备
       * </pre>
       *
       * <code>EquipUpgradeREQ = 190011;</code>
       */
      EquipUpgradeREQ(190011),
      /**
       * <pre>
       *强化装备多次
       * </pre>
       *
       * <code>EquipUpgradeManyREQ = 190012;</code>
       */
      EquipUpgradeManyREQ(190012),
      /**
       * <pre>
       *一键强化英雄所有装备
       * </pre>
       *
       * <code>EquipUpgradeAllREQ = 190013;</code>
       */
      EquipUpgradeAllREQ(190013),
      /**
       * <pre>
       *装备合成
       * </pre>
       *
       * <code>EquipForgeREQ = 190014;</code>
       */
      EquipForgeREQ(190014),
      /**
       * <pre>
       *装备强化成功返回
       * </pre>
       *
       * <code>EquipUpgradeACK = 190016;</code>
       */
      EquipUpgradeACK(190016),
      /**
       * <pre>
       *装备合成成功返回
       * </pre>
       *
       * <code>EquipForageACK = 190017;</code>
       */
      EquipForageACK(190017),
      /**
       * <pre>
       *chat
       * </pre>
       *
       * <code>ChatInfoACK = 200001;</code>
       */
      ChatInfoACK(200001),
      /**
       * <pre>
       *下推公告
       * </pre>
       *
       * <code>ChatNoticeACK = 200002;</code>
       */
      ChatNoticeACK(200002),
      /**
       * <pre>
       *聊天发送
       * </pre>
       *
       * <code>ChatInfoREQ = 200003;</code>
       */
      ChatInfoREQ(200003),
      /**
       * <pre>
       *guild
       * </pre>
       *
       * <code>OpenGuildREQ = 201001;</code>
       */
      OpenGuildREQ(201001),
      /**
       * <pre>
       *创建帮会
       * </pre>
       *
       * <code>CreateGuildREQ = 201002;</code>
       */
      CreateGuildREQ(201002),
      /**
       * <pre>
       *申请入会  或 撤销申请
       * </pre>
       *
       * <code>ApllyGuildREQ = 201003;</code>
       */
      ApllyGuildREQ(201003),
      /**
       * <pre>
       *审核 入会（帮会会长 和副会长才有权限）
       * </pre>
       *
       * <code>CheckGuildREQ = 201004;</code>
       */
      CheckGuildREQ(201004),
      /**
       * <pre>
       *邀请入会
       * </pre>
       *
       * <code>InviteGuildREQ = 201005;</code>
       */
      InviteGuildREQ(201005),
      /**
       * <pre>
       *帮会发送邀请信息
       * </pre>
       *
       * <code>SendInviteGuildREQ = 201006;</code>
       */
      SendInviteGuildREQ(201006),
      /**
       * <pre>
       *任命职务
       * </pre>
       *
       * <code>AppointGuildREQ = 201007;</code>
       */
      AppointGuildREQ(201007),
      /**
       * <pre>
       *禅让（帮主）
       * </pre>
       *
       * <code>AbdicateGuildREQ = 201008;</code>
       */
      AbdicateGuildREQ(201008),
      /**
       * <pre>
       *踢人  (普通帮众没踢人权限)
       * </pre>
       *
       * <code>KickGuildREQ = 201009;</code>
       */
      KickGuildREQ(201009),
      /**
       * <pre>
       *离开（会员） 或解散（帮主）
       * </pre>
       *
       * <code>ExitGuildREQ = 201010;</code>
       */
      ExitGuildREQ(201010),
      /**
       * <pre>
       *帮会 and 建筑 升级
       * </pre>
       *
       * <code>UpGuildREQ = 201011;</code>
       */
      UpGuildREQ(201011),
      /**
       * <pre>
       *领取帮会福利  打开帮会同盟UI  打开帮会摇钱树 打开帮会商店
       * </pre>
       *
       * <code>FuLiGuildREQ = 201012;</code>
       */
      FuLiGuildREQ(201012),
      /**
       * <pre>
       *购买帮会商店商品
       * </pre>
       *
       * <code>BuyItemGuildREQ = 201015;</code>
       */
      BuyItemGuildREQ(201015),
      /**
       * <pre>
       *请求帮会事件 1 加入帮会  2 建筑升级 3 商店购物 4 任命
       * </pre>
       *
       * <code>EventGuildREQ = 201017;</code>
       */
      EventGuildREQ(201017),
      /**
       * <pre>
       *查看别人帮派
       * </pre>
       *
       * <code>OtherInfoGuildREQ = 201018;</code>
       */
      OtherInfoGuildREQ(201018),
      /**
       * <pre>
       *保存帮派公告
       * </pre>
       *
       * <code>SaveNoticeGuildREQ = 201019;</code>
       */
      SaveNoticeGuildREQ(201019),
      /**
       * <pre>
       *帮派 捐献
       * </pre>
       *
       * <code>DonateGuildREQ = 201020;</code>
       */
      DonateGuildREQ(201020),
      /**
       * <pre>
       *有人离开
       * </pre>
       *
       * <code>ExitGuildACK = 201021;</code>
       */
      ExitGuildACK(201021),
      /**
       * <pre>
       *帮会信息
       * </pre>
       *
       * <code>GuildInfoACK = 201022;</code>
       */
      GuildInfoACK(201022),
      /**
       * <pre>
       *被邀请的人 收到的信息
       * </pre>
       *
       * <code>InviteGuildACK = 201023;</code>
       */
      InviteGuildACK(201023),
      /**
       * <pre>
       *未入会的玩家 收到的 邀请入会信息  和自己主动申请入会的信息
       * </pre>
       *
       * <code>ApplyInviteGuildACK = 201024;</code>
       */
      ApplyInviteGuildACK(201024),
      /**
       * <pre>
       *帮会同盟 信息
       * </pre>
       *
       * <code>BundInfoGuildACK = 201025;</code>
       */
      BundInfoGuildACK(201025),
      /**
       * <pre>
       *帮会商店 信息
       * </pre>
       *
       * <code>ShopInfoGuildACK = 201026;</code>
       */
      ShopInfoGuildACK(201026),
      /**
       * <pre>
       *帮会等级信息
       * </pre>
       *
       * <code>LevelInfoGuildACK = 201028;</code>
       */
      LevelInfoGuildACK(201028),
      /**
       * <pre>
       *进入帮会农场
       * </pre>
       *
       * <code>GuildFarmEnterREQ = 201101;</code>
       */
      GuildFarmEnterREQ(201101),
      /**
       * <pre>
       *返回帮会农场
       * </pre>
       *
       * <code>GuildFarmEnterACK = 201102;</code>
       */
      GuildFarmEnterACK(201102),
      /**
       * <pre>
       *帮会农场种菜
       * </pre>
       *
       * <code>GuildFarmPlantREQ = 201103;</code>
       */
      GuildFarmPlantREQ(201103),
      /**
       * <pre>
       *帮会农场除虫浇水
       * </pre>
       *
       * <code>GuildFarmWorkREQ = 201104;</code>
       */
      GuildFarmWorkREQ(201104),
      /**
       * <pre>
       *帮会农场铲除土地
       * </pre>
       *
       * <code>GuildFarmEradicateREQ = 201105;</code>
       */
      GuildFarmEradicateREQ(201105),
      /**
       * <pre>
       *帮会农场摘菜
       * </pre>
       *
       * <code>GuildFarmPickVegetableREQ = 201106;</code>
       */
      GuildFarmPickVegetableREQ(201106),
      /**
       * <pre>
       *请求玩家农场数据
       * </pre>
       *
       * <code>GuildFarmPlayerDataREQ = 201107;</code>
       */
      GuildFarmPlayerDataREQ(201107),
      /**
       * <pre>
       *返回玩家农场数据
       * </pre>
       *
       * <code>GuildFarmPlayerDataACK = 201108;</code>
       */
      GuildFarmPlayerDataACK(201108),
      /**
       * <pre>
       *扩展帮会农场土地
       * </pre>
       *
       * <code>GuildFarmExpandLandREQ = 201109;</code>
       */
      GuildFarmExpandLandREQ(201109),
      /**
       * <pre>
       *商城，商店
       * </pre>
       *
       * <code>BuyMallREQ = 202001;</code>
       */
      BuyMallREQ(202001),
      /**
       * <pre>
       *获取支付列表
       * </pre>
       *
       * <code>PayInfoListREQ = 202002;</code>
       */
      PayInfoListREQ(202002),
      /**
       * <pre>
       *获取支付列表
       * </pre>
       *
       * <code>PayInfoListACK = 202003;</code>
       */
      PayInfoListACK(202003),
      /**
       * <pre>
       *微信支付
       * </pre>
       *
       * <code>WxPayREQ = 202004;</code>
       */
      WxPayREQ(202004),
      /**
       * <pre>
       *微信支付
       * </pre>
       *
       * <code>WxPayACK = 202005;</code>
       */
      WxPayACK(202005),
      /**
       * <pre>
       *活动商城购买
       * </pre>
       *
       * <code>BuyActiveMallREQ = 202006;</code>
       */
      BuyActiveMallREQ(202006),
      /**
       * <pre>
       *趣炫支付
       * </pre>
       *
       * <code>QxPayREQ = 202007;</code>
       */
      QxPayREQ(202007),
      /**
       * <pre>
       *趣炫支付返回
       * </pre>
       *
       * <code>QxPayACK = 202008;</code>
       */
      QxPayACK(202008),
      /**
       * <pre>
       *趣炫支付回调
       * </pre>
       *
       * <code>QxPayWeb = 202009;</code>
       */
      QxPayWeb(202009),
      /**
       * <pre>
       *支付宝支付请求
       * </pre>
       *
       * <code>ZfbPayREQ = 202010;</code>
       */
      ZfbPayREQ(202010),
      /**
       * <pre>
       *SDK支付请求
       * </pre>
       *
       * <code>SDKPayREQ = 202011;</code>
       */
      SDKPayREQ(202011),
      /**
       * <pre>
       *SDK支付回调
       * </pre>
       *
       * <code>SDKPayACK = 202012;</code>
       */
      SDKPayACK(202012),
      /**
       * <pre>
       *SDK支付完成，内部服回调
       * </pre>
       *
       * <code>SDKPaySucREQ = 202013;</code>
       */
      SDKPaySucREQ(202013),
      /**
       * <pre>
       *SDK支付完成回调
       * </pre>
       *
       * <code>SDKPaySucACK = 202014;</code>
       */
      SDKPaySucACK(202014),
      /**
       * <pre>
       *礼包信息 ,签到礼包信息	 
       * </pre>
       *
       * <code>ActiveGiftACK = 203001;</code>
       */
      ActiveGiftACK(203001),
      /**
       * <pre>
       *礼包领取奖励
       * </pre>
       *
       * <code>GetGiftREQ = 203002;</code>
       */
      GetGiftREQ(203002),
      /**
       * <pre>
       *请求查看在线礼包信息
       * </pre>
       *
       * <code>GetOnLineGiftInfosREQ = 203003;</code>
       */
      GetOnLineGiftInfosREQ(203003),
      /**
       * <pre>
       *返回查看在线礼包信息
       * </pre>
       *
       * <code>GetOnLineGiftInfosACK = 203004;</code>
       */
      GetOnLineGiftInfosACK(203004),
      /**
       * <pre>
       *请求领取在线礼包奖励
       * </pre>
       *
       * <code>GetOnLineGiftAwardREQ = 203005;</code>
       */
      GetOnLineGiftAwardREQ(203005),
      /**
       * <pre>
       *打开签到获取信息
       * </pre>
       *
       * <code>SignOpenREQ = 203012;</code>
       */
      SignOpenREQ(203012),
      /**
       * <pre>
       *签到
       * </pre>
       *
       * <code>SignInREQ = 203013;</code>
       */
      SignInREQ(203013),
      /**
       * <pre>
       *补签
       * </pre>
       *
       * <code>SignPatchREQ = 203014;</code>
       */
      SignPatchREQ(203014),
      /**
       * <pre>
       *领取签到奖励
       * </pre>
       *
       * <code>GetSignGifREQ = 203015;</code>
       */
      GetSignGifREQ(203015),
      /**
       * <pre>
       *签到信息返回
       * </pre>
       *
       * <code>SignOpenACK = 203016;</code>
       */
      SignOpenACK(203016),
      /**
       * <pre>
       *每日签到抽奖
       * </pre>
       *
       * <code>SignDaysLotteryREQ = 203017;</code>
       */
      SignDaysLotteryREQ(203017),
      /**
       * <pre>
       *请求每日签到抽奖信息
       * </pre>
       *
       * <code>GetSignDaysLotteryREQ = 203018;</code>
       */
      GetSignDaysLotteryREQ(203018),
      /**
       * <pre>
       *每日签到抽奖信息返回
       * </pre>
       *
       * <code>GetSignDaysLotteryACK = 203019;</code>
       */
      GetSignDaysLotteryACK(203019),
      /**
       * <pre>
       *下发抽中每日签到抽奖信息返回
       * </pre>
       *
       * <code>SignDaysLotteryACK = 203020;</code>
       */
      SignDaysLotteryACK(203020),
      /**
       * <pre>
       *每日签到抽奖个人公告信息返回
       * </pre>
       *
       * <code>MySignDaysLotteryACK = 203021;</code>
       */
      MySignDaysLotteryACK(203021),
      /**
       * <pre>
       *兑换铜币（挖宝)
       * </pre>
       *
       * <code>ExchanCopperREQ = 203022;</code>
       */
      ExchanCopperREQ(203022),
      /**
       * <pre>
       *兑换铜币信息返回（挖宝)
       * </pre>
       *
       * <code>ExchanCopperACK = 203023;</code>
       */
      ExchanCopperACK(203023),
      /**
       * <pre>
       *输入激活码获得物品信息
       * </pre>
       *
       * <code>JihuomaInfoREQ = 203024;</code>
       */
      JihuomaInfoREQ(203024),
      /**
       * <pre>
       *领取激活码物品
       * </pre>
       *
       * <code>GetJihuomaInfoREQ = 203025;</code>
       */
      GetJihuomaInfoREQ(203025),
      /**
       * <pre>
       *输入激活码获得物品信息返回
       * </pre>
       *
       * <code>JihuomaInfoACK = 203026;</code>
       */
      JihuomaInfoACK(203026),
      /**
       * <pre>
       *领取激活返回
       * </pre>
       *
       * <code>GetJihuomaInfoACK = 203027;</code>
       */
      GetJihuomaInfoACK(203027),
      /**
       * <pre>
       *绑定手机奖励请求
       * </pre>
       *
       * <code>GetBindPhoneGiftInfoREQ = 203028;</code>
       */
      GetBindPhoneGiftInfoREQ(203028),
      /**
       * <code>GetBindPhoneGiftInfoACK = 203029;</code>
       */
      GetBindPhoneGiftInfoACK(203029),
      /**
       * <pre>
       *下载全包完成
       * </pre>
       *
       * <code>DownFinishGiftInfoREQ = 203030;</code>
       */
      DownFinishGiftInfoREQ(203030),
      /**
       * <pre>
       *开服活动
       * </pre>
       *
       * <code>OpenServerActiveInfoREQ = 203501;</code>
       */
      OpenServerActiveInfoREQ(203501),
      /**
       * <pre>
       *开服活动信息返回
       * </pre>
       *
       * <code>OpenServerActiveInfoACK = 203502;</code>
       */
      OpenServerActiveInfoACK(203502),
      /**
       * <pre>
       *投资
       * </pre>
       *
       * <code>OpenServerActiveInvestREQ = 203503;</code>
       */
      OpenServerActiveInvestREQ(203503),
      /**
       * <pre>
       *领取奖励开服活动
       * </pre>
       *
       * <code>GetOpenServerActiveRewardREQ = 203504;</code>
       */
      GetOpenServerActiveRewardREQ(203504),
      /**
       * <pre>
       *够买礼包
       * </pre>
       *
       * <code>OpenActiveBuyGiftREQ = 203505;</code>
       */
      OpenActiveBuyGiftREQ(203505),
      /**
       * <pre>
       *充服活动
       * </pre>
       *
       * <code>RechargeActiveInfoREQ = 203601;</code>
       */
      RechargeActiveInfoREQ(203601),
      /**
       * <pre>
       *充值活动信息返回
       * </pre>
       *
       * <code>RechargeActiveInfoACK = 203602;</code>
       */
      RechargeActiveInfoACK(203602),
      /**
       * <pre>
       *请求领取充值活动奖励
       * </pre>
       *
       * <code>GetRechargeActiveRewardREQ = 203603;</code>
       */
      GetRechargeActiveRewardREQ(203603),
      /**
       * <pre>
       *砸蛋抽奖活动
       * </pre>
       *
       * <code>SmashEggsREQ = 203604;</code>
       */
      SmashEggsREQ(203604),
      /**
       * <pre>
       *砸蛋抽奖返回
       * </pre>
       *
       * <code>SmashEggsACK = 203605;</code>
       */
      SmashEggsACK(203605),
      /**
       * <pre>
       *养宠活动信息
       * </pre>
       *
       * <code>SubmitRaisePetREQ = 203606;</code>
       */
      SubmitRaisePetREQ(203606),
      /**
       * <pre>
       *养宠活动返回
       * </pre>
       *
       * <code>RaisePetACK = 203607;</code>
       */
      RaisePetACK(203607),
      /**
       * <pre>
       *购买砸蛋次数
       * </pre>
       *
       * <code>BuySmashEggsCountREQ = 203608;</code>
       */
      BuySmashEggsCountREQ(203608),
      /**
       * <pre>
       *充值活动图标显示协议
       * </pre>
       *
       * <code>RechargeActiveMenuREQ = 203609;</code>
       */
      RechargeActiveMenuREQ(203609),
      /**
       * <code>RechargeActiveMenuACK = 203610;</code>
       */
      RechargeActiveMenuACK(203610),
      /**
       * <pre>
       *请求月卡信息
       * </pre>
       *
       * <code>MonthCardInfoREQ = 203611;</code>
       */
      MonthCardInfoREQ(203611),
      /**
       * <pre>
       *月卡信息返回
       * </pre>
       *
       * <code>MonthCardInfoACK = 203612;</code>
       */
      MonthCardInfoACK(203612),
      /**
       * <pre>
       *领取月卡每日贝壳
       * </pre>
       *
       * <code>GetMonthCardDayGoldREQ = 203613;</code>
       */
      GetMonthCardDayGoldREQ(203613),
      /**
       * <pre>
       *世界BOSS战
       * </pre>
       *
       * <code>EnterBossMapREQ = 204001;</code>
       */
      EnterBossMapREQ(204001),
      /**
       * <pre>
       *退出BOSS战
       * </pre>
       *
       * <code>ExitBossMapREQ = 204002;</code>
       */
      ExitBossMapREQ(204002),
      /**
       * <pre>
       *打BOSS
       * </pre>
       *
       * <code>AttackBossREQ = 204003;</code>
       */
      AttackBossREQ(204003),
      /**
       * <pre>
       *复活
       * </pre>
       *
       * <code>BossClearCdREQ = 204004;</code>
       */
      BossClearCdREQ(204004),
      /**
       * <pre>
       *鼓舞
       * </pre>
       *
       * <code>BossEncouRageREQ = 204005;</code>
       */
      BossEncouRageREQ(204005),
      /**
       * <pre>
       *涅槃重生
       * </pre>
       *
       * <code>BossReviveREQ = 204006;</code>
       */
      BossReviveREQ(204006),
      /**
       * <pre>
       *请求加载地图信息
       * </pre>
       *
       * <code>BossMapInfoACK = 204007;</code>
       */
      BossMapInfoACK(204007),
      /**
       * <pre>
       *世界BOSS信息
       * </pre>
       *
       * <code>WorldBossInfoACK = 204008;</code>
       */
      WorldBossInfoACK(204008),
      /**
       * <pre>
       *玩家挂掉信息
       * </pre>
       *
       * <code>WorldBossPlayerDieInfoACK = 204009;</code>
       */
      WorldBossPlayerDieInfoACK(204009),
      /**
       * <pre>
       *进入BOSS战返回
       * </pre>
       *
       * <code>EnterBossMapACK = 204010;</code>
       */
      EnterBossMapACK(204010),
      /**
       * <pre>
       *BOSS入侵
       * </pre>
       *
       * <code>OpenBossInvasionREQ = 204101;</code>
       */
      OpenBossInvasionREQ(204101),
      /**
       * <pre>
       *打开界面返回
       * </pre>
       *
       * <code>OpenBossInvasionACK = 204102;</code>
       */
      OpenBossInvasionACK(204102),
      /**
       * <pre>
       *退出BOSS战
       * </pre>
       *
       * <code>ExitBossInvasionREQ = 204103;</code>
       */
      ExitBossInvasionREQ(204103),
      /**
       * <pre>
       *打BOSS
       * </pre>
       *
       * <code>AttackBossInvasionREQ = 204104;</code>
       */
      AttackBossInvasionREQ(204104),
      /**
       * <pre>
       *更新渔村Boss
       * </pre>
       *
       * <code>BossInvasionUpdateBossACK = 204105;</code>
       */
      BossInvasionUpdateBossACK(204105),
      /**
       * <pre>
       *更新今日击杀的数量
       * </pre>
       *
       * <code>BossInvasionUpdateSkillNumACK = 204106;</code>
       */
      BossInvasionUpdateSkillNumACK(204106),
      /**
       * <pre>
       *群雄争爸战
       * </pre>
       *
       * <code>QxzbJoinREQ = 205001;</code>
       */
      QxzbJoinREQ(205001),
      /**
       * <pre>
       *开始战斗
       * </pre>
       *
       * <code>QxzbKcREQ = 205002;</code>
       */
      QxzbKcREQ(205002),
      /**
       * <pre>
       *排行信息
       * </pre>
       *
       * <code>QxzbRankREQ = 205003;</code>
       */
      QxzbRankREQ(205003),
      /**
       * <pre>
       *进入群雄争爸战
       * </pre>
       *
       * <code>QxzbJoinACK = 205004;</code>
       */
      QxzbJoinACK(205004),
      /**
       * <pre>
       *排行信息
       * </pre>
       *
       * <code>QxzbRankACK = 205005;</code>
       */
      QxzbRankACK(205005),
      /**
       * <pre>
       *跨服群雄争爸
       * </pre>
       *
       * <code>KfQxzbJoinREQ = 205006;</code>
       */
      KfQxzbJoinREQ(205006),
      /**
       * <pre>
       *跨服开始战斗
       * </pre>
       *
       * <code>KfQxzbKcREQ = 205007;</code>
       */
      KfQxzbKcREQ(205007),
      /**
       * <pre>
       *跨服排行信息
       * </pre>
       *
       * <code>KfQxzbRankREQ = 205008;</code>
       */
      KfQxzbRankREQ(205008),
      /**
       * <pre>
       *进入跨服群雄争爸战
       * </pre>
       *
       * <code>KfQxzbJoinACK = 205009;</code>
       */
      KfQxzbJoinACK(205009),
      /**
       * <pre>
       *跨服排行信息			 
       * </pre>
       *
       * <code>KfQxzbRankACK = 205010;</code>
       */
      KfQxzbRankACK(205010),
      /**
       * <pre>
       *VIP
       * </pre>
       *
       * <code>VipGiftREQ = 206001;</code>
       */
      VipGiftREQ(206001),
      /**
       * <pre>
       *领取每日礼包
       * </pre>
       *
       * <code>VipDailyGiftREQ = 206002;</code>
       */
      VipDailyGiftREQ(206002),
      /**
       * <pre>
       *VIP特权信息
       * </pre>
       *
       * <code>VipFunctionREQ = 206003;</code>
       */
      VipFunctionREQ(206003),
      /**
       * <pre>
       *VIP信息返回
       * </pre>
       *
       * <code>VipInfoACK = 206004;</code>
       */
      VipInfoACK(206004),
      /**
       * <pre>
       *VIP特权信息返回
       * </pre>
       *
       * <code>VipFunctionACK = 206005;</code>
       */
      VipFunctionACK(206005),
      /**
       * <pre>
       *VIP奖励信息返
       * </pre>
       *
       * <code>VipGiftInfoACK = 206006;</code>
       */
      VipGiftInfoACK(206006),
      /**
       * <pre>
       *阵营战
       * </pre>
       *
       * <code>EnterCampFightREQ = 207001;</code>
       */
      EnterCampFightREQ(207001),
      /**
       * <pre>
       *阵营战退出地图
       * </pre>
       *
       * <code>ExitCampFightREQ = 207002;</code>
       */
      ExitCampFightREQ(207002),
      /**
       * <pre>
       *阵营战攻击守卫
       * </pre>
       *
       * <code>AttackGuardCampFightREQ = 207003;</code>
       */
      AttackGuardCampFightREQ(207003),
      /**
       * <pre>
       *阵营战攻击玩家
       * </pre>
       *
       * <code>AttackPvpCampFightREQ = 207004;</code>
       */
      AttackPvpCampFightREQ(207004),
      /**
       * <pre>
       *阵营战采集
       * </pre>
       *
       * <code>CollectCampFightREQ = 207005;</code>
       */
      CollectCampFightREQ(207005),
      /**
       * <pre>
       *阵营战提交采集
       * </pre>
       *
       * <code>CollectHandinCampFightREQ = 207006;</code>
       */
      CollectHandinCampFightREQ(207006),
      /**
       * <pre>
       *阵营守卫NPC信息返回
       * </pre>
       *
       * <code>CampGuardsACK = 207007;</code>
       */
      CampGuardsACK(207007),
      /**
       * <pre>
       *阵营冷却时间信息返回
       * </pre>
       *
       * <code>CampFightCdACK = 207008;</code>
       */
      CampFightCdACK(207008),
      /**
       * <pre>
       *阵营人数信息返回
       * </pre>
       *
       * <code>CampFightMemberACK = 207009;</code>
       */
      CampFightMemberACK(207009),
      /**
       * <pre>
       *玩家信息信息返
       * </pre>
       *
       * <code>CampFightMyPlayerACK = 207010;</code>
       */
      CampFightMyPlayerACK(207010),
      /**
       * <pre>
       *排行信息信息返
       * </pre>
       *
       * <code>CampFightRankACK = 207011;</code>
       */
      CampFightRankACK(207011),
      /**
       * <pre>
       *单个排行信息信息返
       * </pre>
       *
       * <code>CampFightRankUpdateACK = 207012;</code>
       */
      CampFightRankUpdateACK(207012),
      /**
       * <pre>
       *战场状态改变返回
       * </pre>
       *
       * <code>CampFightStateACK = 207013;</code>
       */
      CampFightStateACK(207013),
      /**
       * <pre>
       *结算信息
       * </pre>
       *
       * <code>CampFightEndACK = 207014;</code>
       */
      CampFightEndACK(207014),
      /**
       * <pre>
       *fight
       * </pre>
       *
       * <code>EnterFightACK = 300001;</code>
       */
      EnterFightACK(300001),
      /**
       * <pre>
       *进入战斗
       * </pre>
       *
       * <code>EnterFightREQ = 300002;</code>
       */
      EnterFightREQ(300002),
      /**
       * <pre>
       *玩家操作
       * </pre>
       *
       * <code>HeroFightREQ = 300003;</code>
       */
      HeroFightREQ(300003),
      /**
       * <pre>
       *战报
       * </pre>
       *
       * <code>FightReportACK = 300004;</code>
       */
      FightReportACK(300004),
      /**
       * <pre>
       *请求和玩家挑战
       * </pre>
       *
       * <code>OtherPkFightREQ = 300010;</code>
       */
      OtherPkFightREQ(300010),
      /**
       * <pre>
       *收到玩家挑战
       * </pre>
       *
       * <code>OtherPkFightACK = 300011;</code>
       */
      OtherPkFightACK(300011),
      /**
       * <pre>
       *单个英雄加放战斗
       * </pre>
       *
       * <code>AddFightingInfoACK = 300012;</code>
       */
      AddFightingInfoACK(300012),
      /**
       * <pre>
       *战斗木桩
       * </pre>
       *
       * <code>FightCombatREQ = 300013;</code>
       */
      FightCombatREQ(300013),
      /**
       * <pre>
       *arena竞技场
       * </pre>
       *
       * <code>ArenaEnterREQ = 301001;</code>
       */
      ArenaEnterREQ(301001),
      /**
       * <pre>
       *退出竞技场
       * </pre>
       *
       * <code>ArenaExitREQ = 301002;</code>
       */
      ArenaExitREQ(301002),
      /**
       * <pre>
       *挑战
       * </pre>
       *
       * <code>ArenaChangeREQ = 301003;</code>
       */
      ArenaChangeREQ(301003),
      /**
       * <pre>
       *买挑战次数
       * </pre>
       *
       * <code>ArenaBuyChangeREQ = 301004;</code>
       */
      ArenaBuyChangeREQ(301004),
      /**
       * <pre>
       *清除挑战CD
       * </pre>
       *
       * <code>ArenaCleanCdREQ = 301005;</code>
       */
      ArenaCleanCdREQ(301005),
      /**
       * <pre>
       *获取战报
       * </pre>
       *
       * <code>ArenaFightReportREQ = 301006;</code>
       */
      ArenaFightReportREQ(301006),
      /**
       * <pre>
       *分享战报
       * </pre>
       *
       * <code>ArenaShareReportREQ = 301007;</code>
       */
      ArenaShareReportREQ(301007),
      /**
       * <pre>
       *观看分享战报
       * </pre>
       *
       * <code>ArenaLookShareReportREQ = 301008;</code>
       */
      ArenaLookShareReportREQ(301008),
      /**
       * <pre>
       *开宝箱
       * </pre>
       *
       * <code>ArenaOpenBoxREQ = 301009;</code>
       */
      ArenaOpenBoxREQ(301009),
      /**
       * <pre>
       *竞技场挑战cd
       * </pre>
       *
       * <code>ArenaRankInfoACK = 301010;</code>
       */
      ArenaRankInfoACK(301010),
      /**
       * <pre>
       *竞技场每日奖励内容返回
       * </pre>
       *
       * <code>ArenaDailyInfoACK = 301011;</code>
       */
      ArenaDailyInfoACK(301011),
      /**
       * <pre>
       *开宝箱返回
       * </pre>
       *
       * <code>ArenaOpenBoxACK = 301012;</code>
       */
      ArenaOpenBoxACK(301012),
      /**
       * <pre>
       *竞技场挑战cd
       * </pre>
       *
       * <code>ArenaCdACK = 301013;</code>
       */
      ArenaCdACK(301013),
      /**
       * <pre>
       *map
       * </pre>
       *
       * <code>EnterMapACK = 500001;</code>
       */
      EnterMapACK(500001),
      /**
       * <pre>
       *切换地图请示
       * </pre>
       *
       * <code>SwitchMapREQ = 500002;</code>
       */
      SwitchMapREQ(500002),
      /**
       * <pre>
       *地图玩家移动
       * </pre>
       *
       * <code>MapMove = 500003;</code>
       */
      MapMove(500003),
      /**
       * <pre>
       *玩家离开地图
       * </pre>
       *
       * <code>PlayerLeaveMap = 500004;</code>
       */
      PlayerLeaveMap(500004),
      /**
       * <pre>
       *世界地图切换
       * </pre>
       *
       * <code>SwitchWorldREQ = 500005;</code>
       */
      SwitchWorldREQ(500005),
      /**
       * <pre>
       *单个地图上玩家信息
       * </pre>
       *
       * <code>ScenePlayerInfo = 500012;</code>
       */
      ScenePlayerInfo(500012),
      /**
       * <pre>
       *人物信息修改返回
       * </pre>
       *
       * <code>ScenePlayerUpdataACK = 500013;</code>
       */
      ScenePlayerUpdataACK(500013),
      /**
       * <pre>
       *原地敌人
       * </pre>
       *
       * <code>MapAutochthonous = 500014;</code>
       */
      MapAutochthonous(500014),
      /**
       * <pre>
       *瞬移到指定坐标
       * </pre>
       *
       * <code>QuickMoveACK = 500015;</code>
       */
      QuickMoveACK(500015),
      /**
       * <pre>
       *组队帮其它人移动
       * </pre>
       *
       * <code>MapOtherMove = 500016;</code>
       */
      MapOtherMove(500016),
      /**
       * <pre>
       *修改怪物信息
       * </pre>
       *
       * <code>UpdateSceneMonsterInfoACK = 500017;</code>
       */
      UpdateSceneMonsterInfoACK(500017),
      /**
       * <pre>
       *人物做动作
       * </pre>
       *
       * <code>MapPlayerActionREQ = 500018;</code>
       */
      MapPlayerActionREQ(500018),
      /**
       * <pre>
       *人物做动作
       * </pre>
       *
       * <code>MapPlayerActionACK = 500019;</code>
       */
      MapPlayerActionACK(500019),
      /**
       * <pre>
       *修改多个怪物信息
       * </pre>
       *
       * <code>UpdateSceneMonstersACK = 500020;</code>
       */
      UpdateSceneMonstersACK(500020),
      /**
       * <pre>
       *玩家自已移动
       * </pre>
       *
       * <code>OnMyMapMove = 500021;</code>
       */
      OnMyMapMove(500021),
      /**
       * <pre>
       *场景放烟花
       * </pre>
       *
       * <code>FireWorksACK = 500022;</code>
       */
      FireWorksACK(500022),
      /**
       * <pre>
       *活动
       * </pre>
       *
       * <code>ActivityOpenREQ = 510001;</code>
       */
      ActivityOpenREQ(510001),
      /**
       * <pre>
       *活动信息返回
       * </pre>
       *
       * <code>ActivityInfoACK = 510002;</code>
       */
      ActivityInfoACK(510002),
      /**
       * <pre>
       *活跃度奖励领取 按顺序领取奖励
       * </pre>
       *
       * <code>AssistantRewardREQ = 510003;</code>
       */
      AssistantRewardREQ(510003),
      /**
       * <pre>
       *活跃度信息更新
       * </pre>
       *
       * <code>ActivityInfoUpdateACK = 510004;</code>
       */
      ActivityInfoUpdateACK(510004),
      /**
       * <pre>
       *成就
       * </pre>
       *
       * <code>AchievementOpenREQ = 511001;</code>
       */
      AchievementOpenREQ(511001),
      /**
       * <pre>
       *成就信息返回
       * </pre>
       *
       * <code>AchievementInfoACK = 511002;</code>
       */
      AchievementInfoACK(511002),
      /**
       * <pre>
       *成就奖励领取
       * </pre>
       *
       * <code>AchievementRewardREQ = 511003;</code>
       */
      AchievementRewardREQ(511003),
      /**
       * <pre>
       *成就信息更新
       * </pre>
       *
       * <code>AchievementInfoUpdateACK = 511004;</code>
       */
      AchievementInfoUpdateACK(511004),
      /**
       * <pre>
       *副本
       * </pre>
       *
       * <code>DeputyGroupInfoREQ = 520001;</code>
       */
      DeputyGroupInfoREQ(520001),
      /**
       * <pre>
       *进入副本
       * </pre>
       *
       * <code>DeputyEnterREQ = 520002;</code>
       */
      DeputyEnterREQ(520002),
      /**
       * <pre>
       *点击怪物
       * </pre>
       *
       * <code>DeputyClickMonsterREQ = 520003;</code>
       */
      DeputyClickMonsterREQ(520003),
      /**
       * <pre>
       *退出副本
       * </pre>
       *
       * <code>DeputyExitREQ = 520004;</code>
       */
      DeputyExitREQ(520004),
      /**
       * <pre>
       *获取当前副本信息
       * </pre>
       *
       * <code>DeputyInfoREQ = 520005;</code>
       */
      DeputyInfoREQ(520005),
      /**
       * <pre>
       *获取当前副本清剿信息
       * </pre>
       *
       * <code>DeputyCleanInfoREQ = 520006;</code>
       */
      DeputyCleanInfoREQ(520006),
      /**
       * <pre>
       *开始清剿副本
       * </pre>
       *
       * <code>DeputyCleanStartREQ = 520007;</code>
       */
      DeputyCleanStartREQ(520007),
      /**
       * <pre>
       *关闭清剿副本
       * </pre>
       *
       * <code>DeputyCleanCloseREQ = 520008;</code>
       */
      DeputyCleanCloseREQ(520008),
      /**
       * <pre>
       *改变自动出售设置
       * </pre>
       *
       * <code>DeputyCleanAutoSellREQ = 520009;</code>
       */
      DeputyCleanAutoSellREQ(520009),
      /**
       * <pre>
       *取消自动清剿
       * </pre>
       *
       * <code>DeputyCleanCancelREQ = 520010;</code>
       */
      DeputyCleanCancelREQ(520010),
      /**
       * <pre>
       *清剿金币加速
       * </pre>
       *
       * <code>DeputyCleanGoldSpeedREQ = 520011;</code>
       */
      DeputyCleanGoldSpeedREQ(520011),
      /**
       * <pre>
       *清剿金币加速查看金币数量
       * </pre>
       *
       * <code>DeputyCleanGoldSpeedCheckREQ = 520012;</code>
       */
      DeputyCleanGoldSpeedCheckREQ(520012),
      /**
       * <pre>
       *获取当前副本信息
       * </pre>
       *
       * <code>DeputyInfoACK = 520013;</code>
       */
      DeputyInfoACK(520013),
      /**
       * <pre>
       *获取当前副本清剿信息
       * </pre>
       *
       * <code>DeputyCleanInfoACK = 520014;</code>
       */
      DeputyCleanInfoACK(520014),
      /**
       * <pre>
       *进入副本信息
       * </pre>
       *
       * <code>DeputyEnterACK = 520015;</code>
       */
      DeputyEnterACK(520015),
      /**
       * <pre>
       *副本怪物状态返回信息
       * </pre>
       *
       * <code>DeputyMonsterStateACK = 520016;</code>
       */
      DeputyMonsterStateACK(520016),
      /**
       * <pre>
       *副本BOSS信息
       * </pre>
       *
       * <code>DeputyBossInfoACK = 520017;</code>
       */
      DeputyBossInfoACK(520017),
      /**
       * <pre>
       *副本完成信息
       * </pre>
       *
       * <code>DeputyStateInfoACK = 520018;</code>
       */
      DeputyStateInfoACK(520018),
      /**
       * <pre>
       *副本组信息返回
       * </pre>
       *
       * <code>DeputyGroupInfoACK = 520019;</code>
       */
      DeputyGroupInfoACK(520019),
      /**
       * <pre>
       *获取当前挂机状态信息
       * </pre>
       *
       * <code>DeputyCleanStateACK = 520020;</code>
       */
      DeputyCleanStateACK(520020),
      /**
       * <pre>
       *挂机每场战斗信息
       * </pre>
       *
       * <code>DeputyCleanFightInfoACK = 520021;</code>
       */
      DeputyCleanFightInfoACK(520021),
      /**
       * <pre>
       *王者破证闯关副本
       * </pre>
       *
       * <code>EmigratedInfoREQ = 521001;</code>
       */
      EmigratedInfoREQ(521001),
      /**
       * <pre>
       *闯关信息返回
       * </pre>
       *
       * <code>EmigratedInfoACK = 521002;</code>
       */
      EmigratedInfoACK(521002),
      /**
       * <pre>
       *进入副本
       * </pre>
       *
       * <code>EnterEmigratedREQ = 521003;</code>
       */
      EnterEmigratedREQ(521003),
      /**
       * <pre>
       *点击怪物
       * </pre>
       *
       * <code>EmigrateClickMonsterREQ = 521004;</code>
       */
      EmigrateClickMonsterREQ(521004),
      /**
       * <pre>
       *通出
       * </pre>
       *
       * <code>EmigrateExitREQ = 521005;</code>
       */
      EmigrateExitREQ(521005),
      /**
       * <pre>
       *进入副本返回
       * </pre>
       *
       * <code>EnterEmigratedACK = 521006;</code>
       */
      EnterEmigratedACK(521006),
      /**
       * <pre>
       *重置所有层信息
       * </pre>
       *
       * <code>EmigrateResetREQ = 521007;</code>
       */
      EmigrateResetREQ(521007),
      /**
       * <pre>
       *购买重置次数
       * </pre>
       *
       * <code>EmigrateBuyResetREQ = 521008;</code>
       */
      EmigrateBuyResetREQ(521008),
      /**
       * <pre>
       *死亡塔
       * </pre>
       *
       * <code>OpenDieTowerREQ = 522001;</code>
       */
      OpenDieTowerREQ(522001),
      /**
       * <pre>
       *打开死亡塔返回
       * </pre>
       *
       * <code>OpenDieTowerACK = 522002;</code>
       */
      OpenDieTowerACK(522002),
      /**
       * <pre>
       *进入战斗
       * </pre>
       *
       * <code>DieTowerFightREQ = 522003;</code>
       */
      DieTowerFightREQ(522003),
      /**
       * <pre>
       *重置
       * </pre>
       *
       * <code>DieTowerResetREQ = 522004;</code>
       */
      DieTowerResetREQ(522004),
      /**
       * <pre>
       *购买重置次数
       * </pre>
       *
       * <code>DieTowerBuyResetREQ = 522005;</code>
       */
      DieTowerBuyResetREQ(522005),
      /**
       * <pre>
       *请求排行信息
       * </pre>
       *
       * <code>DieTowerRankREQ = 522006;</code>
       */
      DieTowerRankREQ(522006),
      /**
       * <pre>
       *请求排行信息返回
       * </pre>
       *
       * <code>DieTowerRankACK = 522007;</code>
       */
      DieTowerRankACK(522007),
      /**
       * <pre>
       *战斗完成奖励显示
       * </pre>
       *
       * <code>DieTowerRewardACK = 522008;</code>
       */
      DieTowerRewardACK(522008),
      /**
       * <pre>
       *自动战斗
       * </pre>
       *
       * <code>DieTowerAutoFightREQ = 522009;</code>
       */
      DieTowerAutoFightREQ(522009),
      /**
       * <pre>
       *自动战斗返回
       * </pre>
       *
       * <code>DieTowerAutoFightACK = 522010;</code>
       */
      DieTowerAutoFightACK(522010),
      /**
       * <pre>
       *完成自动战斗
       * </pre>
       *
       * <code>DieTowerComAutoREQ = 522011;</code>
       */
      DieTowerComAutoREQ(522011),
      /**
       * <pre>
       *完成自动战斗返回
       * </pre>
       *
       * <code>DieTowerComAutoACK = 522012;</code>
       */
      DieTowerComAutoACK(522012),
      /**
       * <pre>
       *英雄招募
       * </pre>
       *
       * <code>HeroPubInfoREQ = 530001;</code>
       */
      HeroPubInfoREQ(530001),
      /**
       * <pre>
       *抽取英雄
       * </pre>
       *
       * <code>HeroPubLotteryREQ = 530002;</code>
       */
      HeroPubLotteryREQ(530002),
      /**
       * <pre>
       *招募英雄
       * </pre>
       *
       * <code>HeroPubRecruitREQ = 530003;</code>
       */
      HeroPubRecruitREQ(530003),
      /**
       * <pre>
       *获取图鉴英雄信息返回
       * </pre>
       *
       * <code>HeroPubInfoACK = 530004;</code>
       */
      HeroPubInfoACK(530004),
      /**
       * <pre>
       *抽取英雄
       * </pre>
       *
       * <code>HeroPubLotteryACK = 530005;</code>
       */
      HeroPubLotteryACK(530005),
      /**
       * <pre>
       *升级联合技能
       * </pre>
       *
       * <code>HeroPubUpZoariumSkillREQ = 530006;</code>
       */
      HeroPubUpZoariumSkillREQ(530006),
      /**
       * <pre>
       *升级联合技能返回
       * </pre>
       *
       * <code>HeroPubUpZoariumSkillACK = 530007;</code>
       */
      HeroPubUpZoariumSkillACK(530007),
      /**
       * <pre>
       *招募英雄返回
       * </pre>
       *
       * <code>HeroPubRecruitACK = 530008;</code>
       */
      HeroPubRecruitACK(530008),
      /**
       * <pre>
       *转生
       * </pre>
       *
       * <code>HeroZsREQ = 530009;</code>
       */
      HeroZsREQ(530009),
      /**
       * <pre>
       *转生返回
       * </pre>
       *
       * <code>HeroZsACK = 530010;</code>
       */
      HeroZsACK(530010),
      /**
       * <pre>
       *突破
       * </pre>
       *
       * <code>HeroTpREQ = 530011;</code>
       */
      HeroTpREQ(530011),
      /**
       * <pre>
       *突破返回
       * </pre>
       *
       * <code>HeroTpACK = 530012;</code>
       */
      HeroTpACK(530012),
      /**
       * <pre>
       *改造
       * </pre>
       *
       * <code>HeroGzREQ = 530013;</code>
       */
      HeroGzREQ(530013),
      /**
       * <pre>
       *改造返回
       * </pre>
       *
       * <code>HeroGzACK = 530014;</code>
       */
      HeroGzACK(530014),
      /**
       * <pre>
       *回炉
       * </pre>
       *
       * <code>HeroHlREQ = 530015;</code>
       */
      HeroHlREQ(530015),
      /**
       * <pre>
       *回炉返回
       * </pre>
       *
       * <code>HeroHlACK = 530016;</code>
       */
      HeroHlACK(530016),
      /**
       * <pre>
       *获取突破信息
       * </pre>
       *
       * <code>GetHeroTpInfoREQ = 530017;</code>
       */
      GetHeroTpInfoREQ(530017),
      /**
       * <pre>
       *获取突破信息返回
       * </pre>
       *
       * <code>GetHeroTpInfoACK = 530018;</code>
       */
      GetHeroTpInfoACK(530018),
      /**
       * <pre>
       *获取改造信息
       * </pre>
       *
       * <code>GetHeroGzInfoREQ = 530019;</code>
       */
      GetHeroGzInfoREQ(530019),
      /**
       * <pre>
       *获取改造信息返回
       * </pre>
       *
       * <code>GetHeroGzInfoACK = 530020;</code>
       */
      GetHeroGzInfoACK(530020),
      /**
       * <pre>
       *保存改造
       * </pre>
       *
       * <code>HeroSaveGzREQ = 530021;</code>
       */
      HeroSaveGzREQ(530021),
      /**
       * <pre>
       *保存改造返回
       * </pre>
       *
       * <code>HeroSaveGzACK = 530022;</code>
       */
      HeroSaveGzACK(530022),
      /**
       * <pre>
       *跟随
       * </pre>
       *
       * <code>HeroFollowREQ = 530023;</code>
       */
      HeroFollowREQ(530023),
      /**
       * <pre>
       *人物转生
       * </pre>
       *
       * <code>HeroPlayerZsREQ = 530024;</code>
       */
      HeroPlayerZsREQ(530024),
      /**
       * <pre>
       *人物转生返回
       * </pre>
       *
       * <code>HeroPlayerZsACK = 530025;</code>
       */
      HeroPlayerZsACK(530025),
      /**
       * <pre>
       *喂养
       * </pre>
       *
       * <code>HeroExpREQ = 530026;</code>
       */
      HeroExpREQ(530026),
      /**
       * <pre>
       *喂养返回
       * </pre>
       *
       * <code>HeroExpACK = 530027;</code>
       */
      HeroExpACK(530027),
      /**
       * <pre>
       *人物宠物改名
       * </pre>
       *
       * <code>HeroChangeNameREQ = 530028;</code>
       */
      HeroChangeNameREQ(530028),
      /**
       * <pre>
       *人物宠物改名
       * </pre>
       *
       * <code>HeroChangeNameACK = 530029;</code>
       */
      HeroChangeNameACK(530029),
      /**
       * <pre>
       *人物克制属性改变
       * </pre>
       *
       * <code>HeroRestraintREQ = 530030;</code>
       */
      HeroRestraintREQ(530030),
      /**
       * <pre>
       *洗练信息
       * </pre>
       *
       * <code>GetHeroXlInfoREQ = 530031;</code>
       */
      GetHeroXlInfoREQ(530031),
      /**
       * <pre>
       *获取洗练评级信息返回
       * </pre>
       *
       * <code>GetHeroXlInfoACK = 530033;</code>
       */
      GetHeroXlInfoACK(530033),
      /**
       * <pre>
       *洗练
       * </pre>
       *
       * <code>HeroXlREQ = 530034;</code>
       */
      HeroXlREQ(530034),
      /**
       * <pre>
       *保存洗练
       * </pre>
       *
       * <code>HeroSaveXlREQ = 530035;</code>
       */
      HeroSaveXlREQ(530035),
      /**
       * <pre>
       *宠物觉醒
       * </pre>
       *
       * <code>HeroAwakeningREQ = 530036;</code>
       */
      HeroAwakeningREQ(530036),
      /**
       * <pre>
       *宠物觉醒返回
       * </pre>
       *
       * <code>HeroAwakeningACK = 530037;</code>
       */
      HeroAwakeningACK(530037),
      /**
       * <pre>
       *请求锁宠物
       * </pre>
       *
       * <code>HeroLockREQ = 530038;</code>
       */
      HeroLockREQ(530038),
      /**
       * <pre>
       *获取召唤6星祭品
       * </pre>
       *
       * <code>GetOfferingInfoREQ = 530039;</code>
       */
      GetOfferingInfoREQ(530039),
      /**
       * <pre>
       *召唤6星祭品
       * </pre>
       *
       * <code>OfferingInfoACK = 530040;</code>
       */
      OfferingInfoACK(530040),
      /**
       * <pre>
       *召唤6星
       * </pre>
       *
       * <code>SummonSixCarPetREQ = 530041;</code>
       */
      SummonSixCarPetREQ(530041),
      /**
       * <pre>
       *技能进阶
       * </pre>
       *
       * <code>SkillAdvanceEQ = 530042;</code>
       */
      SkillAdvanceEQ(530042),
      /**
       * <pre>
       *战力引导
       * </pre>
       *
       * <code>GradeFrightInfoREQ = 540001;</code>
       */
      GradeFrightInfoREQ(540001),
      /**
       * <pre>
       *战力引导的信息获取返回
       * </pre>
       *
       * <code>GradeFrightInfoACK = 540002;</code>
       */
      GradeFrightInfoACK(540002),
      /**
       * <pre>
       *称号
       * </pre>
       *
       * <code>OpenTitleREQ = 550001;</code>
       */
      OpenTitleREQ(550001),
      /**
       * <pre>
       *称号使用
       * </pre>
       *
       * <code>UseTitleREQ = 550002;</code>
       */
      UseTitleREQ(550002),
      /**
       * <pre>
       *佩戴称号
       * </pre>
       *
       * <code>PutTitleREQ = 550003;</code>
       */
      PutTitleREQ(550003),
      /**
       * <pre>
       *升级
       * </pre>
       *
       * <code>UpTitleREQ = 550004;</code>
       */
      UpTitleREQ(550004),
      /**
       * <pre>
       *所有称号信息返回
       * </pre>
       *
       * <code>AllTitleInfoACK = 550005;</code>
       */
      AllTitleInfoACK(550005),
      /**
       * <pre>
       *铭文，猎命
       * </pre>
       *
       * <code>OpenHuntREQ = 560001;</code>
       */
      OpenHuntREQ(560001),
      /**
       * <pre>
       *开打面板返回
       * </pre>
       *
       * <code>OpenHuntACK = 560002;</code>
       */
      OpenHuntACK(560002),
      /**
       * <pre>
       *装备
       * </pre>
       *
       * <code>EquipHuntREQ = 560003;</code>
       */
      EquipHuntREQ(560003),
      /**
       * <pre>
       *卸下
       * </pre>
       *
       * <code>UnHuntREQ = 560004;</code>
       */
      UnHuntREQ(560004),
      /**
       * <pre>
       *强化
       * </pre>
       *
       * <code>UpgradeHuntREQ = 560005;</code>
       */
      UpgradeHuntREQ(560005),
      /**
       * <pre>
       *合成
       * </pre>
       *
       * <code>UpHuntREQ = 560006;</code>
       */
      UpHuntREQ(560006),
      /**
       * <pre>
       *分解
       * </pre>
       *
       * <code>DownHuntREQ = 560007;</code>
       */
      DownHuntREQ(560007),
      /**
       * <pre>
       *猎魂,一键猎魂
       * </pre>
       *
       * <code>DoHuntREQ = 560008;</code>
       */
      DoHuntREQ(560008),
      /**
       * <pre>
       *兑换
       * </pre>
       *
       * <code>ExchangeHuntREQ = 560009;</code>
       */
      ExchangeHuntREQ(560009),
      /**
       * <pre>
       *吞噬
       * </pre>
       *
       * <code>SwallowHuntREQ = 560010;</code>
       */
      SwallowHuntREQ(560010),
      /**
       * <pre>
       *开启格子
       * </pre>
       *
       * <code>OpenGridHuntREQ = 560011;</code>
       */
      OpenGridHuntREQ(560011),
      /**
       * <pre>
       *拾取碎片
       * </pre>
       *
       * <code>PickUpHuntREQ = 560012;</code>
       */
      PickUpHuntREQ(560012),
      /**
       * <pre>
       *宠物性格
       * </pre>
       *
       * <code>OpenCharacterREQ = 561001;</code>
       */
      OpenCharacterREQ(561001),
      /**
       * <pre>
       *返回宠物性格面板
       * </pre>
       *
       * <code>OpenCharacterACK = 561002;</code>
       */
      OpenCharacterACK(561002),
      /**
       * <pre>
       *请求抽取宠物性格
       * </pre>
       *
       * <code>SummonCharacterREQ = 561003;</code>
       */
      SummonCharacterREQ(561003),
      /**
       * <pre>
       *返回抽取宠物性格
       * </pre>
       *
       * <code>SummonCharacterACK = 561004;</code>
       */
      SummonCharacterACK(561004),
      /**
       * <pre>
       *请求选择宠物性格
       * </pre>
       *
       * <code>ChooseCharacterREQ = 561005;</code>
       */
      ChooseCharacterREQ(561005),
      /**
       * <pre>
       *返回选择宠物性格
       * </pre>
       *
       * <code>ChooseCharacterACK = 561006;</code>
       */
      ChooseCharacterACK(561006),
      /**
       * <pre>
       *请求吞丹宠物性格
       * </pre>
       *
       * <code>SwallowDanCharacterREQ = 561007;</code>
       */
      SwallowDanCharacterREQ(561007),
      /**
       * <pre>
       *返回吞丹宠物性格
       * </pre>
       *
       * <code>SwallowDanCharacterACK = 561008;</code>
       */
      SwallowDanCharacterACK(561008),
      /**
       * <pre>
       *请求卸载宠物性格
       * </pre>
       *
       * <code>UnloadCharacterREQ = 561009;</code>
       */
      UnloadCharacterREQ(561009),
      /**
       * <pre>
       *返回卸载宠物性格
       * </pre>
       *
       * <code>UnloadCharacterACK = 561010;</code>
       */
      UnloadCharacterACK(561010),
      /**
       * <pre>
       *请求英雄性格属性
       * </pre>
       *
       * <code>HeroCharactersREQ = 561011;</code>
       */
      HeroCharactersREQ(561011),
      /**
       * <pre>
       *返回英雄性格属性
       * </pre>
       *
       * <code>HeroCharactersACK = 561012;</code>
       */
      HeroCharactersACK(561012),
      /**
       * <pre>
       *请求穿戴宠物性格
       * </pre>
       *
       * <code>EquipCharacterREQ = 561013;</code>
       */
      EquipCharacterREQ(561013),
      /**
       * <pre>
       *返回穿戴宠物性格	
       * </pre>
       *
       * <code>EquipCharacterACK = 561014;</code>
       */
      EquipCharacterACK(561014),
      /**
       * <pre>
       *性格锁定
       * </pre>
       *
       * <code>CharacterLockREQ = 561015;</code>
       */
      CharacterLockREQ(561015),
      /**
       * <pre>
       *皮肤
       * </pre>
       *
       * <code>SkinInfoREQ = 562001;</code>
       */
      SkinInfoREQ(562001),
      /**
       * <code>SkinInfoACK = 562002;</code>
       */
      SkinInfoACK(562002),
      /**
       * <pre>
       *装备或卸下皮肤
       * </pre>
       *
       * <code>UseOrNoUseSkinREQ = 562003;</code>
       */
      UseOrNoUseSkinREQ(562003),
      /**
       * <pre>
       *精灵
       * </pre>
       *
       * <code>GetElfInfoREQ = 562004;</code>
       */
      GetElfInfoREQ(562004),
      /**
       * <pre>
       *响应精灵信息
       * </pre>
       *
       * <code>GetElfInfoACK = 562005;</code>
       */
      GetElfInfoACK(562005),
      /**
       * <pre>
       *出战精灵
       * </pre>
       *
       * <code>ToFightElfREQ = 562006;</code>
       */
      ToFightElfREQ(562006),
      /**
       * <pre>
       *喂养精灵
       * </pre>
       *
       * <code>FeedElfREQ = 562007;</code>
       */
      FeedElfREQ(562007),
      /**
       * <pre>
       *宠物塔防小游戏
       * </pre>
       *
       * <code>ZoosFightEnterREQ = 600001;</code>
       */
      ZoosFightEnterREQ(600001),
      /**
       * <pre>
       *进入关卡返回
       * </pre>
       *
       * <code>ZoosFightEnterACK = 600002;</code>
       */
      ZoosFightEnterACK(600002),
      /**
       * <pre>
       *请求庄园挑战排行榜
       * </pre>
       *
       * <code>GrangeRankREQ = 700001;</code>
       */
      GrangeRankREQ(700001),
      /**
       * <pre>
       *响应庄园挑战排行榜
       * </pre>
       *
       * <code>GrangeRankACK = 700002;</code>
       */
      GrangeRankACK(700002),
      /**
       * <pre>
       *庄园挑战商城购买
       * </pre>
       *
       * <code>GrangeShopREQ = 700003;</code>
       */
      GrangeShopREQ(700003),
      /**
       * <pre>
       *四属性BOSS血条
       * </pre>
       *
       * <code>GrangeBossHPACK = 700004;</code>
       */
      GrangeBossHPACK(700004),
      /**
       * <pre>
       *请求庄园挑战战斗
       * </pre>
       *
       * <code>GrangeFightREQ = 700005;</code>
       */
      GrangeFightREQ(700005),
      /**
       * <pre>
       *返回庄园挑战个人积分
       * </pre>
       *
       * <code>GrangeScoreACK = 700006;</code>
       */
      GrangeScoreACK(700006),
      /**
       * <pre>
       *请求庄园挑战商店信息
       * </pre>
       *
       * <code>GrangeShopInfoREQ = 700007;</code>
       */
      GrangeShopInfoREQ(700007),
      /**
       * <pre>
       *返回庄园挑战商店信息
       * </pre>
       *
       * <code>GrangeShopInfoACK = 700008;</code>
       */
      GrangeShopInfoACK(700008),
      /**
       * <pre>
       *9跨服
       * </pre>
       *
       * <code>CrossLogin = 900001;</code>
       */
      CrossLogin(900001),
      /**
       * <pre>
       *游戏服务器玩家离线	
       * </pre>
       *
       * <code>CrossPlayerOff = 900002;</code>
       */
      CrossPlayerOff(900002),
      /**
       * <pre>
       *跨服信息	
       * </pre>
       *
       * <code>CrossInfo = 900003;</code>
       */
      CrossInfo(900003),
      /**
       * <pre>
       *跨服活动图标开启
       * </pre>
       *
       * <code>CrossActivityOpen = 900004;</code>
       */
      CrossActivityOpen(900004),
      /**
       * <pre>
       *战斗状太
       * </pre>
       *
       * <code>CrossFightStatus = 900005;</code>
       */
      CrossFightStatus(900005),
      /**
       * <pre>
       *修改人物
       * </pre>
       *
       * <code>CrossUpdataPlayer = 900006;</code>
       */
      CrossUpdataPlayer(900006),
      /**
       * <pre>
       *人物信息
       * </pre>
       *
       * <code>CrossPlayerInfo = 900007;</code>
       */
      CrossPlayerInfo(900007),
      /**
       * <pre>
       *邮件
       * </pre>
       *
       * <code>CrossEmail = 900008;</code>
       */
      CrossEmail(900008),
      /**
       * <pre>
       *状太
       * </pre>
       *
       * <code>CrossStatus = 900009;</code>
       */
      CrossStatus(900009),
      /**
       * <pre>
       *地图
       * </pre>
       *
       * <code>CrossServerMap = 900010;</code>
       */
      CrossServerMap(900010),
      /**
       * <pre>
       *地图移动
       * </pre>
       *
       * <code>CrossMapMove = 900011;</code>
       */
      CrossMapMove(900011),
      /**
       * <pre>
       *秘境追踪
       * </pre>
       *
       * <code>PlayerDiceDataREQ = 910001;</code>
       */
      PlayerDiceDataREQ(910001),
      /**
       * <pre>
       *返回秘境追踪页面
       * </pre>
       *
       * <code>PlayerDiceDataACK = 910002;</code>
       */
      PlayerDiceDataACK(910002),
      /**
       * <pre>
       *请求摇骰子
       * </pre>
       *
       * <code>PlayerRollTheDiceREQ = 910003;</code>
       */
      PlayerRollTheDiceREQ(910003),
      /**
       * <pre>
       *返回摇骰子的数字
       * </pre>
       *
       * <code>PlayerRollTheDiceACK = 910004;</code>
       */
      PlayerRollTheDiceACK(910004),
      /**
       * <pre>
       *返回玩家最终位置
       * </pre>
       *
       * <code>PlayerDiceSiteACK = 910005;</code>
       */
      PlayerDiceSiteACK(910005),
      /**
       * <pre>
       *返回玩家地图历史
       * </pre>
       *
       * <code>PlayerDiceHistoryACK = 910006;</code>
       */
      PlayerDiceHistoryACK(910006),
      /**
       * <pre>
       *挑战boss
       * </pre>
       *
       * <code>PlayerDiceChallengeBossREQ = 910007;</code>
       */
      PlayerDiceChallengeBossREQ(910007),
      /**
       * <pre>
       *节日拼图
       * </pre>
       *
       * <code>HolidayPuzzleDataREQ = 911001;</code>
       */
      HolidayPuzzleDataREQ(911001),
      /**
       * <pre>
       *返回节日拼图信息
       * </pre>
       *
       * <code>HolidayPuzzleDataACK = 911002;</code>
       */
      HolidayPuzzleDataACK(911002),
      /**
       * <pre>
       *领取节日拼图奖励
       * </pre>
       *
       * <code>HolidayPuzzleAcceptAwardREQ = 911003;</code>
       */
      HolidayPuzzleAcceptAwardREQ(911003),
      /**
       * <pre>
       *返回节日拼图奖励
       * </pre>
       *
       * <code>HolidayPuzzleAcceptAwardACK = 911004;</code>
       */
      HolidayPuzzleAcceptAwardACK(911004),
      /**
       * <pre>
       *请求节日抽宠、消费好礼，信息
       * </pre>
       *
       * <code>FestivalActiveInfoREQ = 911005;</code>
       */
      FestivalActiveInfoREQ(911005),
      /**
       * <pre>
       *返回节日抽宠、消费好礼，信息
       * </pre>
       *
       * <code>FestivalActiveInfoACK = 911006;</code>
       */
      FestivalActiveInfoACK(911006),
      /**
       * <pre>
       *节日抽宠请求
       * </pre>
       *
       * <code>DrawPetREQ = 911007;</code>
       */
      DrawPetREQ(911007),
      /**
       * <pre>
       *领取宝箱等礼包
       * </pre>
       *
       * <code>GetFestivalActiveRewardREQ = 911008;</code>
       */
      GetFestivalActiveRewardREQ(911008),
      /**
       * <pre>
       *请求完成节日拼图任务
       * </pre>
       *
       * <code>HolidayPuzzleAccomplishTaskREQ = 911009;</code>
       */
      HolidayPuzzleAccomplishTaskREQ(911009),
      /**
       * <pre>
       *返回完成节日拼图任务
       * </pre>
       *
       * <code>HolidayPuzzleAccomplishTaskACK = 911010;</code>
       */
      HolidayPuzzleAccomplishTaskACK(911010),
      /**
       * <pre>
       *请求节日限时礼包界面
       * </pre>
       *
       * <code>HolidayLimitGiftEnterREQ = 911011;</code>
       */
      HolidayLimitGiftEnterREQ(911011),
      /**
       * <pre>
       *返回节日限时礼包界面
       * </pre>
       *
       * <code>HolidayLimitGiftEnterACK = 911012;</code>
       */
      HolidayLimitGiftEnterACK(911012),
      /**
       * <pre>
       *请求购买节日限时礼包
       * </pre>
       *
       * <code>HolidayLimitGiftBuyREQ = 911013;</code>
       */
      HolidayLimitGiftBuyREQ(911013),
      /**
       * <pre>
       *返回购买节日限时礼包
       * </pre>
       *
       * <code>HolidayLimitGiftBuyACK = 911014;</code>
       */
      HolidayLimitGiftBuyACK(911014),
      /**
       * <pre>
       *异界副本
       * </pre>
       *
       * <code>AnotherWorldGetActREQ = 912001;</code>
       */
      AnotherWorldGetActREQ(912001),
      /**
       * <pre>
       *返回异界副本信息
       * </pre>
       *
       * <code>AnotherWorldGetActACK = 912002;</code>
       */
      AnotherWorldGetActACK(912002),
      /**
       * <pre>
       *请求异界副本战斗
       * </pre>
       *
       * <code>AnotherWorldChallengeREQ = 912003;</code>
       */
      AnotherWorldChallengeREQ(912003),
      /**
       * <pre>
       *返回异界副本战斗
       * </pre>
       *
       * <code>AnotherWorldChallengeACK = 912004;</code>
       */
      AnotherWorldChallengeACK(912004),
      /**
       * <pre>
       *请求异界副本商店购买
       * </pre>
       *
       * <code>AnotherWorldShopREQ = 912005;</code>
       */
      AnotherWorldShopREQ(912005),
      /**
       * <pre>
       *请求兑换虚空石
       * </pre>
       *
       * <code>ExchangeStoneREQ = 912006;</code>
       */
      ExchangeStoneREQ(912006),
      /**
       * <pre>
       *活动模块
       * </pre>
       *
       * <code>GetActivityAwardREQ = 920001;</code>
       */
      GetActivityAwardREQ(920001),
      /**
       * <pre>
       *客户端活动信息
       * </pre>
       *
       * <code>ActClinetInfoACK = 920002;</code>
       */
      ActClinetInfoACK(920002),
      /**
       * <pre>
       *请求领取奖励,只带次数
       * </pre>
       *
       * <code>GetActivityAward2REQ = 920003;</code>
       */
      GetActivityAward2REQ(920003),
      /**
       * <pre>
       *请求购买砸蛋次数
       * </pre>
       *
       * <code>SmashEggsTotalREQ = 920004;</code>
       */
      SmashEggsTotalREQ(920004),
      /**
       * <pre>
       *新活动菜单开启集合
       * </pre>
       *
       * <code>MenuTypeListACK = 920005;</code>
       */
      MenuTypeListACK(920005),
      /**
       * <pre>
       *请求获取活动信息
       * </pre>
       *
       * <code>ActivityInfoREQ = 920006;</code>
       */
      ActivityInfoREQ(920006),
      /**
       * <pre>
       *符文模块
       * </pre>
       *
       * <code>LoadRuneItemREQ = 921001;</code>
       */
      LoadRuneItemREQ(921001),
      /**
       * <pre>
       *卸载符文道具
       * </pre>
       *
       * <code>NnloadRuneItemREQ = 921002;</code>
       */
      NnloadRuneItemREQ(921002),
      /**
       * <pre>
       *请求查看英雄的符文道具
       * </pre>
       *
       * <code>HeroRuneItemInfoREQ = 921003;</code>
       */
      HeroRuneItemInfoREQ(921003),
      /**
       * <pre>
       *返回查看英雄的符文道具
       * </pre>
       *
       * <code>HeroRuneItemInfoACK = 921004;</code>
       */
      HeroRuneItemInfoACK(921004),
      /**
       * <pre>
       *出售符文道具
       * </pre>
       *
       * <code>SellRuneItemREQ = 921005;</code>
       */
      SellRuneItemREQ(921005),
      /**
       * <pre>
       *打开符文背包仓库
       * </pre>
       *
       * <code>OpenRuneStorageREQ = 921006;</code>
       */
      OpenRuneStorageREQ(921006),
      /**
       * <pre>
       *是否穿戴成功
       * </pre>
       *
       * <code>LoadRuneItemSucceedACK = 921007;</code>
       */
      LoadRuneItemSucceedACK(921007),
      /**
       * <pre>
       *请求切换符文套装
       * </pre>
       *
       * <code>SwitchRuneSuitREQ = 921008;</code>
       */
      SwitchRuneSuitREQ(921008),
      /**
       * <pre>
       *请求锁定符文(符文背包)
       * </pre>
       *
       * <code>LockRuneREQ = 921009;</code>
       */
      LockRuneREQ(921009),
      /**
       * <pre>
       *数值货币模块
       * </pre>
       *
       * <code>NumCurrencyACK = 922001;</code>
       */
      NumCurrencyACK(922001),
      /**
       * <pre>
       *挑战赛季塔
       * </pre>
       *
       * <code>FightSportsTowerREQ = 922004;</code>
       */
      FightSportsTowerREQ(922004),
      /**
       * <pre>
       *打开赛季塔跨服排行榜
       * </pre>
       *
       * <code>SportsTowerCrossRankREQ = 922005;</code>
       */
      SportsTowerCrossRankREQ(922005),
      /**
       * <pre>
       *响应赛季塔跨服排行榜
       * </pre>
       *
       * <code>SportsTowerCrossRankACK = 922006;</code>
       */
      SportsTowerCrossRankACK(922006),
      /**
       * <pre>
       *赛季塔前三名
       * </pre>
       *
       * <code>SportsTowerTop3ACK = 922007;</code>
       */
      SportsTowerTop3ACK(922007),
      /**
       * <pre>
       *使用光环
       * </pre>
       *
       * <code>UseHaloIdREQ = 922008;</code>
       */
      UseHaloIdREQ(922008),
      /**
       * <pre>
       *使用道具获得光环
       * </pre>
       *
       * <code>UseItemGetHaloREQ = 922009;</code>
       */
      UseItemGetHaloREQ(922009),
      /**
       * <pre>
       *返回光环协议
       * </pre>
       *
       * <code>HaloInfoACK = 922010;</code>
       */
      HaloInfoACK(922010),
      /**
       * <pre>
       *请求宠物基因罐
       * </pre>
       *
       * <code>HeroDndCanREQ = 922011;</code>
       */
      HeroDndCanREQ(922011),
      /**
       * <pre>
       *返回宠物基因罐
       * </pre>
       *
       * <code>HeroDndCanACK = 922012;</code>
       */
      HeroDndCanACK(922012),
      /**
       * <pre>
       *请求宠物基因改造
       * </pre>
       *
       * <code>HeroDndUpdateREQ = 922013;</code>
       */
      HeroDndUpdateREQ(922013),
      /**
       * <pre>
       *请求赛季塔英雄上阵
       * </pre>
       *
       * <code>SportsTowerHeroREQ = 922015;</code>
       */
      SportsTowerHeroREQ(922015),
      /**
       * <pre>
       *响应赛季塔英雄上阵
       * </pre>
       *
       * <code>SportsTowerHeroACK = 922016;</code>
       */
      SportsTowerHeroACK(922016),
      /**
       * <pre>
       *查看符合宠物基因改造
       * </pre>
       *
       * <code>LookHeroDndACK = 922014;</code>
       */
      LookHeroDndACK(922014),
      /**
       * <pre>
       *请求符合改造条件的宠物
       * </pre>
       *
       * <code>LookHeroDndREQ = 922017;</code>
       */
      LookHeroDndREQ(922017),
      /**
       * <pre>
       *请求符合宠物基因献祭的宠物
       * </pre>
       *
       * <code>LookHeroDndDissREQ = 922018;</code>
       */
      LookHeroDndDissREQ(922018),
      /**
       * <pre>
       *响应符合宠物基因献祭的宠物
       * </pre>
       *
       * <code>LookHeroDndDissACK = 922019;</code>
       */
      LookHeroDndDissACK(922019),
      /**
       * <pre>
       *请求宠物的基因详细信息
       * </pre>
       *
       * <code>HeroDndMapInfoREQ = 922020;</code>
       */
      HeroDndMapInfoREQ(922020),
      /**
       * <pre>
       *响应宠物的基因详细信息
       * </pre>
       *
       * <code>HeroDndMapInfoACK = 922021;</code>
       */
      HeroDndMapInfoACK(922021),
      /**
       * <pre>
       *请求查看宠物裸战力
       * </pre>
       *
       * <code>HeroNudePowerREQ = 922022;</code>
       */
      HeroNudePowerREQ(922022),
      /**
       * <pre>
       *响应查看宠物裸战力
       * </pre>
       *
       * <code>HeroNudePowerACK = 922023;</code>
       */
      HeroNudePowerACK(922023),
      /**
       * <pre>
       *宠物学习第二技能
       * </pre>
       *
       * <code>HeroStudySkillREQ = 922024;</code>
       */
      HeroStudySkillREQ(922024),
      /**
       * <pre>
       *请求精灵试炼天赋提升等级
       * </pre>
       *
       * <code>SportTrialTalentAddLvREQ = 922025;</code>
       */
      SportTrialTalentAddLvREQ(922025),
      /**
       * <pre>
       *请求精灵试炼天赋信息
       * </pre>
       *
       * <code>SportTrialTalentREQ = 922026;</code>
       */
      SportTrialTalentREQ(922026),
      /**
       * <pre>
       *响应精灵试炼天赋信息
       * </pre>
       *
       * <code>SportTrialTalentACK = 922027;</code>
       */
      SportTrialTalentACK(922027),
      /**
       * <pre>
       *精灵王天梯赛战斗
       * </pre>
       *
       * <code>ElfKingFightREQ = 922028;</code>
       */
      ElfKingFightREQ(922028),
      /**
       * <pre>
       *请求精灵试炼跨服排行榜
       * </pre>
       *
       * <code>ElfKingCrossRankREQ = 922029;</code>
       */
      ElfKingCrossRankREQ(922029),
      /**
       * <pre>
       *响应精灵试炼跨服排行榜
       * </pre>
       *
       * <code>ElfKingCrossRankACK = 922030;</code>
       */
      ElfKingCrossRankACK(922030),
      /**
       * <pre>
       *登录webg后台		
       * </pre>
       *
       * <code>GmWebLoginREQ = 990001;</code>
       */
      GmWebLoginREQ(990001),
      /**
       * <pre>
       *角色总数信息
       * </pre>
       *
       * <code>GmSendAllPlayerREQ = 990003;</code>
       */
      GmSendAllPlayerREQ(990003),
      /**
       * <pre>
       *查询角色信息
       * </pre>
       *
       * <code>GmSendPlayerInfoREQ = 990004;</code>
       */
      GmSendPlayerInfoREQ(990004),
      /**
       * <pre>
       *查在线人线
       * </pre>
       *
       * <code>GmSendAllZxREQ = 990005;</code>
       */
      GmSendAllZxREQ(990005),
      /**
       * <pre>
       *后台邮件
       * </pre>
       *
       * <code>GmSendEmailREQ = 990006;</code>
       */
      GmSendEmailREQ(990006),
      /**
       * <pre>
       *发布公告
       * </pre>
       *
       * <code>GmSendNoticeREQ = 990007;</code>
       */
      GmSendNoticeREQ(990007),
      /**
       * <pre>
       *禁言
       * </pre>
       *
       * <code>GmSendNoSpeakREQ = 990008;</code>
       */
      GmSendNoSpeakREQ(990008),
      /**
       * <pre>
       *解禁言
       * </pre>
       *
       * <code>GmSendSpeakREQ = 990009;</code>
       */
      GmSendSpeakREQ(990009),
      /**
       * <pre>
       *封|解账号
       * </pre>
       *
       * <code>GmSendForbidAccountREQ = 990010;</code>
       */
      GmSendForbidAccountREQ(990010),
      /**
       * <pre>
       *充值查询
       * </pre>
       *
       * <code>GmSendQueryRechargeREQ = 990011;</code>
       */
      GmSendQueryRechargeREQ(990011),
      /**
       * <pre>
       *T某位玩家下
       * </pre>
       *
       * <code>GmSendLogoutPlayerREQ = 990012;</code>
       */
      GmSendLogoutPlayerREQ(990012),
      /**
       * <pre>
       *T所有玩家下
       * </pre>
       *
       * <code>GmSendLogoutAllREQ = 990013;</code>
       */
      GmSendLogoutAllREQ(990013),
      /**
       * <pre>
       *测试充值
       * </pre>
       *
       * <code>GmSendRechargeREQ = 990014;</code>
       */
      GmSendRechargeREQ(990014),
      /**
       * <pre>
       *获取vip信息
       * </pre>
       *
       * <code>GmSendVipInfoREQ = 990015;</code>
       */
      GmSendVipInfoREQ(990015),
      /**
       * <pre>
       *获取后台数据
       * </pre>
       *
       * <code>GmSendDataREQ = 990016;</code>
       */
      GmSendDataREQ(990016),
      /**
       * <pre>
       *响应后台数据
       * </pre>
       *
       * <code>GmSendDataACK = 990017;</code>
       */
      GmSendDataACK(990017),
      /**
       * <pre>
       *响应VIP数据
       * </pre>
       *
       * <code>GmSendVipInfoACK = 990018;</code>
       */
      GmSendVipInfoACK(990018),
      /**
       * <pre>
       *获取抖音渠道
       * </pre>
       *
       * <code>GmDYChannelDataREQ = 990019;</code>
       */
      GmDYChannelDataREQ(990019),
      /**
       * <pre>
       *响应抖音渠道
       * </pre>
       *
       * <code>GmDYChannelDataACK = 990020;</code>
       */
      GmDYChannelDataACK(990020),
      /**
       * <pre>
       *游戏命令调用
       * </pre>
       *
       * <code>GmWebCmdREQ = 990021;</code>
       */
      GmWebCmdREQ(990021),
      /**
       * <pre>
       *获取快手渠道
       * </pre>
       *
       * <code>GmKuaishouDataREQ = 990022;</code>
       */
      GmKuaishouDataREQ(990022),
      /**
       * <pre>
       *后台服务器邮件列表请求
       * </pre>
       *
       * <code>GmServerEmailREQ = 990023;</code>
       */
      GmServerEmailREQ(990023),
      /**
       * <pre>
       *后台服务器邮件列表响应
       * </pre>
       *
       * <code>GmServerEmailACK = 990024;</code>
       */
      GmServerEmailACK(990024),
      /**
       * <pre>
       *删除服务器邮件
       * </pre>
       *
       * <code>GmDeleteServerEmailREQ = 990025;</code>
       */
      GmDeleteServerEmailREQ(990025),
      /**
       * <pre>
       *渠道数据监控
       * </pre>
       *
       * <code>GmChannelMonitorREQ = 990026;</code>
       */
      GmChannelMonitorREQ(990026),
      /**
       * <pre>
       *后台服务器公告列表请求
       * </pre>
       *
       * <code>GmServerNoticeREQ = 990027;</code>
       */
      GmServerNoticeREQ(990027),
      /**
       * <pre>
       *删除服务器公告
       * </pre>
       *
       * <code>GmDeleteServerNoticeREQ = 990028;</code>
       */
      GmDeleteServerNoticeREQ(990028),
      /**
       * <pre>
       *渠道gm账号数据
       * </pre>
       *
       * <code>GmOnlyChannelDataREQ = 990029;</code>
       */
      GmOnlyChannelDataREQ(990029),
      /**
       * <pre>
       *删除假玩家
       * </pre>
       *
       * <code>GmDeleteFakePlayerREQ = 990030;</code>
       */
      GmDeleteFakePlayerREQ(990030),
      /**
       * <pre>
       *所有渠道类型
       * </pre>
       *
       * <code>GmGetChannelTypeREQ = 990031;</code>
       */
      GmGetChannelTypeREQ(990031),
      /**
       * <pre>
       *所有渠道类型
       * </pre>
       *
       * <code>GmGetChannelTypeACK = 990032;</code>
       */
      GmGetChannelTypeACK(990032),
      /**
       * <pre>
       *游戏登录公告
       * </pre>
       *
       * <code>GmLoginNoticeREQ = 990033;</code>
       */
      GmLoginNoticeREQ(990033),
      /**
       * <pre>
       *游戏登录公告
       * </pre>
       *
       * <code>GmLoginNoticeACK = 990034;</code>
       */
      GmLoginNoticeACK(990034),
      /**
       * <pre>
       *IP基础数据查询
       * </pre>
       *
       * <code>GmBasisIPDataREQ = 990035;</code>
       */
      GmBasisIPDataREQ(990035),
      /**
       * <pre>
       *假停服维护 {"stopTime":开服时间戳,"openTime":停服时间戳}
       * </pre>
       *
       * <code>StopServerPreserveREQ = 990036;</code>
       */
      StopServerPreserveREQ(990036),
      /**
       * <pre>
       *英雄一键改造
       * </pre>
       *
       * <code>HeroOneKeyRemouldREQ = 990037;</code>
       */
      HeroOneKeyRemouldREQ(990037),
      /**
       * <pre>
       *场景资源信息
       * </pre>
       *
       * <code>SceneResourceACK = 990038;</code>
       */
      SceneResourceACK(990038),
      /**
       * <pre>
       *请求资源占领
       * </pre>
       *
       * <code>SceneResourceHoldREQ = 990039;</code>
       */
      SceneResourceHoldREQ(990039),
      /**
       * <pre>
       *请求资源占领活动信息
       * </pre>
       *
       * <code>OpenResourceSnatchREQ = 990040;</code>
       */
      OpenResourceSnatchREQ(990040),
      /**
       * <pre>
       *响应资源占领活动信息
       * </pre>
       *
       * <code>OpenResourceSnatchACK = 990041;</code>
       */
      OpenResourceSnatchACK(990041),
      /**
       * <pre>
       *领取资源争夺战奖励
       * </pre>
       *
       * <code>ResourceSnatchRwardREQ = 990042;</code>
       */
      ResourceSnatchRwardREQ(990042),
      /**
       * <pre>
       *请求英雄上阵信息
       * </pre>
       *
       * <code>ResourceSnatchHeroREQ = 990043;</code>
       */
      ResourceSnatchHeroREQ(990043),
      /**
       * <pre>
       *响应英雄上阵信息
       * </pre>
       *
       * <code>ResourceSnatchHeroACK = 990044;</code>
       */
      ResourceSnatchHeroACK(990044),
      /**
       * <pre>
       *进入预言塔场景
       * </pre>
       *
       * <code>EnterPredictedTowerREQ = 990045;</code>
       */
      EnterPredictedTowerREQ(990045),
      /**
       * <pre>
       *响应预言塔场景
       * </pre>
       *
       * <code>EnterPredictedTowerACK = 990046;</code>
       */
      EnterPredictedTowerACK(990046),
      /**
       * <pre>
       *请求预言塔战斗
       * </pre>
       *
       * <code>PredictedTowerFightREQ = 990047;</code>
       */
      PredictedTowerFightREQ(990047),
      /**
       * <pre>
       *请求退出预言塔,踢到渔村
       * </pre>
       *
       * <code>PredictedTowerExitREQ = 990048;</code>
       */
      PredictedTowerExitREQ(990048),
      /**
       * <pre>
       *请求预言塔排行榜
       * </pre>
       *
       * <code>PredictedTowerRankREQ = 990049;</code>
       */
      PredictedTowerRankREQ(990049),
      /**
       * <pre>
       *响应预言塔排行榜
       * </pre>
       *
       * <code>PredictedTowerRankACK = 990050;</code>
       */
      PredictedTowerRankACK(990050),
      /**
       * <pre>
       *预言塔商城购买
       * </pre>
       *
       * <code>PredictedTowerShopREQ = 990051;</code>
       */
      PredictedTowerShopREQ(990051),
      /**
       * <pre>
       *预言塔退出
       * </pre>
       *
       * <code>PredictedTowerExitACK = 990052;</code>
       */
      PredictedTowerExitACK(990052),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * 测试
       * </pre>
       *
       * <code>ZeroTest = 0;</code>
       */
      public static final int ZeroTest_VALUE = 0;
      /**
       * <pre>
       * 飘字
       * </pre>
       *
       * <code>FolatMsg = 1001;</code>
       */
      public static final int FolatMsg_VALUE = 1001;
      /**
       * <pre>
       * 弹框
       * </pre>
       *
       * <code>AlertMsg = 1002;</code>
       */
      public static final int AlertMsg_VALUE = 1002;
      /**
       * <pre>
       *心跳  
       * </pre>
       *
       * <code>HeartREQ = 1003;</code>
       */
      public static final int HeartREQ_VALUE = 1003;
      /**
       * <pre>
       *心跳 
       * </pre>
       *
       * <code>HeartACK = 1004;</code>
       */
      public static final int HeartACK_VALUE = 1004;
      /**
       * <pre>
       *报错发送到服务器
       * </pre>
       *
       * <code>ExceptionREQ = 1005;</code>
       */
      public static final int ExceptionREQ_VALUE = 1005;
      /**
       * <pre>
       *服务器报错发送
       * </pre>
       *
       * <code>ExceptionACK = 1006;</code>
       */
      public static final int ExceptionACK_VALUE = 1006;
      /**
       * <pre>
       *停服公告
       * </pre>
       *
       * <code>StopServerNoticeACK = 1007;</code>
       */
      public static final int StopServerNoticeACK_VALUE = 1007;
      /**
       * <pre>
       * </pre>
       *
       * <code>InitSocket = 1008;</code>
       */
      public static final int InitSocket_VALUE = 1008;
      /**
       * <pre>
       *获取版本信息 http
       * </pre>
       *
       * <code>GetVInfo = 1009;</code>
       */
      public static final int GetVInfo_VALUE = 1009;
      /**
       * <pre>
       *客户端测试日志 http
       * </pre>
       *
       * <code>ClientTestLogREQ = 2000;</code>
       */
      public static final int ClientTestLogREQ_VALUE = 2000;
      /**
       * <pre>
       *帐号登录 http
       * </pre>
       *
       * <code>LoginAccountREQ = 2001;</code>
       */
      public static final int LoginAccountREQ_VALUE = 2001;
      /**
       * <pre>
       *帐号登录返回 http
       * </pre>
       *
       * <code>LoginAccountACK = 2002;</code>
       */
      public static final int LoginAccountACK_VALUE = 2002;
      /**
       * <pre>
       *创建帐号 http
       * </pre>
       *
       * <code>CreateAccountREQ = 2003;</code>
       */
      public static final int CreateAccountREQ_VALUE = 2003;
      /**
       * <pre>
       *创建帐号 http
       * </pre>
       *
       * <code>CreateAccountACK = 2004;</code>
       */
      public static final int CreateAccountACK_VALUE = 2004;
      /**
       * <pre>
       *获取手机验证码 http
       * </pre>
       *
       * <code>GetAccountCoedREQ = 2005;</code>
       */
      public static final int GetAccountCoedREQ_VALUE = 2005;
      /**
       * <pre>
       *分页获取正试服 http
       * </pre>
       *
       * <code>GetPageServerConfigREQ = 2006;</code>
       */
      public static final int GetPageServerConfigREQ_VALUE = 2006;
      /**
       * <pre>
       *创建登录趣炫  http
       * </pre>
       *
       * <code>QxCreateAccountREQ = 2007;</code>
       */
      public static final int QxCreateAccountREQ_VALUE = 2007;
      /**
       * <pre>
       *请求服务器加入防沉迷 {"userAccount":"唯一用户名","idNum":"身份证","name":"姓名"}
       * </pre>
       *
       * <code>AntiAddictionREQ = 2008;</code>
       */
      public static final int AntiAddictionREQ_VALUE = 2008;
      /**
       * <pre>
       *请求服务器校验防沉迷是否实名成功{"userAccount":"唯一用户名"}
       * </pre>
       *
       * <code>AgainVerifyAntiAddictionREQ = 2009;</code>
       */
      public static final int AgainVerifyAntiAddictionREQ_VALUE = 2009;
      /**
       * <pre>
       *进入游戏 http
       * </pre>
       *
       * <code>LoginGameREQ = 3001;</code>
       */
      public static final int LoginGameREQ_VALUE = 3001;
      /**
       * <pre>
       *进入游戏返回 http
       * </pre>
       *
       * <code>LoginGameACK = 3002;</code>
       */
      public static final int LoginGameACK_VALUE = 3002;
      /**
       * <pre>
       *请求服务器随机生成的游戏名 http
       * </pre>
       *
       * <code>RandomCreateNickNameREQ = 3003;</code>
       */
      public static final int RandomCreateNickNameREQ_VALUE = 3003;
      /**
       * <pre>
       *创建人物 http
       * </pre>
       *
       * <code>CreatePlayerREQ = 100004;</code>
       */
      public static final int CreatePlayerREQ_VALUE = 100004;
      /**
       * <pre>
       *创建人物 http
       * </pre>
       *
       * <code>CreatePlayerACK = 100005;</code>
       */
      public static final int CreatePlayerACK_VALUE = 100005;
      /**
       * <pre>
       *player
       * </pre>
       *
       * <code>LoginPlayerREQ = 100001;</code>
       */
      public static final int LoginPlayerREQ_VALUE = 100001;
      /**
       * <pre>
       *人物进入游戏
       * </pre>
       *
       * <code>LoginPlayerACK = 100002;</code>
       */
      public static final int LoginPlayerACK_VALUE = 100002;
      /**
       * <pre>
       *其它人物登录
       * </pre>
       *
       * <code>PlayerLoginOut = 100003;</code>
       */
      public static final int PlayerLoginOut_VALUE = 100003;
      /**
       * <pre>
       *阵型 战术策略 所有信息
       * </pre>
       *
       * <code>FormationInfoACK = 100006;</code>
       */
      public static final int FormationInfoACK_VALUE = 100006;
      /**
       * <pre>
       *主角属性
       * </pre>
       *
       * <code>HeroAttaributeACK = 100007;</code>
       */
      public static final int HeroAttaributeACK_VALUE = 100007;
      /**
       * <pre>
       *修改玩家动作
       * </pre>
       *
       * <code>HeroUpdateActionACK = 100008;</code>
       */
      public static final int HeroUpdateActionACK_VALUE = 100008;
      /**
       * <pre>
       *显示其它人信息
       * </pre>
       *
       * <code>ShowOtherPlayer = 100009;</code>
       */
      public static final int ShowOtherPlayer_VALUE = 100009;
      /**
       * <pre>
       *获取宠物伙伴详细属性
       * </pre>
       *
       * <code>HeroAttaributeREQ = 100010;</code>
       */
      public static final int HeroAttaributeREQ_VALUE = 100010;
      /**
       * <pre>
       *调整上阵 
       * </pre>
       *
       * <code>FormationUpdateREQ = 100011;</code>
       */
      public static final int FormationUpdateREQ_VALUE = 100011;
      /**
       * <pre>
       *人物属性修改近回
       * </pre>
       *
       * <code>UpdatePlayerACK = 100012;</code>
       */
      public static final int UpdatePlayerACK_VALUE = 100012;
      /**
       * <pre>
       *调试模式gm请求
       * </pre>
       *
       * <code>GmCmdREQ = 100013;</code>
       */
      public static final int GmCmdREQ_VALUE = 100013;
      /**
       * <pre>
       *删除宠物伙伴
       * </pre>
       *
       * <code>DelHeroREQ = 100014;</code>
       */
      public static final int DelHeroREQ_VALUE = 100014;
      /**
       * <pre>
       *加点描述
       * </pre>
       *
       * <code>GrowPointDesREQ = 100015;</code>
       */
      public static final int GrowPointDesREQ_VALUE = 100015;
      /**
       * <pre>
       *加点描述返回
       * </pre>
       *
       * <code>GrowPointDesACK = 100016;</code>
       */
      public static final int GrowPointDesACK_VALUE = 100016;
      /**
       * <pre>
       *购买体力
       * </pre>
       *
       * <code>StamtnaBuyREQ = 100017;</code>
       */
      public static final int StamtnaBuyREQ_VALUE = 100017;
      /**
       * <pre>
       *购买体力信息返回
       * </pre>
       *
       * <code>StamtnaBuyACK = 100018;</code>
       */
      public static final int StamtnaBuyACK_VALUE = 100018;
      /**
       * <pre>
       *请求宠物献祭获得道具
       * </pre>
       *
       * <code>DismissHeroRebateItemREQ = 100019;</code>
       */
      public static final int DismissHeroRebateItemREQ_VALUE = 100019;
      /**
       * <pre>
       *返回宠物献祭获得道具
       * </pre>
       *
       * <code>DismissHeroRebateItemACK = 100020;</code>
       */
      public static final int DismissHeroRebateItemACK_VALUE = 100020;
      /**
       * <pre>
       *初始化完成
       * </pre>
       *
       * <code>InitPlayerFinishACK = 100021;</code>
       */
      public static final int InitPlayerFinishACK_VALUE = 100021;
      /**
       * <pre>
       *请求屏蔽其他玩家
       * </pre>
       *
       * <code>ShieldOtherPlayerREQ = 100037;</code>
       */
      public static final int ShieldOtherPlayerREQ_VALUE = 100037;
      /**
       * <pre>
       *返回玩家系统设置
       * </pre>
       *
       * <code>ShieldOtherPlayerACK = 100038;</code>
       */
      public static final int ShieldOtherPlayerACK_VALUE = 100038;
      /**
       * <pre>
       *屏蔽骑宠技能
       * </pre>
       *
       * <code>ShieldRidingPetSkillREQ = 100039;</code>
       */
      public static final int ShieldRidingPetSkillREQ_VALUE = 100039;
      /**
       * <pre>
       *支付成功响应
       * </pre>
       *
       * <code>PaySuccACK = 100040;</code>
       */
      public static final int PaySuccACK_VALUE = 100040;
      /**
       * <pre>
       *请求组队游戏加速
       * </pre>
       *
       * <code>FightExpediteREQ = 100041;</code>
       */
      public static final int FightExpediteREQ_VALUE = 100041;
      /**
       * <pre>
       *响应组队游戏加速
       * </pre>
       *
       * <code>FightExpediteACK = 100042;</code>
       */
      public static final int FightExpediteACK_VALUE = 100042;
      /**
       * <pre>
       *bag
       * </pre>
       *
       * <code>AllItemInfosACK = 110001;</code>
       */
      public static final int AllItemInfosACK_VALUE = 110001;
      /**
       * <pre>
       *穿装备 
       * </pre>
       *
       * <code>EquipClothingREQ = 110002;</code>
       */
      public static final int EquipClothingREQ_VALUE = 110002;
      /**
       * <pre>
       *脱装备
       * </pre>
       *
       * <code>UnEquipClothingREQ = 110003;</code>
       */
      public static final int UnEquipClothingREQ_VALUE = 110003;
      /**
       * <pre>
       *一键传装备
       * </pre>
       *
       * <code>AutoEquipClothingREQ = 110004;</code>
       */
      public static final int AutoEquipClothingREQ_VALUE = 110004;
      /**
       * <pre>
       *全脱 
       * </pre>
       *
       * <code>UnAllEquipClothingREQ = 110005;</code>
       */
      public static final int UnAllEquipClothingREQ_VALUE = 110005;
      /**
       * <pre>
       *物品信息改变
       * </pre>
       *
       * <code>ItemInfoUpdateACK = 110006;</code>
       */
      public static final int ItemInfoUpdateACK_VALUE = 110006;
      /**
       * <pre>
       *添加物品让前端飘动画
       * </pre>
       *
       * <code>ItemAdminInfoACK = 110007;</code>
       */
      public static final int ItemAdminInfoACK_VALUE = 110007;
      /**
       * <pre>
       *丢弃物品
       * </pre>
       *
       * <code>ItemDropREQ = 110008;</code>
       */
      public static final int ItemDropREQ_VALUE = 110008;
      /**
       * <pre>
       *使用普通物品（非装备)
       * </pre>
       *
       * <code>ItemUseREQ = 110009;</code>
       */
      public static final int ItemUseREQ_VALUE = 110009;
      /**
       * <pre>
       *合并物品
       * </pre>
       *
       * <code>ItemMergeREQ = 110010;</code>
       */
      public static final int ItemMergeREQ_VALUE = 110010;
      /**
       * <pre>
       *拆分物品
       * </pre>
       *
       * <code>ItemSplitREQ = 110011;</code>
       */
      public static final int ItemSplitREQ_VALUE = 110011;
      /**
       * <pre>
       *打开格子
       * </pre>
       *
       * <code>ItemOpenREQ = 110012;</code>
       */
      public static final int ItemOpenREQ_VALUE = 110012;
      /**
       * <pre>
       *更新格子数量信息
       * </pre>
       *
       * <code>ItemUpdateGirdACK = 110013;</code>
       */
      public static final int ItemUpdateGirdACK_VALUE = 110013;
      /**
       * <pre>
       *查看分享物品
       * </pre>
       *
       * <code>ItemShareLookREQ = 110014;</code>
       */
      public static final int ItemShareLookREQ_VALUE = 110014;
      /**
       * <pre>
       *查看分享物品
       * </pre>
       *
       * <code>ItemShareLookACK = 110015;</code>
       */
      public static final int ItemShareLookACK_VALUE = 110015;
      /**
       * <pre>
       *出售物品
       * </pre>
       *
       * <code>ItemSellREQ = 110016;</code>
       */
      public static final int ItemSellREQ_VALUE = 110016;
      /**
       * <pre>
       *获得宠物飘动画
       * </pre>
       *
       * <code>ItemHeroACK = 110017;</code>
       */
      public static final int ItemHeroACK_VALUE = 110017;
      /**
       * <pre>
       *碎片合成
       * </pre>
       *
       * <code>ItemHecengREQ = 110019;</code>
       */
      public static final int ItemHecengREQ_VALUE = 110019;
      /**
       * <pre>
       *整理物品
       * </pre>
       *
       * <code>ItemClearREQ = 110020;</code>
       */
      public static final int ItemClearREQ_VALUE = 110020;
      /**
       * <pre>
       *skill
       * </pre>
       *
       * <code>SkillInfosACK = 120001;</code>
       */
      public static final int SkillInfosACK_VALUE = 120001;
      /**
       * <pre>
       *技能学习或者说激活
       * </pre>
       *
       * <code>StudySkillREQ = 120002;</code>
       */
      public static final int StudySkillREQ_VALUE = 120002;
      /**
       * <pre>
       *装备技能
       * </pre>
       *
       * <code>FixSkillREQ = 120003;</code>
       */
      public static final int FixSkillREQ_VALUE = 120003;
      /**
       * <pre>
       *切换转职技能 
       * </pre>
       *
       * <code>SwitchoverSkillREQ = 120004;</code>
       */
      public static final int SwitchoverSkillREQ_VALUE = 120004;
      /**
       * <pre>
       *请求开启转职技能
       * </pre>
       *
       * <code>EnableSubjoinSkillREQ = 120005;</code>
       */
      public static final int EnableSubjoinSkillREQ_VALUE = 120005;
      /**
       * <pre>
       *返回开启转职技能		
       * </pre>
       *
       * <code>EnableSubjoinSkillACK = 120006;</code>
       */
      public static final int EnableSubjoinSkillACK_VALUE = 120006;
      /**
       * <pre>
       *task
       * </pre>
       *
       * <code>TaskInitACK = 130001;</code>
       */
      public static final int TaskInitACK_VALUE = 130001;
      /**
       * <pre>
       *完成新手步骤 
       * </pre>
       *
       * <code>TaskGuideREQ = 130002;</code>
       */
      public static final int TaskGuideREQ_VALUE = 130002;
      /**
       * <pre>
       *接受任务 
       * </pre>
       *
       * <code>TaskAcceptREQ = 130003;</code>
       */
      public static final int TaskAcceptREQ_VALUE = 130003;
      /**
       * <pre>
       *放弃任务 
       * </pre>
       *
       * <code>TaskGiveREQ = 130004;</code>
       */
      public static final int TaskGiveREQ_VALUE = 130004;
      /**
       * <pre>
       *完成任务 
       * </pre>
       *
       * <code>TaskComPleteREQ = 130005;</code>
       */
      public static final int TaskComPleteREQ_VALUE = 130005;
      /**
       * <pre>
       *与NPC说话
       * </pre>
       *
       * <code>TaskTalkREQ = 130006;</code>
       */
      public static final int TaskTalkREQ_VALUE = 130006;
      /**
       * <pre>
       *任务采集
       * </pre>
       *
       * <code>TaskCollectREQ = 130007;</code>
       */
      public static final int TaskCollectREQ_VALUE = 130007;
      /**
       * <pre>
       *玩家任务更新
       * </pre>
       *
       * <code>TaskUpdataACK = 130008;</code>
       */
      public static final int TaskUpdataACK_VALUE = 130008;
      /**
       * <pre>
       *完成任务步骤
       * </pre>
       *
       * <code>TaskStepREQ = 130009;</code>
       */
      public static final int TaskStepREQ_VALUE = 130009;
      /**
       * <pre>
       *重置任务
       * </pre>
       *
       * <code>TaskResetREQ = 130010;</code>
       */
      public static final int TaskResetREQ_VALUE = 130010;
      /**
       * <pre>
       *简单刷新采集任务(客户端使用)
       * </pre>
       *
       * <code>FreshCollectTaskREQ = 130011;</code>
       */
      public static final int FreshCollectTaskREQ_VALUE = 130011;
      /**
       * <pre>
       *friend
       * </pre>
       *
       * <code>FriendListACK = 140001;</code>
       */
      public static final int FriendListACK_VALUE = 140001;
      /**
       * <pre>
       *添加好友
       * </pre>
       *
       * <code>AddFriendREQ = 140002;</code>
       */
      public static final int AddFriendREQ_VALUE = 140002;
      /**
       * <pre>
       *加黑名单
       * </pre>
       *
       * <code>AddBlackREQ = 140003;</code>
       */
      public static final int AddBlackREQ_VALUE = 140003;
      /**
       * <pre>
       *删除好友
       * </pre>
       *
       * <code>DelFriendREQ = 140004;</code>
       */
      public static final int DelFriendREQ_VALUE = 140004;
      /**
       * <pre>
       *改变好友分组
       * </pre>
       *
       * <code>SwitchFriendREQ = 140005;</code>
       */
      public static final int SwitchFriendREQ_VALUE = 140005;
      /**
       * <pre>
       *查看好友详细信息
       * </pre>
       *
       * <code>FriendInfoREQ = 140006;</code>
       */
      public static final int FriendInfoREQ_VALUE = 140006;
      /**
       * <pre>
       *个性签名修改
       * </pre>
       *
       * <code>FriendSignitureREQ = 140007;</code>
       */
      public static final int FriendSignitureREQ_VALUE = 140007;
      /**
       * <pre>
       *私聊
       * </pre>
       *
       * <code>FriendPrivateREQ = 140008;</code>
       */
      public static final int FriendPrivateREQ_VALUE = 140008;
      /**
       * <pre>
       *请求好友列表信息
       * </pre>
       *
       * <code>FriendListREQ = 140009;</code>
       */
      public static final int FriendListREQ_VALUE = 140009;
      /**
       * <pre>
       *单个好友信息修改
       * </pre>
       *
       * <code>FriendInfoUpdateACK = 140010;</code>
       */
      public static final int FriendInfoUpdateACK_VALUE = 140010;
      /**
       * <pre>
       *私聊信息返回
       * </pre>
       *
       * <code>FriendPrivateACK = 140011;</code>
       */
      public static final int FriendPrivateACK_VALUE = 140011;
      /**
       * <pre>
       *&#47;获取单个玩家的好友信息(只有名字或id私聊时用)
       * </pre>
       *
       * <code>FriendGetInfoREQ = 140012;</code>
       */
      public static final int FriendGetInfoREQ_VALUE = 140012;
      /**
       * <pre>
       *获取单个玩家的好友信息返回
       * </pre>
       *
       * <code>FriendGetInfoACK = 140013;</code>
       */
      public static final int FriendGetInfoACK_VALUE = 140013;
      /**
       * <pre>
       *好友上线通知
       * </pre>
       *
       * <code>FriendOnlineACK = 140014;</code>
       */
      public static final int FriendOnlineACK_VALUE = 140014;
      /**
       * <pre>
       *下发一键关注好友信息
       * </pre>
       *
       * <code>FriendAttentionACK = 140015;</code>
       */
      public static final int FriendAttentionACK_VALUE = 140015;
      /**
       * <pre>
       *祝福信息
       * </pre>
       *
       * <code>FriendBlessInfoACK = 140016;</code>
       */
      public static final int FriendBlessInfoACK_VALUE = 140016;
      /**
       * <pre>
       *好友祝福列表
       * </pre>
       *
       * <code>FriendBlessInfosACK = 140017;</code>
       */
      public static final int FriendBlessInfosACK_VALUE = 140017;
      /**
       * <pre>
       *好友祝福更新
       * </pre>
       *
       * <code>FriendTrendUpdateACK = 140018;</code>
       */
      public static final int FriendTrendUpdateACK_VALUE = 140018;
      /**
       * <pre>
       *好友祝贺更新
       * </pre>
       *
       * <code>FriendCongratUpateACK = 140019;</code>
       */
      public static final int FriendCongratUpateACK_VALUE = 140019;
      /**
       * <pre>
       *好友祝贺列表
       * </pre>
       *
       * <code>FriendCongratACK = 140020;</code>
       */
      public static final int FriendCongratACK_VALUE = 140020;
      /**
       * <pre>
       *祝福删除信息
       * </pre>
       *
       * <code>FriendTrendDeleteACK = 140021;</code>
       */
      public static final int FriendTrendDeleteACK_VALUE = 140021;
      /**
       * <pre>
       *互为好友列表信息
       * </pre>
       *
       * <code>DoubleFriendACK = 140022;</code>
       */
      public static final int DoubleFriendACK_VALUE = 140022;
      /**
       * <pre>
       *主菜单
       * </pre>
       *
       * <code>MenuInfoACK = 150001;</code>
       */
      public static final int MenuInfoACK_VALUE = 150001;
      /**
       * <pre>
       *活动开启，活动菜单
       * </pre>
       *
       * <code>ActivityOpenACK = 150002;</code>
       */
      public static final int ActivityOpenACK_VALUE = 150002;
      /**
       * <pre>
       *等级开启菜单
       * </pre>
       *
       * <code>LeveMenuInfoACK = 150003;</code>
       */
      public static final int LeveMenuInfoACK_VALUE = 150003;
      /**
       * <pre>
       *让前端打开某个界面
       * </pre>
       *
       * <code>OpenMenuWinACK = 150004;</code>
       */
      public static final int OpenMenuWinACK_VALUE = 150004;
      /**
       * <pre>
       *下推菜单特效
       * </pre>
       *
       * <code>MenuBlinkACK = 150005;</code>
       */
      public static final int MenuBlinkACK_VALUE = 150005;
      /**
       * <pre>
       *客户端通知关闭菜单红点
       * </pre>
       *
       * <code>MenuRedDotUpdateREQ = 150006;</code>
       */
      public static final int MenuRedDotUpdateREQ_VALUE = 150006;
      /**
       * <pre>
       *组队 team
       * </pre>
       *
       * <code>CreateTeamREQ = 160002;</code>
       */
      public static final int CreateTeamREQ_VALUE = 160002;
      /**
       * <pre>
       *加入组队
       * </pre>
       *
       * <code>EnterTeamREQ = 160003;</code>
       */
      public static final int EnterTeamREQ_VALUE = 160003;
      /**
       * <pre>
       *离开组队
       * </pre>
       *
       * <code>LeaveTeamREQ = 160004;</code>
       */
      public static final int LeaveTeamREQ_VALUE = 160004;
      /**
       * <pre>
       * 组队信息
       * </pre>
       *
       * <code>TeamInfoACK = 160005;</code>
       */
      public static final int TeamInfoACK_VALUE = 160005;
      /**
       * <pre>
       * 离开组队
       * </pre>
       *
       * <code>LeaveTeamACK = 160006;</code>
       */
      public static final int LeaveTeamACK_VALUE = 160006;
      /**
       * <pre>
       * 转让更换队长 
       * </pre>
       *
       * <code>TeamRransferCaptainREQ = 160007;</code>
       */
      public static final int TeamRransferCaptainREQ_VALUE = 160007;
      /**
       * <pre>
       * 转让更换队长 
       * </pre>
       *
       * <code>TeamRransferCaptainACK = 160008;</code>
       */
      public static final int TeamRransferCaptainACK_VALUE = 160008;
      /**
       * <pre>
       * 踢人
       * </pre>
       *
       * <code>TeamKickREQ = 160009;</code>
       */
      public static final int TeamKickREQ_VALUE = 160009;
      /**
       * <pre>
       * 踢人
       * </pre>
       *
       * <code>TeamKickACK = 160010;</code>
       */
      public static final int TeamKickACK_VALUE = 160010;
      /**
       * <pre>
       * 组队列表
       * </pre>
       *
       * <code>TeamListInforREQ = 160011;</code>
       */
      public static final int TeamListInforREQ_VALUE = 160011;
      /**
       * <pre>
       * 组队列表
       * </pre>
       *
       * <code>TeamListInforACK = 160012;</code>
       */
      public static final int TeamListInforACK_VALUE = 160012;
      /**
       * <pre>
       * 解散组队
       * </pre>
       *
       * <code>DisbandTeamREQ = 160013;</code>
       */
      public static final int DisbandTeamREQ_VALUE = 160013;
      /**
       * <pre>
       * 解散组队
       * </pre>
       *
       * <code>DisbandTeamACK = 160014;</code>
       */
      public static final int DisbandTeamACK_VALUE = 160014;
      /**
       * <pre>
       * 同步战力
       * </pre>
       *
       * <code>TeamMemberFightPowerSyncACK = 160015;</code>
       */
      public static final int TeamMemberFightPowerSyncACK_VALUE = 160015;
      /**
       * <pre>
       *请求调整队伍成员顺序  
       * </pre>
       *
       * <code>AdjustTeamMentorSiteREQ = 160016;</code>
       */
      public static final int AdjustTeamMentorSiteREQ_VALUE = 160016;
      /**
       * <pre>
       *请求调整组队战斗加速  
       * </pre>
       *
       * <code>UpdateTeamFightSpeedREQ = 160017;</code>
       */
      public static final int UpdateTeamFightSpeedREQ_VALUE = 160017;
      /**
       * <pre>
       *响应调整组队战斗加速
       * </pre>
       *
       * <code>UpdateTeamFightSpeedACK = 160018;</code>
       */
      public static final int UpdateTeamFightSpeedACK_VALUE = 160018;
      /**
       * <pre>
       *组队副本 team
       * </pre>
       *
       * <code>JointoTeamFbREQ = 161001;</code>
       */
      public static final int JointoTeamFbREQ_VALUE = 161001;
      /**
       * <pre>
       *进入战斗
       * </pre>
       *
       * <code>TeamFbFightREQ = 161002;</code>
       */
      public static final int TeamFbFightREQ_VALUE = 161002;
      /**
       * <pre>
       * 退出副本
       * </pre>
       *
       * <code>TeamFbExitREQ = 161003;</code>
       */
      public static final int TeamFbExitREQ_VALUE = 161003;
      /**
       * <pre>
       * 每日进入次数
       * </pre>
       *
       * <code>TeamFbBuyREQ = 161004;</code>
       */
      public static final int TeamFbBuyREQ_VALUE = 161004;
      /**
       * <pre>
       *场景的信息
       * </pre>
       *
       * <code>TeamFbSceneInfoACK = 161005;</code>
       */
      public static final int TeamFbSceneInfoACK_VALUE = 161005;
      /**
       * <pre>
       *打开团队副本
       * </pre>
       *
       * <code>OpenTeamFbREQ = 161006;</code>
       */
      public static final int OpenTeamFbREQ_VALUE = 161006;
      /**
       * <pre>
       *打开团队副本信息返回
       * </pre>
       *
       * <code>TeamFbInfoACK = 161007;</code>
       */
      public static final int TeamFbInfoACK_VALUE = 161007;
      /**
       * <pre>
       *获取当前团队副本清剿信息
       * </pre>
       *
       * <code>TeamFbCleanInfoREQ = 161008;</code>
       */
      public static final int TeamFbCleanInfoREQ_VALUE = 161008;
      /**
       * <pre>
       *开始清剿团队副本
       * </pre>
       *
       * <code>SweepTeamFbREQ = 161009;</code>
       */
      public static final int SweepTeamFbREQ_VALUE = 161009;
      /**
       * <pre>
       *清剿团队副本ACK
       * </pre>
       *
       * <code>TeamDeputyCleanFightInfoACK = 161010;</code>
       */
      public static final int TeamDeputyCleanFightInfoACK_VALUE = 161010;
      /**
       * <pre>
       *团队副本清剿状态信息
       * </pre>
       *
       * <code>TeamDeputyCleanStateACK = 161011;</code>
       */
      public static final int TeamDeputyCleanStateACK_VALUE = 161011;
      /**
       * <pre>
       *Email
       * </pre>
       *
       * <code>EmailStatusACK = 170001;</code>
       */
      public static final int EmailStatusACK_VALUE = 170001;
      /**
       * <pre>
       *请求有所邮件信息
       * </pre>
       *
       * <code>EmailInfosREQ = 170002;</code>
       */
      public static final int EmailInfosREQ_VALUE = 170002;
      /**
       * <pre>
       *返回有所邮件信息
       * </pre>
       *
       * <code>EmailInfosACK = 170003;</code>
       */
      public static final int EmailInfosACK_VALUE = 170003;
      /**
       * <pre>
       *邮件发送
       * </pre>
       *
       * <code>EmailSendREQ = 170004;</code>
       */
      public static final int EmailSendREQ_VALUE = 170004;
      /**
       * <pre>
       *单个邮件信息返回
       * </pre>
       *
       * <code>EmailOneInfoACK = 170005;</code>
       */
      public static final int EmailOneInfoACK_VALUE = 170005;
      /**
       * <pre>
       *删除邮件
       * </pre>
       *
       * <code>EmailDeleteREQ = 170006;</code>
       */
      public static final int EmailDeleteREQ_VALUE = 170006;
      /**
       * <pre>
       *阅读邮件
       * </pre>
       *
       * <code>EmailReadREQ = 170007;</code>
       */
      public static final int EmailReadREQ_VALUE = 170007;
      /**
       * <pre>
       *邮件领取附件
       * </pre>
       *
       * <code>EmailGetAttachedREQ = 170008;</code>
       */
      public static final int EmailGetAttachedREQ_VALUE = 170008;
      /**
       * <pre>
       *排行榜 
       * </pre>
       *
       * <code>GetRankPageREQ = 180001;</code>
       */
      public static final int GetRankPageREQ_VALUE = 180001;
      /**
       * <pre>
       *自已在排行榜里的排名
       * </pre>
       *
       * <code>GetRankSelfREQ = 180002;</code>
       */
      public static final int GetRankSelfREQ_VALUE = 180002;
      /**
       * <pre>
       *自已排行信息
       * </pre>
       *
       * <code>GetRankSelfACK = 180003;</code>
       */
      public static final int GetRankSelfACK_VALUE = 180003;
      /**
       * <pre>
       *请求排行榜列表返回
       * </pre>
       *
       * <code>GetRankPageACK = 180004;</code>
       */
      public static final int GetRankPageACK_VALUE = 180004;
      /**
       * <pre>
       *强化宝石
       * </pre>
       *
       * <code>JewelInsertREQ = 190001;</code>
       */
      public static final int JewelInsertREQ_VALUE = 190001;
      /**
       * <pre>
       *装备宝石摘除
       * </pre>
       *
       * <code>JewelTakeoffREQ = 190002;</code>
       */
      public static final int JewelTakeoffREQ_VALUE = 190002;
      /**
       * <pre>
       *装备上的宝石升级
       * </pre>
       *
       * <code>EquipJewelUpREQ = 190003;</code>
       */
      public static final int EquipJewelUpREQ_VALUE = 190003;
      /**
       * <pre>
       *一键合成
       * </pre>
       *
       * <code>EquipJewelAllUpREQ = 190004;</code>
       */
      public static final int EquipJewelAllUpREQ_VALUE = 190004;
      /**
       * <pre>
       *宝石分解
       * </pre>
       *
       * <code>JewelDownREQ = 190005;</code>
       */
      public static final int JewelDownREQ_VALUE = 190005;
      /**
       * <pre>
       *宝石合成
       * </pre>
       *
       * <code>JeweUpREQ = 190006;</code>
       */
      public static final int JeweUpREQ_VALUE = 190006;
      /**
       * <pre>
       *宝石升级返回
       * </pre>
       *
       * <code>JewelUpACK = 190007;</code>
       */
      public static final int JewelUpACK_VALUE = 190007;
      /**
       * <pre>
       *宝石分解返回
       * </pre>
       *
       * <code>JewelDownACK = 190008;</code>
       */
      public static final int JewelDownACK_VALUE = 190008;
      /**
       * <pre>
       *装备上的宝石升级返回
       * </pre>
       *
       * <code>EquipJewelUpACK = 190009;</code>
       */
      public static final int EquipJewelUpACK_VALUE = 190009;
      /**
       * <pre>
       *装备修改宝石返回
       * </pre>
       *
       * <code>JewelUpdageACK = 190010;</code>
       */
      public static final int JewelUpdageACK_VALUE = 190010;
      /**
       * <pre>
       *强化装备
       * </pre>
       *
       * <code>EquipUpgradeREQ = 190011;</code>
       */
      public static final int EquipUpgradeREQ_VALUE = 190011;
      /**
       * <pre>
       *强化装备多次
       * </pre>
       *
       * <code>EquipUpgradeManyREQ = 190012;</code>
       */
      public static final int EquipUpgradeManyREQ_VALUE = 190012;
      /**
       * <pre>
       *一键强化英雄所有装备
       * </pre>
       *
       * <code>EquipUpgradeAllREQ = 190013;</code>
       */
      public static final int EquipUpgradeAllREQ_VALUE = 190013;
      /**
       * <pre>
       *装备合成
       * </pre>
       *
       * <code>EquipForgeREQ = 190014;</code>
       */
      public static final int EquipForgeREQ_VALUE = 190014;
      /**
       * <pre>
       *装备强化成功返回
       * </pre>
       *
       * <code>EquipUpgradeACK = 190016;</code>
       */
      public static final int EquipUpgradeACK_VALUE = 190016;
      /**
       * <pre>
       *装备合成成功返回
       * </pre>
       *
       * <code>EquipForageACK = 190017;</code>
       */
      public static final int EquipForageACK_VALUE = 190017;
      /**
       * <pre>
       *chat
       * </pre>
       *
       * <code>ChatInfoACK = 200001;</code>
       */
      public static final int ChatInfoACK_VALUE = 200001;
      /**
       * <pre>
       *下推公告
       * </pre>
       *
       * <code>ChatNoticeACK = 200002;</code>
       */
      public static final int ChatNoticeACK_VALUE = 200002;
      /**
       * <pre>
       *聊天发送
       * </pre>
       *
       * <code>ChatInfoREQ = 200003;</code>
       */
      public static final int ChatInfoREQ_VALUE = 200003;
      /**
       * <pre>
       *guild
       * </pre>
       *
       * <code>OpenGuildREQ = 201001;</code>
       */
      public static final int OpenGuildREQ_VALUE = 201001;
      /**
       * <pre>
       *创建帮会
       * </pre>
       *
       * <code>CreateGuildREQ = 201002;</code>
       */
      public static final int CreateGuildREQ_VALUE = 201002;
      /**
       * <pre>
       *申请入会  或 撤销申请
       * </pre>
       *
       * <code>ApllyGuildREQ = 201003;</code>
       */
      public static final int ApllyGuildREQ_VALUE = 201003;
      /**
       * <pre>
       *审核 入会（帮会会长 和副会长才有权限）
       * </pre>
       *
       * <code>CheckGuildREQ = 201004;</code>
       */
      public static final int CheckGuildREQ_VALUE = 201004;
      /**
       * <pre>
       *邀请入会
       * </pre>
       *
       * <code>InviteGuildREQ = 201005;</code>
       */
      public static final int InviteGuildREQ_VALUE = 201005;
      /**
       * <pre>
       *帮会发送邀请信息
       * </pre>
       *
       * <code>SendInviteGuildREQ = 201006;</code>
       */
      public static final int SendInviteGuildREQ_VALUE = 201006;
      /**
       * <pre>
       *任命职务
       * </pre>
       *
       * <code>AppointGuildREQ = 201007;</code>
       */
      public static final int AppointGuildREQ_VALUE = 201007;
      /**
       * <pre>
       *禅让（帮主）
       * </pre>
       *
       * <code>AbdicateGuildREQ = 201008;</code>
       */
      public static final int AbdicateGuildREQ_VALUE = 201008;
      /**
       * <pre>
       *踢人  (普通帮众没踢人权限)
       * </pre>
       *
       * <code>KickGuildREQ = 201009;</code>
       */
      public static final int KickGuildREQ_VALUE = 201009;
      /**
       * <pre>
       *离开（会员） 或解散（帮主）
       * </pre>
       *
       * <code>ExitGuildREQ = 201010;</code>
       */
      public static final int ExitGuildREQ_VALUE = 201010;
      /**
       * <pre>
       *帮会 and 建筑 升级
       * </pre>
       *
       * <code>UpGuildREQ = 201011;</code>
       */
      public static final int UpGuildREQ_VALUE = 201011;
      /**
       * <pre>
       *领取帮会福利  打开帮会同盟UI  打开帮会摇钱树 打开帮会商店
       * </pre>
       *
       * <code>FuLiGuildREQ = 201012;</code>
       */
      public static final int FuLiGuildREQ_VALUE = 201012;
      /**
       * <pre>
       *购买帮会商店商品
       * </pre>
       *
       * <code>BuyItemGuildREQ = 201015;</code>
       */
      public static final int BuyItemGuildREQ_VALUE = 201015;
      /**
       * <pre>
       *请求帮会事件 1 加入帮会  2 建筑升级 3 商店购物 4 任命
       * </pre>
       *
       * <code>EventGuildREQ = 201017;</code>
       */
      public static final int EventGuildREQ_VALUE = 201017;
      /**
       * <pre>
       *查看别人帮派
       * </pre>
       *
       * <code>OtherInfoGuildREQ = 201018;</code>
       */
      public static final int OtherInfoGuildREQ_VALUE = 201018;
      /**
       * <pre>
       *保存帮派公告
       * </pre>
       *
       * <code>SaveNoticeGuildREQ = 201019;</code>
       */
      public static final int SaveNoticeGuildREQ_VALUE = 201019;
      /**
       * <pre>
       *帮派 捐献
       * </pre>
       *
       * <code>DonateGuildREQ = 201020;</code>
       */
      public static final int DonateGuildREQ_VALUE = 201020;
      /**
       * <pre>
       *有人离开
       * </pre>
       *
       * <code>ExitGuildACK = 201021;</code>
       */
      public static final int ExitGuildACK_VALUE = 201021;
      /**
       * <pre>
       *帮会信息
       * </pre>
       *
       * <code>GuildInfoACK = 201022;</code>
       */
      public static final int GuildInfoACK_VALUE = 201022;
      /**
       * <pre>
       *被邀请的人 收到的信息
       * </pre>
       *
       * <code>InviteGuildACK = 201023;</code>
       */
      public static final int InviteGuildACK_VALUE = 201023;
      /**
       * <pre>
       *未入会的玩家 收到的 邀请入会信息  和自己主动申请入会的信息
       * </pre>
       *
       * <code>ApplyInviteGuildACK = 201024;</code>
       */
      public static final int ApplyInviteGuildACK_VALUE = 201024;
      /**
       * <pre>
       *帮会同盟 信息
       * </pre>
       *
       * <code>BundInfoGuildACK = 201025;</code>
       */
      public static final int BundInfoGuildACK_VALUE = 201025;
      /**
       * <pre>
       *帮会商店 信息
       * </pre>
       *
       * <code>ShopInfoGuildACK = 201026;</code>
       */
      public static final int ShopInfoGuildACK_VALUE = 201026;
      /**
       * <pre>
       *帮会等级信息
       * </pre>
       *
       * <code>LevelInfoGuildACK = 201028;</code>
       */
      public static final int LevelInfoGuildACK_VALUE = 201028;
      /**
       * <pre>
       *进入帮会农场
       * </pre>
       *
       * <code>GuildFarmEnterREQ = 201101;</code>
       */
      public static final int GuildFarmEnterREQ_VALUE = 201101;
      /**
       * <pre>
       *返回帮会农场
       * </pre>
       *
       * <code>GuildFarmEnterACK = 201102;</code>
       */
      public static final int GuildFarmEnterACK_VALUE = 201102;
      /**
       * <pre>
       *帮会农场种菜
       * </pre>
       *
       * <code>GuildFarmPlantREQ = 201103;</code>
       */
      public static final int GuildFarmPlantREQ_VALUE = 201103;
      /**
       * <pre>
       *帮会农场除虫浇水
       * </pre>
       *
       * <code>GuildFarmWorkREQ = 201104;</code>
       */
      public static final int GuildFarmWorkREQ_VALUE = 201104;
      /**
       * <pre>
       *帮会农场铲除土地
       * </pre>
       *
       * <code>GuildFarmEradicateREQ = 201105;</code>
       */
      public static final int GuildFarmEradicateREQ_VALUE = 201105;
      /**
       * <pre>
       *帮会农场摘菜
       * </pre>
       *
       * <code>GuildFarmPickVegetableREQ = 201106;</code>
       */
      public static final int GuildFarmPickVegetableREQ_VALUE = 201106;
      /**
       * <pre>
       *请求玩家农场数据
       * </pre>
       *
       * <code>GuildFarmPlayerDataREQ = 201107;</code>
       */
      public static final int GuildFarmPlayerDataREQ_VALUE = 201107;
      /**
       * <pre>
       *返回玩家农场数据
       * </pre>
       *
       * <code>GuildFarmPlayerDataACK = 201108;</code>
       */
      public static final int GuildFarmPlayerDataACK_VALUE = 201108;
      /**
       * <pre>
       *扩展帮会农场土地
       * </pre>
       *
       * <code>GuildFarmExpandLandREQ = 201109;</code>
       */
      public static final int GuildFarmExpandLandREQ_VALUE = 201109;
      /**
       * <pre>
       *商城，商店
       * </pre>
       *
       * <code>BuyMallREQ = 202001;</code>
       */
      public static final int BuyMallREQ_VALUE = 202001;
      /**
       * <pre>
       *获取支付列表
       * </pre>
       *
       * <code>PayInfoListREQ = 202002;</code>
       */
      public static final int PayInfoListREQ_VALUE = 202002;
      /**
       * <pre>
       *获取支付列表
       * </pre>
       *
       * <code>PayInfoListACK = 202003;</code>
       */
      public static final int PayInfoListACK_VALUE = 202003;
      /**
       * <pre>
       *微信支付
       * </pre>
       *
       * <code>WxPayREQ = 202004;</code>
       */
      public static final int WxPayREQ_VALUE = 202004;
      /**
       * <pre>
       *微信支付
       * </pre>
       *
       * <code>WxPayACK = 202005;</code>
       */
      public static final int WxPayACK_VALUE = 202005;
      /**
       * <pre>
       *活动商城购买
       * </pre>
       *
       * <code>BuyActiveMallREQ = 202006;</code>
       */
      public static final int BuyActiveMallREQ_VALUE = 202006;
      /**
       * <pre>
       *趣炫支付
       * </pre>
       *
       * <code>QxPayREQ = 202007;</code>
       */
      public static final int QxPayREQ_VALUE = 202007;
      /**
       * <pre>
       *趣炫支付返回
       * </pre>
       *
       * <code>QxPayACK = 202008;</code>
       */
      public static final int QxPayACK_VALUE = 202008;
      /**
       * <pre>
       *趣炫支付回调
       * </pre>
       *
       * <code>QxPayWeb = 202009;</code>
       */
      public static final int QxPayWeb_VALUE = 202009;
      /**
       * <pre>
       *支付宝支付请求
       * </pre>
       *
       * <code>ZfbPayREQ = 202010;</code>
       */
      public static final int ZfbPayREQ_VALUE = 202010;
      /**
       * <pre>
       *SDK支付请求
       * </pre>
       *
       * <code>SDKPayREQ = 202011;</code>
       */
      public static final int SDKPayREQ_VALUE = 202011;
      /**
       * <pre>
       *SDK支付回调
       * </pre>
       *
       * <code>SDKPayACK = 202012;</code>
       */
      public static final int SDKPayACK_VALUE = 202012;
      /**
       * <pre>
       *SDK支付完成，内部服回调
       * </pre>
       *
       * <code>SDKPaySucREQ = 202013;</code>
       */
      public static final int SDKPaySucREQ_VALUE = 202013;
      /**
       * <pre>
       *SDK支付完成回调
       * </pre>
       *
       * <code>SDKPaySucACK = 202014;</code>
       */
      public static final int SDKPaySucACK_VALUE = 202014;
      /**
       * <pre>
       *礼包信息 ,签到礼包信息	 
       * </pre>
       *
       * <code>ActiveGiftACK = 203001;</code>
       */
      public static final int ActiveGiftACK_VALUE = 203001;
      /**
       * <pre>
       *礼包领取奖励
       * </pre>
       *
       * <code>GetGiftREQ = 203002;</code>
       */
      public static final int GetGiftREQ_VALUE = 203002;
      /**
       * <pre>
       *请求查看在线礼包信息
       * </pre>
       *
       * <code>GetOnLineGiftInfosREQ = 203003;</code>
       */
      public static final int GetOnLineGiftInfosREQ_VALUE = 203003;
      /**
       * <pre>
       *返回查看在线礼包信息
       * </pre>
       *
       * <code>GetOnLineGiftInfosACK = 203004;</code>
       */
      public static final int GetOnLineGiftInfosACK_VALUE = 203004;
      /**
       * <pre>
       *请求领取在线礼包奖励
       * </pre>
       *
       * <code>GetOnLineGiftAwardREQ = 203005;</code>
       */
      public static final int GetOnLineGiftAwardREQ_VALUE = 203005;
      /**
       * <pre>
       *打开签到获取信息
       * </pre>
       *
       * <code>SignOpenREQ = 203012;</code>
       */
      public static final int SignOpenREQ_VALUE = 203012;
      /**
       * <pre>
       *签到
       * </pre>
       *
       * <code>SignInREQ = 203013;</code>
       */
      public static final int SignInREQ_VALUE = 203013;
      /**
       * <pre>
       *补签
       * </pre>
       *
       * <code>SignPatchREQ = 203014;</code>
       */
      public static final int SignPatchREQ_VALUE = 203014;
      /**
       * <pre>
       *领取签到奖励
       * </pre>
       *
       * <code>GetSignGifREQ = 203015;</code>
       */
      public static final int GetSignGifREQ_VALUE = 203015;
      /**
       * <pre>
       *签到信息返回
       * </pre>
       *
       * <code>SignOpenACK = 203016;</code>
       */
      public static final int SignOpenACK_VALUE = 203016;
      /**
       * <pre>
       *每日签到抽奖
       * </pre>
       *
       * <code>SignDaysLotteryREQ = 203017;</code>
       */
      public static final int SignDaysLotteryREQ_VALUE = 203017;
      /**
       * <pre>
       *请求每日签到抽奖信息
       * </pre>
       *
       * <code>GetSignDaysLotteryREQ = 203018;</code>
       */
      public static final int GetSignDaysLotteryREQ_VALUE = 203018;
      /**
       * <pre>
       *每日签到抽奖信息返回
       * </pre>
       *
       * <code>GetSignDaysLotteryACK = 203019;</code>
       */
      public static final int GetSignDaysLotteryACK_VALUE = 203019;
      /**
       * <pre>
       *下发抽中每日签到抽奖信息返回
       * </pre>
       *
       * <code>SignDaysLotteryACK = 203020;</code>
       */
      public static final int SignDaysLotteryACK_VALUE = 203020;
      /**
       * <pre>
       *每日签到抽奖个人公告信息返回
       * </pre>
       *
       * <code>MySignDaysLotteryACK = 203021;</code>
       */
      public static final int MySignDaysLotteryACK_VALUE = 203021;
      /**
       * <pre>
       *兑换铜币（挖宝)
       * </pre>
       *
       * <code>ExchanCopperREQ = 203022;</code>
       */
      public static final int ExchanCopperREQ_VALUE = 203022;
      /**
       * <pre>
       *兑换铜币信息返回（挖宝)
       * </pre>
       *
       * <code>ExchanCopperACK = 203023;</code>
       */
      public static final int ExchanCopperACK_VALUE = 203023;
      /**
       * <pre>
       *输入激活码获得物品信息
       * </pre>
       *
       * <code>JihuomaInfoREQ = 203024;</code>
       */
      public static final int JihuomaInfoREQ_VALUE = 203024;
      /**
       * <pre>
       *领取激活码物品
       * </pre>
       *
       * <code>GetJihuomaInfoREQ = 203025;</code>
       */
      public static final int GetJihuomaInfoREQ_VALUE = 203025;
      /**
       * <pre>
       *输入激活码获得物品信息返回
       * </pre>
       *
       * <code>JihuomaInfoACK = 203026;</code>
       */
      public static final int JihuomaInfoACK_VALUE = 203026;
      /**
       * <pre>
       *领取激活返回
       * </pre>
       *
       * <code>GetJihuomaInfoACK = 203027;</code>
       */
      public static final int GetJihuomaInfoACK_VALUE = 203027;
      /**
       * <pre>
       *绑定手机奖励请求
       * </pre>
       *
       * <code>GetBindPhoneGiftInfoREQ = 203028;</code>
       */
      public static final int GetBindPhoneGiftInfoREQ_VALUE = 203028;
      /**
       * <code>GetBindPhoneGiftInfoACK = 203029;</code>
       */
      public static final int GetBindPhoneGiftInfoACK_VALUE = 203029;
      /**
       * <pre>
       *下载全包完成
       * </pre>
       *
       * <code>DownFinishGiftInfoREQ = 203030;</code>
       */
      public static final int DownFinishGiftInfoREQ_VALUE = 203030;
      /**
       * <pre>
       *开服活动
       * </pre>
       *
       * <code>OpenServerActiveInfoREQ = 203501;</code>
       */
      public static final int OpenServerActiveInfoREQ_VALUE = 203501;
      /**
       * <pre>
       *开服活动信息返回
       * </pre>
       *
       * <code>OpenServerActiveInfoACK = 203502;</code>
       */
      public static final int OpenServerActiveInfoACK_VALUE = 203502;
      /**
       * <pre>
       *投资
       * </pre>
       *
       * <code>OpenServerActiveInvestREQ = 203503;</code>
       */
      public static final int OpenServerActiveInvestREQ_VALUE = 203503;
      /**
       * <pre>
       *领取奖励开服活动
       * </pre>
       *
       * <code>GetOpenServerActiveRewardREQ = 203504;</code>
       */
      public static final int GetOpenServerActiveRewardREQ_VALUE = 203504;
      /**
       * <pre>
       *够买礼包
       * </pre>
       *
       * <code>OpenActiveBuyGiftREQ = 203505;</code>
       */
      public static final int OpenActiveBuyGiftREQ_VALUE = 203505;
      /**
       * <pre>
       *充服活动
       * </pre>
       *
       * <code>RechargeActiveInfoREQ = 203601;</code>
       */
      public static final int RechargeActiveInfoREQ_VALUE = 203601;
      /**
       * <pre>
       *充值活动信息返回
       * </pre>
       *
       * <code>RechargeActiveInfoACK = 203602;</code>
       */
      public static final int RechargeActiveInfoACK_VALUE = 203602;
      /**
       * <pre>
       *请求领取充值活动奖励
       * </pre>
       *
       * <code>GetRechargeActiveRewardREQ = 203603;</code>
       */
      public static final int GetRechargeActiveRewardREQ_VALUE = 203603;
      /**
       * <pre>
       *砸蛋抽奖活动
       * </pre>
       *
       * <code>SmashEggsREQ = 203604;</code>
       */
      public static final int SmashEggsREQ_VALUE = 203604;
      /**
       * <pre>
       *砸蛋抽奖返回
       * </pre>
       *
       * <code>SmashEggsACK = 203605;</code>
       */
      public static final int SmashEggsACK_VALUE = 203605;
      /**
       * <pre>
       *养宠活动信息
       * </pre>
       *
       * <code>SubmitRaisePetREQ = 203606;</code>
       */
      public static final int SubmitRaisePetREQ_VALUE = 203606;
      /**
       * <pre>
       *养宠活动返回
       * </pre>
       *
       * <code>RaisePetACK = 203607;</code>
       */
      public static final int RaisePetACK_VALUE = 203607;
      /**
       * <pre>
       *购买砸蛋次数
       * </pre>
       *
       * <code>BuySmashEggsCountREQ = 203608;</code>
       */
      public static final int BuySmashEggsCountREQ_VALUE = 203608;
      /**
       * <pre>
       *充值活动图标显示协议
       * </pre>
       *
       * <code>RechargeActiveMenuREQ = 203609;</code>
       */
      public static final int RechargeActiveMenuREQ_VALUE = 203609;
      /**
       * <code>RechargeActiveMenuACK = 203610;</code>
       */
      public static final int RechargeActiveMenuACK_VALUE = 203610;
      /**
       * <pre>
       *请求月卡信息
       * </pre>
       *
       * <code>MonthCardInfoREQ = 203611;</code>
       */
      public static final int MonthCardInfoREQ_VALUE = 203611;
      /**
       * <pre>
       *月卡信息返回
       * </pre>
       *
       * <code>MonthCardInfoACK = 203612;</code>
       */
      public static final int MonthCardInfoACK_VALUE = 203612;
      /**
       * <pre>
       *领取月卡每日贝壳
       * </pre>
       *
       * <code>GetMonthCardDayGoldREQ = 203613;</code>
       */
      public static final int GetMonthCardDayGoldREQ_VALUE = 203613;
      /**
       * <pre>
       *世界BOSS战
       * </pre>
       *
       * <code>EnterBossMapREQ = 204001;</code>
       */
      public static final int EnterBossMapREQ_VALUE = 204001;
      /**
       * <pre>
       *退出BOSS战
       * </pre>
       *
       * <code>ExitBossMapREQ = 204002;</code>
       */
      public static final int ExitBossMapREQ_VALUE = 204002;
      /**
       * <pre>
       *打BOSS
       * </pre>
       *
       * <code>AttackBossREQ = 204003;</code>
       */
      public static final int AttackBossREQ_VALUE = 204003;
      /**
       * <pre>
       *复活
       * </pre>
       *
       * <code>BossClearCdREQ = 204004;</code>
       */
      public static final int BossClearCdREQ_VALUE = 204004;
      /**
       * <pre>
       *鼓舞
       * </pre>
       *
       * <code>BossEncouRageREQ = 204005;</code>
       */
      public static final int BossEncouRageREQ_VALUE = 204005;
      /**
       * <pre>
       *涅槃重生
       * </pre>
       *
       * <code>BossReviveREQ = 204006;</code>
       */
      public static final int BossReviveREQ_VALUE = 204006;
      /**
       * <pre>
       *请求加载地图信息
       * </pre>
       *
       * <code>BossMapInfoACK = 204007;</code>
       */
      public static final int BossMapInfoACK_VALUE = 204007;
      /**
       * <pre>
       *世界BOSS信息
       * </pre>
       *
       * <code>WorldBossInfoACK = 204008;</code>
       */
      public static final int WorldBossInfoACK_VALUE = 204008;
      /**
       * <pre>
       *玩家挂掉信息
       * </pre>
       *
       * <code>WorldBossPlayerDieInfoACK = 204009;</code>
       */
      public static final int WorldBossPlayerDieInfoACK_VALUE = 204009;
      /**
       * <pre>
       *进入BOSS战返回
       * </pre>
       *
       * <code>EnterBossMapACK = 204010;</code>
       */
      public static final int EnterBossMapACK_VALUE = 204010;
      /**
       * <pre>
       *BOSS入侵
       * </pre>
       *
       * <code>OpenBossInvasionREQ = 204101;</code>
       */
      public static final int OpenBossInvasionREQ_VALUE = 204101;
      /**
       * <pre>
       *打开界面返回
       * </pre>
       *
       * <code>OpenBossInvasionACK = 204102;</code>
       */
      public static final int OpenBossInvasionACK_VALUE = 204102;
      /**
       * <pre>
       *退出BOSS战
       * </pre>
       *
       * <code>ExitBossInvasionREQ = 204103;</code>
       */
      public static final int ExitBossInvasionREQ_VALUE = 204103;
      /**
       * <pre>
       *打BOSS
       * </pre>
       *
       * <code>AttackBossInvasionREQ = 204104;</code>
       */
      public static final int AttackBossInvasionREQ_VALUE = 204104;
      /**
       * <pre>
       *更新渔村Boss
       * </pre>
       *
       * <code>BossInvasionUpdateBossACK = 204105;</code>
       */
      public static final int BossInvasionUpdateBossACK_VALUE = 204105;
      /**
       * <pre>
       *更新今日击杀的数量
       * </pre>
       *
       * <code>BossInvasionUpdateSkillNumACK = 204106;</code>
       */
      public static final int BossInvasionUpdateSkillNumACK_VALUE = 204106;
      /**
       * <pre>
       *群雄争爸战
       * </pre>
       *
       * <code>QxzbJoinREQ = 205001;</code>
       */
      public static final int QxzbJoinREQ_VALUE = 205001;
      /**
       * <pre>
       *开始战斗
       * </pre>
       *
       * <code>QxzbKcREQ = 205002;</code>
       */
      public static final int QxzbKcREQ_VALUE = 205002;
      /**
       * <pre>
       *排行信息
       * </pre>
       *
       * <code>QxzbRankREQ = 205003;</code>
       */
      public static final int QxzbRankREQ_VALUE = 205003;
      /**
       * <pre>
       *进入群雄争爸战
       * </pre>
       *
       * <code>QxzbJoinACK = 205004;</code>
       */
      public static final int QxzbJoinACK_VALUE = 205004;
      /**
       * <pre>
       *排行信息
       * </pre>
       *
       * <code>QxzbRankACK = 205005;</code>
       */
      public static final int QxzbRankACK_VALUE = 205005;
      /**
       * <pre>
       *跨服群雄争爸
       * </pre>
       *
       * <code>KfQxzbJoinREQ = 205006;</code>
       */
      public static final int KfQxzbJoinREQ_VALUE = 205006;
      /**
       * <pre>
       *跨服开始战斗
       * </pre>
       *
       * <code>KfQxzbKcREQ = 205007;</code>
       */
      public static final int KfQxzbKcREQ_VALUE = 205007;
      /**
       * <pre>
       *跨服排行信息
       * </pre>
       *
       * <code>KfQxzbRankREQ = 205008;</code>
       */
      public static final int KfQxzbRankREQ_VALUE = 205008;
      /**
       * <pre>
       *进入跨服群雄争爸战
       * </pre>
       *
       * <code>KfQxzbJoinACK = 205009;</code>
       */
      public static final int KfQxzbJoinACK_VALUE = 205009;
      /**
       * <pre>
       *跨服排行信息			 
       * </pre>
       *
       * <code>KfQxzbRankACK = 205010;</code>
       */
      public static final int KfQxzbRankACK_VALUE = 205010;
      /**
       * <pre>
       *VIP
       * </pre>
       *
       * <code>VipGiftREQ = 206001;</code>
       */
      public static final int VipGiftREQ_VALUE = 206001;
      /**
       * <pre>
       *领取每日礼包
       * </pre>
       *
       * <code>VipDailyGiftREQ = 206002;</code>
       */
      public static final int VipDailyGiftREQ_VALUE = 206002;
      /**
       * <pre>
       *VIP特权信息
       * </pre>
       *
       * <code>VipFunctionREQ = 206003;</code>
       */
      public static final int VipFunctionREQ_VALUE = 206003;
      /**
       * <pre>
       *VIP信息返回
       * </pre>
       *
       * <code>VipInfoACK = 206004;</code>
       */
      public static final int VipInfoACK_VALUE = 206004;
      /**
       * <pre>
       *VIP特权信息返回
       * </pre>
       *
       * <code>VipFunctionACK = 206005;</code>
       */
      public static final int VipFunctionACK_VALUE = 206005;
      /**
       * <pre>
       *VIP奖励信息返
       * </pre>
       *
       * <code>VipGiftInfoACK = 206006;</code>
       */
      public static final int VipGiftInfoACK_VALUE = 206006;
      /**
       * <pre>
       *阵营战
       * </pre>
       *
       * <code>EnterCampFightREQ = 207001;</code>
       */
      public static final int EnterCampFightREQ_VALUE = 207001;
      /**
       * <pre>
       *阵营战退出地图
       * </pre>
       *
       * <code>ExitCampFightREQ = 207002;</code>
       */
      public static final int ExitCampFightREQ_VALUE = 207002;
      /**
       * <pre>
       *阵营战攻击守卫
       * </pre>
       *
       * <code>AttackGuardCampFightREQ = 207003;</code>
       */
      public static final int AttackGuardCampFightREQ_VALUE = 207003;
      /**
       * <pre>
       *阵营战攻击玩家
       * </pre>
       *
       * <code>AttackPvpCampFightREQ = 207004;</code>
       */
      public static final int AttackPvpCampFightREQ_VALUE = 207004;
      /**
       * <pre>
       *阵营战采集
       * </pre>
       *
       * <code>CollectCampFightREQ = 207005;</code>
       */
      public static final int CollectCampFightREQ_VALUE = 207005;
      /**
       * <pre>
       *阵营战提交采集
       * </pre>
       *
       * <code>CollectHandinCampFightREQ = 207006;</code>
       */
      public static final int CollectHandinCampFightREQ_VALUE = 207006;
      /**
       * <pre>
       *阵营守卫NPC信息返回
       * </pre>
       *
       * <code>CampGuardsACK = 207007;</code>
       */
      public static final int CampGuardsACK_VALUE = 207007;
      /**
       * <pre>
       *阵营冷却时间信息返回
       * </pre>
       *
       * <code>CampFightCdACK = 207008;</code>
       */
      public static final int CampFightCdACK_VALUE = 207008;
      /**
       * <pre>
       *阵营人数信息返回
       * </pre>
       *
       * <code>CampFightMemberACK = 207009;</code>
       */
      public static final int CampFightMemberACK_VALUE = 207009;
      /**
       * <pre>
       *玩家信息信息返
       * </pre>
       *
       * <code>CampFightMyPlayerACK = 207010;</code>
       */
      public static final int CampFightMyPlayerACK_VALUE = 207010;
      /**
       * <pre>
       *排行信息信息返
       * </pre>
       *
       * <code>CampFightRankACK = 207011;</code>
       */
      public static final int CampFightRankACK_VALUE = 207011;
      /**
       * <pre>
       *单个排行信息信息返
       * </pre>
       *
       * <code>CampFightRankUpdateACK = 207012;</code>
       */
      public static final int CampFightRankUpdateACK_VALUE = 207012;
      /**
       * <pre>
       *战场状态改变返回
       * </pre>
       *
       * <code>CampFightStateACK = 207013;</code>
       */
      public static final int CampFightStateACK_VALUE = 207013;
      /**
       * <pre>
       *结算信息
       * </pre>
       *
       * <code>CampFightEndACK = 207014;</code>
       */
      public static final int CampFightEndACK_VALUE = 207014;
      /**
       * <pre>
       *fight
       * </pre>
       *
       * <code>EnterFightACK = 300001;</code>
       */
      public static final int EnterFightACK_VALUE = 300001;
      /**
       * <pre>
       *进入战斗
       * </pre>
       *
       * <code>EnterFightREQ = 300002;</code>
       */
      public static final int EnterFightREQ_VALUE = 300002;
      /**
       * <pre>
       *玩家操作
       * </pre>
       *
       * <code>HeroFightREQ = 300003;</code>
       */
      public static final int HeroFightREQ_VALUE = 300003;
      /**
       * <pre>
       *战报
       * </pre>
       *
       * <code>FightReportACK = 300004;</code>
       */
      public static final int FightReportACK_VALUE = 300004;
      /**
       * <pre>
       *请求和玩家挑战
       * </pre>
       *
       * <code>OtherPkFightREQ = 300010;</code>
       */
      public static final int OtherPkFightREQ_VALUE = 300010;
      /**
       * <pre>
       *收到玩家挑战
       * </pre>
       *
       * <code>OtherPkFightACK = 300011;</code>
       */
      public static final int OtherPkFightACK_VALUE = 300011;
      /**
       * <pre>
       *单个英雄加放战斗
       * </pre>
       *
       * <code>AddFightingInfoACK = 300012;</code>
       */
      public static final int AddFightingInfoACK_VALUE = 300012;
      /**
       * <pre>
       *战斗木桩
       * </pre>
       *
       * <code>FightCombatREQ = 300013;</code>
       */
      public static final int FightCombatREQ_VALUE = 300013;
      /**
       * <pre>
       *arena竞技场
       * </pre>
       *
       * <code>ArenaEnterREQ = 301001;</code>
       */
      public static final int ArenaEnterREQ_VALUE = 301001;
      /**
       * <pre>
       *退出竞技场
       * </pre>
       *
       * <code>ArenaExitREQ = 301002;</code>
       */
      public static final int ArenaExitREQ_VALUE = 301002;
      /**
       * <pre>
       *挑战
       * </pre>
       *
       * <code>ArenaChangeREQ = 301003;</code>
       */
      public static final int ArenaChangeREQ_VALUE = 301003;
      /**
       * <pre>
       *买挑战次数
       * </pre>
       *
       * <code>ArenaBuyChangeREQ = 301004;</code>
       */
      public static final int ArenaBuyChangeREQ_VALUE = 301004;
      /**
       * <pre>
       *清除挑战CD
       * </pre>
       *
       * <code>ArenaCleanCdREQ = 301005;</code>
       */
      public static final int ArenaCleanCdREQ_VALUE = 301005;
      /**
       * <pre>
       *获取战报
       * </pre>
       *
       * <code>ArenaFightReportREQ = 301006;</code>
       */
      public static final int ArenaFightReportREQ_VALUE = 301006;
      /**
       * <pre>
       *分享战报
       * </pre>
       *
       * <code>ArenaShareReportREQ = 301007;</code>
       */
      public static final int ArenaShareReportREQ_VALUE = 301007;
      /**
       * <pre>
       *观看分享战报
       * </pre>
       *
       * <code>ArenaLookShareReportREQ = 301008;</code>
       */
      public static final int ArenaLookShareReportREQ_VALUE = 301008;
      /**
       * <pre>
       *开宝箱
       * </pre>
       *
       * <code>ArenaOpenBoxREQ = 301009;</code>
       */
      public static final int ArenaOpenBoxREQ_VALUE = 301009;
      /**
       * <pre>
       *竞技场挑战cd
       * </pre>
       *
       * <code>ArenaRankInfoACK = 301010;</code>
       */
      public static final int ArenaRankInfoACK_VALUE = 301010;
      /**
       * <pre>
       *竞技场每日奖励内容返回
       * </pre>
       *
       * <code>ArenaDailyInfoACK = 301011;</code>
       */
      public static final int ArenaDailyInfoACK_VALUE = 301011;
      /**
       * <pre>
       *开宝箱返回
       * </pre>
       *
       * <code>ArenaOpenBoxACK = 301012;</code>
       */
      public static final int ArenaOpenBoxACK_VALUE = 301012;
      /**
       * <pre>
       *竞技场挑战cd
       * </pre>
       *
       * <code>ArenaCdACK = 301013;</code>
       */
      public static final int ArenaCdACK_VALUE = 301013;
      /**
       * <pre>
       *map
       * </pre>
       *
       * <code>EnterMapACK = 500001;</code>
       */
      public static final int EnterMapACK_VALUE = 500001;
      /**
       * <pre>
       *切换地图请示
       * </pre>
       *
       * <code>SwitchMapREQ = 500002;</code>
       */
      public static final int SwitchMapREQ_VALUE = 500002;
      /**
       * <pre>
       *地图玩家移动
       * </pre>
       *
       * <code>MapMove = 500003;</code>
       */
      public static final int MapMove_VALUE = 500003;
      /**
       * <pre>
       *玩家离开地图
       * </pre>
       *
       * <code>PlayerLeaveMap = 500004;</code>
       */
      public static final int PlayerLeaveMap_VALUE = 500004;
      /**
       * <pre>
       *世界地图切换
       * </pre>
       *
       * <code>SwitchWorldREQ = 500005;</code>
       */
      public static final int SwitchWorldREQ_VALUE = 500005;
      /**
       * <pre>
       *单个地图上玩家信息
       * </pre>
       *
       * <code>ScenePlayerInfo = 500012;</code>
       */
      public static final int ScenePlayerInfo_VALUE = 500012;
      /**
       * <pre>
       *人物信息修改返回
       * </pre>
       *
       * <code>ScenePlayerUpdataACK = 500013;</code>
       */
      public static final int ScenePlayerUpdataACK_VALUE = 500013;
      /**
       * <pre>
       *原地敌人
       * </pre>
       *
       * <code>MapAutochthonous = 500014;</code>
       */
      public static final int MapAutochthonous_VALUE = 500014;
      /**
       * <pre>
       *瞬移到指定坐标
       * </pre>
       *
       * <code>QuickMoveACK = 500015;</code>
       */
      public static final int QuickMoveACK_VALUE = 500015;
      /**
       * <pre>
       *组队帮其它人移动
       * </pre>
       *
       * <code>MapOtherMove = 500016;</code>
       */
      public static final int MapOtherMove_VALUE = 500016;
      /**
       * <pre>
       *修改怪物信息
       * </pre>
       *
       * <code>UpdateSceneMonsterInfoACK = 500017;</code>
       */
      public static final int UpdateSceneMonsterInfoACK_VALUE = 500017;
      /**
       * <pre>
       *人物做动作
       * </pre>
       *
       * <code>MapPlayerActionREQ = 500018;</code>
       */
      public static final int MapPlayerActionREQ_VALUE = 500018;
      /**
       * <pre>
       *人物做动作
       * </pre>
       *
       * <code>MapPlayerActionACK = 500019;</code>
       */
      public static final int MapPlayerActionACK_VALUE = 500019;
      /**
       * <pre>
       *修改多个怪物信息
       * </pre>
       *
       * <code>UpdateSceneMonstersACK = 500020;</code>
       */
      public static final int UpdateSceneMonstersACK_VALUE = 500020;
      /**
       * <pre>
       *玩家自已移动
       * </pre>
       *
       * <code>OnMyMapMove = 500021;</code>
       */
      public static final int OnMyMapMove_VALUE = 500021;
      /**
       * <pre>
       *场景放烟花
       * </pre>
       *
       * <code>FireWorksACK = 500022;</code>
       */
      public static final int FireWorksACK_VALUE = 500022;
      /**
       * <pre>
       *活动
       * </pre>
       *
       * <code>ActivityOpenREQ = 510001;</code>
       */
      public static final int ActivityOpenREQ_VALUE = 510001;
      /**
       * <pre>
       *活动信息返回
       * </pre>
       *
       * <code>ActivityInfoACK = 510002;</code>
       */
      public static final int ActivityInfoACK_VALUE = 510002;
      /**
       * <pre>
       *活跃度奖励领取 按顺序领取奖励
       * </pre>
       *
       * <code>AssistantRewardREQ = 510003;</code>
       */
      public static final int AssistantRewardREQ_VALUE = 510003;
      /**
       * <pre>
       *活跃度信息更新
       * </pre>
       *
       * <code>ActivityInfoUpdateACK = 510004;</code>
       */
      public static final int ActivityInfoUpdateACK_VALUE = 510004;
      /**
       * <pre>
       *成就
       * </pre>
       *
       * <code>AchievementOpenREQ = 511001;</code>
       */
      public static final int AchievementOpenREQ_VALUE = 511001;
      /**
       * <pre>
       *成就信息返回
       * </pre>
       *
       * <code>AchievementInfoACK = 511002;</code>
       */
      public static final int AchievementInfoACK_VALUE = 511002;
      /**
       * <pre>
       *成就奖励领取
       * </pre>
       *
       * <code>AchievementRewardREQ = 511003;</code>
       */
      public static final int AchievementRewardREQ_VALUE = 511003;
      /**
       * <pre>
       *成就信息更新
       * </pre>
       *
       * <code>AchievementInfoUpdateACK = 511004;</code>
       */
      public static final int AchievementInfoUpdateACK_VALUE = 511004;
      /**
       * <pre>
       *副本
       * </pre>
       *
       * <code>DeputyGroupInfoREQ = 520001;</code>
       */
      public static final int DeputyGroupInfoREQ_VALUE = 520001;
      /**
       * <pre>
       *进入副本
       * </pre>
       *
       * <code>DeputyEnterREQ = 520002;</code>
       */
      public static final int DeputyEnterREQ_VALUE = 520002;
      /**
       * <pre>
       *点击怪物
       * </pre>
       *
       * <code>DeputyClickMonsterREQ = 520003;</code>
       */
      public static final int DeputyClickMonsterREQ_VALUE = 520003;
      /**
       * <pre>
       *退出副本
       * </pre>
       *
       * <code>DeputyExitREQ = 520004;</code>
       */
      public static final int DeputyExitREQ_VALUE = 520004;
      /**
       * <pre>
       *获取当前副本信息
       * </pre>
       *
       * <code>DeputyInfoREQ = 520005;</code>
       */
      public static final int DeputyInfoREQ_VALUE = 520005;
      /**
       * <pre>
       *获取当前副本清剿信息
       * </pre>
       *
       * <code>DeputyCleanInfoREQ = 520006;</code>
       */
      public static final int DeputyCleanInfoREQ_VALUE = 520006;
      /**
       * <pre>
       *开始清剿副本
       * </pre>
       *
       * <code>DeputyCleanStartREQ = 520007;</code>
       */
      public static final int DeputyCleanStartREQ_VALUE = 520007;
      /**
       * <pre>
       *关闭清剿副本
       * </pre>
       *
       * <code>DeputyCleanCloseREQ = 520008;</code>
       */
      public static final int DeputyCleanCloseREQ_VALUE = 520008;
      /**
       * <pre>
       *改变自动出售设置
       * </pre>
       *
       * <code>DeputyCleanAutoSellREQ = 520009;</code>
       */
      public static final int DeputyCleanAutoSellREQ_VALUE = 520009;
      /**
       * <pre>
       *取消自动清剿
       * </pre>
       *
       * <code>DeputyCleanCancelREQ = 520010;</code>
       */
      public static final int DeputyCleanCancelREQ_VALUE = 520010;
      /**
       * <pre>
       *清剿金币加速
       * </pre>
       *
       * <code>DeputyCleanGoldSpeedREQ = 520011;</code>
       */
      public static final int DeputyCleanGoldSpeedREQ_VALUE = 520011;
      /**
       * <pre>
       *清剿金币加速查看金币数量
       * </pre>
       *
       * <code>DeputyCleanGoldSpeedCheckREQ = 520012;</code>
       */
      public static final int DeputyCleanGoldSpeedCheckREQ_VALUE = 520012;
      /**
       * <pre>
       *获取当前副本信息
       * </pre>
       *
       * <code>DeputyInfoACK = 520013;</code>
       */
      public static final int DeputyInfoACK_VALUE = 520013;
      /**
       * <pre>
       *获取当前副本清剿信息
       * </pre>
       *
       * <code>DeputyCleanInfoACK = 520014;</code>
       */
      public static final int DeputyCleanInfoACK_VALUE = 520014;
      /**
       * <pre>
       *进入副本信息
       * </pre>
       *
       * <code>DeputyEnterACK = 520015;</code>
       */
      public static final int DeputyEnterACK_VALUE = 520015;
      /**
       * <pre>
       *副本怪物状态返回信息
       * </pre>
       *
       * <code>DeputyMonsterStateACK = 520016;</code>
       */
      public static final int DeputyMonsterStateACK_VALUE = 520016;
      /**
       * <pre>
       *副本BOSS信息
       * </pre>
       *
       * <code>DeputyBossInfoACK = 520017;</code>
       */
      public static final int DeputyBossInfoACK_VALUE = 520017;
      /**
       * <pre>
       *副本完成信息
       * </pre>
       *
       * <code>DeputyStateInfoACK = 520018;</code>
       */
      public static final int DeputyStateInfoACK_VALUE = 520018;
      /**
       * <pre>
       *副本组信息返回
       * </pre>
       *
       * <code>DeputyGroupInfoACK = 520019;</code>
       */
      public static final int DeputyGroupInfoACK_VALUE = 520019;
      /**
       * <pre>
       *获取当前挂机状态信息
       * </pre>
       *
       * <code>DeputyCleanStateACK = 520020;</code>
       */
      public static final int DeputyCleanStateACK_VALUE = 520020;
      /**
       * <pre>
       *挂机每场战斗信息
       * </pre>
       *
       * <code>DeputyCleanFightInfoACK = 520021;</code>
       */
      public static final int DeputyCleanFightInfoACK_VALUE = 520021;
      /**
       * <pre>
       *王者破证闯关副本
       * </pre>
       *
       * <code>EmigratedInfoREQ = 521001;</code>
       */
      public static final int EmigratedInfoREQ_VALUE = 521001;
      /**
       * <pre>
       *闯关信息返回
       * </pre>
       *
       * <code>EmigratedInfoACK = 521002;</code>
       */
      public static final int EmigratedInfoACK_VALUE = 521002;
      /**
       * <pre>
       *进入副本
       * </pre>
       *
       * <code>EnterEmigratedREQ = 521003;</code>
       */
      public static final int EnterEmigratedREQ_VALUE = 521003;
      /**
       * <pre>
       *点击怪物
       * </pre>
       *
       * <code>EmigrateClickMonsterREQ = 521004;</code>
       */
      public static final int EmigrateClickMonsterREQ_VALUE = 521004;
      /**
       * <pre>
       *通出
       * </pre>
       *
       * <code>EmigrateExitREQ = 521005;</code>
       */
      public static final int EmigrateExitREQ_VALUE = 521005;
      /**
       * <pre>
       *进入副本返回
       * </pre>
       *
       * <code>EnterEmigratedACK = 521006;</code>
       */
      public static final int EnterEmigratedACK_VALUE = 521006;
      /**
       * <pre>
       *重置所有层信息
       * </pre>
       *
       * <code>EmigrateResetREQ = 521007;</code>
       */
      public static final int EmigrateResetREQ_VALUE = 521007;
      /**
       * <pre>
       *购买重置次数
       * </pre>
       *
       * <code>EmigrateBuyResetREQ = 521008;</code>
       */
      public static final int EmigrateBuyResetREQ_VALUE = 521008;
      /**
       * <pre>
       *死亡塔
       * </pre>
       *
       * <code>OpenDieTowerREQ = 522001;</code>
       */
      public static final int OpenDieTowerREQ_VALUE = 522001;
      /**
       * <pre>
       *打开死亡塔返回
       * </pre>
       *
       * <code>OpenDieTowerACK = 522002;</code>
       */
      public static final int OpenDieTowerACK_VALUE = 522002;
      /**
       * <pre>
       *进入战斗
       * </pre>
       *
       * <code>DieTowerFightREQ = 522003;</code>
       */
      public static final int DieTowerFightREQ_VALUE = 522003;
      /**
       * <pre>
       *重置
       * </pre>
       *
       * <code>DieTowerResetREQ = 522004;</code>
       */
      public static final int DieTowerResetREQ_VALUE = 522004;
      /**
       * <pre>
       *购买重置次数
       * </pre>
       *
       * <code>DieTowerBuyResetREQ = 522005;</code>
       */
      public static final int DieTowerBuyResetREQ_VALUE = 522005;
      /**
       * <pre>
       *请求排行信息
       * </pre>
       *
       * <code>DieTowerRankREQ = 522006;</code>
       */
      public static final int DieTowerRankREQ_VALUE = 522006;
      /**
       * <pre>
       *请求排行信息返回
       * </pre>
       *
       * <code>DieTowerRankACK = 522007;</code>
       */
      public static final int DieTowerRankACK_VALUE = 522007;
      /**
       * <pre>
       *战斗完成奖励显示
       * </pre>
       *
       * <code>DieTowerRewardACK = 522008;</code>
       */
      public static final int DieTowerRewardACK_VALUE = 522008;
      /**
       * <pre>
       *自动战斗
       * </pre>
       *
       * <code>DieTowerAutoFightREQ = 522009;</code>
       */
      public static final int DieTowerAutoFightREQ_VALUE = 522009;
      /**
       * <pre>
       *自动战斗返回
       * </pre>
       *
       * <code>DieTowerAutoFightACK = 522010;</code>
       */
      public static final int DieTowerAutoFightACK_VALUE = 522010;
      /**
       * <pre>
       *完成自动战斗
       * </pre>
       *
       * <code>DieTowerComAutoREQ = 522011;</code>
       */
      public static final int DieTowerComAutoREQ_VALUE = 522011;
      /**
       * <pre>
       *完成自动战斗返回
       * </pre>
       *
       * <code>DieTowerComAutoACK = 522012;</code>
       */
      public static final int DieTowerComAutoACK_VALUE = 522012;
      /**
       * <pre>
       *英雄招募
       * </pre>
       *
       * <code>HeroPubInfoREQ = 530001;</code>
       */
      public static final int HeroPubInfoREQ_VALUE = 530001;
      /**
       * <pre>
       *抽取英雄
       * </pre>
       *
       * <code>HeroPubLotteryREQ = 530002;</code>
       */
      public static final int HeroPubLotteryREQ_VALUE = 530002;
      /**
       * <pre>
       *招募英雄
       * </pre>
       *
       * <code>HeroPubRecruitREQ = 530003;</code>
       */
      public static final int HeroPubRecruitREQ_VALUE = 530003;
      /**
       * <pre>
       *获取图鉴英雄信息返回
       * </pre>
       *
       * <code>HeroPubInfoACK = 530004;</code>
       */
      public static final int HeroPubInfoACK_VALUE = 530004;
      /**
       * <pre>
       *抽取英雄
       * </pre>
       *
       * <code>HeroPubLotteryACK = 530005;</code>
       */
      public static final int HeroPubLotteryACK_VALUE = 530005;
      /**
       * <pre>
       *升级联合技能
       * </pre>
       *
       * <code>HeroPubUpZoariumSkillREQ = 530006;</code>
       */
      public static final int HeroPubUpZoariumSkillREQ_VALUE = 530006;
      /**
       * <pre>
       *升级联合技能返回
       * </pre>
       *
       * <code>HeroPubUpZoariumSkillACK = 530007;</code>
       */
      public static final int HeroPubUpZoariumSkillACK_VALUE = 530007;
      /**
       * <pre>
       *招募英雄返回
       * </pre>
       *
       * <code>HeroPubRecruitACK = 530008;</code>
       */
      public static final int HeroPubRecruitACK_VALUE = 530008;
      /**
       * <pre>
       *转生
       * </pre>
       *
       * <code>HeroZsREQ = 530009;</code>
       */
      public static final int HeroZsREQ_VALUE = 530009;
      /**
       * <pre>
       *转生返回
       * </pre>
       *
       * <code>HeroZsACK = 530010;</code>
       */
      public static final int HeroZsACK_VALUE = 530010;
      /**
       * <pre>
       *突破
       * </pre>
       *
       * <code>HeroTpREQ = 530011;</code>
       */
      public static final int HeroTpREQ_VALUE = 530011;
      /**
       * <pre>
       *突破返回
       * </pre>
       *
       * <code>HeroTpACK = 530012;</code>
       */
      public static final int HeroTpACK_VALUE = 530012;
      /**
       * <pre>
       *改造
       * </pre>
       *
       * <code>HeroGzREQ = 530013;</code>
       */
      public static final int HeroGzREQ_VALUE = 530013;
      /**
       * <pre>
       *改造返回
       * </pre>
       *
       * <code>HeroGzACK = 530014;</code>
       */
      public static final int HeroGzACK_VALUE = 530014;
      /**
       * <pre>
       *回炉
       * </pre>
       *
       * <code>HeroHlREQ = 530015;</code>
       */
      public static final int HeroHlREQ_VALUE = 530015;
      /**
       * <pre>
       *回炉返回
       * </pre>
       *
       * <code>HeroHlACK = 530016;</code>
       */
      public static final int HeroHlACK_VALUE = 530016;
      /**
       * <pre>
       *获取突破信息
       * </pre>
       *
       * <code>GetHeroTpInfoREQ = 530017;</code>
       */
      public static final int GetHeroTpInfoREQ_VALUE = 530017;
      /**
       * <pre>
       *获取突破信息返回
       * </pre>
       *
       * <code>GetHeroTpInfoACK = 530018;</code>
       */
      public static final int GetHeroTpInfoACK_VALUE = 530018;
      /**
       * <pre>
       *获取改造信息
       * </pre>
       *
       * <code>GetHeroGzInfoREQ = 530019;</code>
       */
      public static final int GetHeroGzInfoREQ_VALUE = 530019;
      /**
       * <pre>
       *获取改造信息返回
       * </pre>
       *
       * <code>GetHeroGzInfoACK = 530020;</code>
       */
      public static final int GetHeroGzInfoACK_VALUE = 530020;
      /**
       * <pre>
       *保存改造
       * </pre>
       *
       * <code>HeroSaveGzREQ = 530021;</code>
       */
      public static final int HeroSaveGzREQ_VALUE = 530021;
      /**
       * <pre>
       *保存改造返回
       * </pre>
       *
       * <code>HeroSaveGzACK = 530022;</code>
       */
      public static final int HeroSaveGzACK_VALUE = 530022;
      /**
       * <pre>
       *跟随
       * </pre>
       *
       * <code>HeroFollowREQ = 530023;</code>
       */
      public static final int HeroFollowREQ_VALUE = 530023;
      /**
       * <pre>
       *人物转生
       * </pre>
       *
       * <code>HeroPlayerZsREQ = 530024;</code>
       */
      public static final int HeroPlayerZsREQ_VALUE = 530024;
      /**
       * <pre>
       *人物转生返回
       * </pre>
       *
       * <code>HeroPlayerZsACK = 530025;</code>
       */
      public static final int HeroPlayerZsACK_VALUE = 530025;
      /**
       * <pre>
       *喂养
       * </pre>
       *
       * <code>HeroExpREQ = 530026;</code>
       */
      public static final int HeroExpREQ_VALUE = 530026;
      /**
       * <pre>
       *喂养返回
       * </pre>
       *
       * <code>HeroExpACK = 530027;</code>
       */
      public static final int HeroExpACK_VALUE = 530027;
      /**
       * <pre>
       *人物宠物改名
       * </pre>
       *
       * <code>HeroChangeNameREQ = 530028;</code>
       */
      public static final int HeroChangeNameREQ_VALUE = 530028;
      /**
       * <pre>
       *人物宠物改名
       * </pre>
       *
       * <code>HeroChangeNameACK = 530029;</code>
       */
      public static final int HeroChangeNameACK_VALUE = 530029;
      /**
       * <pre>
       *人物克制属性改变
       * </pre>
       *
       * <code>HeroRestraintREQ = 530030;</code>
       */
      public static final int HeroRestraintREQ_VALUE = 530030;
      /**
       * <pre>
       *洗练信息
       * </pre>
       *
       * <code>GetHeroXlInfoREQ = 530031;</code>
       */
      public static final int GetHeroXlInfoREQ_VALUE = 530031;
      /**
       * <pre>
       *获取洗练评级信息返回
       * </pre>
       *
       * <code>GetHeroXlInfoACK = 530033;</code>
       */
      public static final int GetHeroXlInfoACK_VALUE = 530033;
      /**
       * <pre>
       *洗练
       * </pre>
       *
       * <code>HeroXlREQ = 530034;</code>
       */
      public static final int HeroXlREQ_VALUE = 530034;
      /**
       * <pre>
       *保存洗练
       * </pre>
       *
       * <code>HeroSaveXlREQ = 530035;</code>
       */
      public static final int HeroSaveXlREQ_VALUE = 530035;
      /**
       * <pre>
       *宠物觉醒
       * </pre>
       *
       * <code>HeroAwakeningREQ = 530036;</code>
       */
      public static final int HeroAwakeningREQ_VALUE = 530036;
      /**
       * <pre>
       *宠物觉醒返回
       * </pre>
       *
       * <code>HeroAwakeningACK = 530037;</code>
       */
      public static final int HeroAwakeningACK_VALUE = 530037;
      /**
       * <pre>
       *请求锁宠物
       * </pre>
       *
       * <code>HeroLockREQ = 530038;</code>
       */
      public static final int HeroLockREQ_VALUE = 530038;
      /**
       * <pre>
       *获取召唤6星祭品
       * </pre>
       *
       * <code>GetOfferingInfoREQ = 530039;</code>
       */
      public static final int GetOfferingInfoREQ_VALUE = 530039;
      /**
       * <pre>
       *召唤6星祭品
       * </pre>
       *
       * <code>OfferingInfoACK = 530040;</code>
       */
      public static final int OfferingInfoACK_VALUE = 530040;
      /**
       * <pre>
       *召唤6星
       * </pre>
       *
       * <code>SummonSixCarPetREQ = 530041;</code>
       */
      public static final int SummonSixCarPetREQ_VALUE = 530041;
      /**
       * <pre>
       *技能进阶
       * </pre>
       *
       * <code>SkillAdvanceEQ = 530042;</code>
       */
      public static final int SkillAdvanceEQ_VALUE = 530042;
      /**
       * <pre>
       *战力引导
       * </pre>
       *
       * <code>GradeFrightInfoREQ = 540001;</code>
       */
      public static final int GradeFrightInfoREQ_VALUE = 540001;
      /**
       * <pre>
       *战力引导的信息获取返回
       * </pre>
       *
       * <code>GradeFrightInfoACK = 540002;</code>
       */
      public static final int GradeFrightInfoACK_VALUE = 540002;
      /**
       * <pre>
       *称号
       * </pre>
       *
       * <code>OpenTitleREQ = 550001;</code>
       */
      public static final int OpenTitleREQ_VALUE = 550001;
      /**
       * <pre>
       *称号使用
       * </pre>
       *
       * <code>UseTitleREQ = 550002;</code>
       */
      public static final int UseTitleREQ_VALUE = 550002;
      /**
       * <pre>
       *佩戴称号
       * </pre>
       *
       * <code>PutTitleREQ = 550003;</code>
       */
      public static final int PutTitleREQ_VALUE = 550003;
      /**
       * <pre>
       *升级
       * </pre>
       *
       * <code>UpTitleREQ = 550004;</code>
       */
      public static final int UpTitleREQ_VALUE = 550004;
      /**
       * <pre>
       *所有称号信息返回
       * </pre>
       *
       * <code>AllTitleInfoACK = 550005;</code>
       */
      public static final int AllTitleInfoACK_VALUE = 550005;
      /**
       * <pre>
       *铭文，猎命
       * </pre>
       *
       * <code>OpenHuntREQ = 560001;</code>
       */
      public static final int OpenHuntREQ_VALUE = 560001;
      /**
       * <pre>
       *开打面板返回
       * </pre>
       *
       * <code>OpenHuntACK = 560002;</code>
       */
      public static final int OpenHuntACK_VALUE = 560002;
      /**
       * <pre>
       *装备
       * </pre>
       *
       * <code>EquipHuntREQ = 560003;</code>
       */
      public static final int EquipHuntREQ_VALUE = 560003;
      /**
       * <pre>
       *卸下
       * </pre>
       *
       * <code>UnHuntREQ = 560004;</code>
       */
      public static final int UnHuntREQ_VALUE = 560004;
      /**
       * <pre>
       *强化
       * </pre>
       *
       * <code>UpgradeHuntREQ = 560005;</code>
       */
      public static final int UpgradeHuntREQ_VALUE = 560005;
      /**
       * <pre>
       *合成
       * </pre>
       *
       * <code>UpHuntREQ = 560006;</code>
       */
      public static final int UpHuntREQ_VALUE = 560006;
      /**
       * <pre>
       *分解
       * </pre>
       *
       * <code>DownHuntREQ = 560007;</code>
       */
      public static final int DownHuntREQ_VALUE = 560007;
      /**
       * <pre>
       *猎魂,一键猎魂
       * </pre>
       *
       * <code>DoHuntREQ = 560008;</code>
       */
      public static final int DoHuntREQ_VALUE = 560008;
      /**
       * <pre>
       *兑换
       * </pre>
       *
       * <code>ExchangeHuntREQ = 560009;</code>
       */
      public static final int ExchangeHuntREQ_VALUE = 560009;
      /**
       * <pre>
       *吞噬
       * </pre>
       *
       * <code>SwallowHuntREQ = 560010;</code>
       */
      public static final int SwallowHuntREQ_VALUE = 560010;
      /**
       * <pre>
       *开启格子
       * </pre>
       *
       * <code>OpenGridHuntREQ = 560011;</code>
       */
      public static final int OpenGridHuntREQ_VALUE = 560011;
      /**
       * <pre>
       *拾取碎片
       * </pre>
       *
       * <code>PickUpHuntREQ = 560012;</code>
       */
      public static final int PickUpHuntREQ_VALUE = 560012;
      /**
       * <pre>
       *宠物性格
       * </pre>
       *
       * <code>OpenCharacterREQ = 561001;</code>
       */
      public static final int OpenCharacterREQ_VALUE = 561001;
      /**
       * <pre>
       *返回宠物性格面板
       * </pre>
       *
       * <code>OpenCharacterACK = 561002;</code>
       */
      public static final int OpenCharacterACK_VALUE = 561002;
      /**
       * <pre>
       *请求抽取宠物性格
       * </pre>
       *
       * <code>SummonCharacterREQ = 561003;</code>
       */
      public static final int SummonCharacterREQ_VALUE = 561003;
      /**
       * <pre>
       *返回抽取宠物性格
       * </pre>
       *
       * <code>SummonCharacterACK = 561004;</code>
       */
      public static final int SummonCharacterACK_VALUE = 561004;
      /**
       * <pre>
       *请求选择宠物性格
       * </pre>
       *
       * <code>ChooseCharacterREQ = 561005;</code>
       */
      public static final int ChooseCharacterREQ_VALUE = 561005;
      /**
       * <pre>
       *返回选择宠物性格
       * </pre>
       *
       * <code>ChooseCharacterACK = 561006;</code>
       */
      public static final int ChooseCharacterACK_VALUE = 561006;
      /**
       * <pre>
       *请求吞丹宠物性格
       * </pre>
       *
       * <code>SwallowDanCharacterREQ = 561007;</code>
       */
      public static final int SwallowDanCharacterREQ_VALUE = 561007;
      /**
       * <pre>
       *返回吞丹宠物性格
       * </pre>
       *
       * <code>SwallowDanCharacterACK = 561008;</code>
       */
      public static final int SwallowDanCharacterACK_VALUE = 561008;
      /**
       * <pre>
       *请求卸载宠物性格
       * </pre>
       *
       * <code>UnloadCharacterREQ = 561009;</code>
       */
      public static final int UnloadCharacterREQ_VALUE = 561009;
      /**
       * <pre>
       *返回卸载宠物性格
       * </pre>
       *
       * <code>UnloadCharacterACK = 561010;</code>
       */
      public static final int UnloadCharacterACK_VALUE = 561010;
      /**
       * <pre>
       *请求英雄性格属性
       * </pre>
       *
       * <code>HeroCharactersREQ = 561011;</code>
       */
      public static final int HeroCharactersREQ_VALUE = 561011;
      /**
       * <pre>
       *返回英雄性格属性
       * </pre>
       *
       * <code>HeroCharactersACK = 561012;</code>
       */
      public static final int HeroCharactersACK_VALUE = 561012;
      /**
       * <pre>
       *请求穿戴宠物性格
       * </pre>
       *
       * <code>EquipCharacterREQ = 561013;</code>
       */
      public static final int EquipCharacterREQ_VALUE = 561013;
      /**
       * <pre>
       *返回穿戴宠物性格	
       * </pre>
       *
       * <code>EquipCharacterACK = 561014;</code>
       */
      public static final int EquipCharacterACK_VALUE = 561014;
      /**
       * <pre>
       *性格锁定
       * </pre>
       *
       * <code>CharacterLockREQ = 561015;</code>
       */
      public static final int CharacterLockREQ_VALUE = 561015;
      /**
       * <pre>
       *皮肤
       * </pre>
       *
       * <code>SkinInfoREQ = 562001;</code>
       */
      public static final int SkinInfoREQ_VALUE = 562001;
      /**
       * <code>SkinInfoACK = 562002;</code>
       */
      public static final int SkinInfoACK_VALUE = 562002;
      /**
       * <pre>
       *装备或卸下皮肤
       * </pre>
       *
       * <code>UseOrNoUseSkinREQ = 562003;</code>
       */
      public static final int UseOrNoUseSkinREQ_VALUE = 562003;
      /**
       * <pre>
       *精灵
       * </pre>
       *
       * <code>GetElfInfoREQ = 562004;</code>
       */
      public static final int GetElfInfoREQ_VALUE = 562004;
      /**
       * <pre>
       *响应精灵信息
       * </pre>
       *
       * <code>GetElfInfoACK = 562005;</code>
       */
      public static final int GetElfInfoACK_VALUE = 562005;
      /**
       * <pre>
       *出战精灵
       * </pre>
       *
       * <code>ToFightElfREQ = 562006;</code>
       */
      public static final int ToFightElfREQ_VALUE = 562006;
      /**
       * <pre>
       *喂养精灵
       * </pre>
       *
       * <code>FeedElfREQ = 562007;</code>
       */
      public static final int FeedElfREQ_VALUE = 562007;
      /**
       * <pre>
       *宠物塔防小游戏
       * </pre>
       *
       * <code>ZoosFightEnterREQ = 600001;</code>
       */
      public static final int ZoosFightEnterREQ_VALUE = 600001;
      /**
       * <pre>
       *进入关卡返回
       * </pre>
       *
       * <code>ZoosFightEnterACK = 600002;</code>
       */
      public static final int ZoosFightEnterACK_VALUE = 600002;
      /**
       * <pre>
       *请求庄园挑战排行榜
       * </pre>
       *
       * <code>GrangeRankREQ = 700001;</code>
       */
      public static final int GrangeRankREQ_VALUE = 700001;
      /**
       * <pre>
       *响应庄园挑战排行榜
       * </pre>
       *
       * <code>GrangeRankACK = 700002;</code>
       */
      public static final int GrangeRankACK_VALUE = 700002;
      /**
       * <pre>
       *庄园挑战商城购买
       * </pre>
       *
       * <code>GrangeShopREQ = 700003;</code>
       */
      public static final int GrangeShopREQ_VALUE = 700003;
      /**
       * <pre>
       *四属性BOSS血条
       * </pre>
       *
       * <code>GrangeBossHPACK = 700004;</code>
       */
      public static final int GrangeBossHPACK_VALUE = 700004;
      /**
       * <pre>
       *请求庄园挑战战斗
       * </pre>
       *
       * <code>GrangeFightREQ = 700005;</code>
       */
      public static final int GrangeFightREQ_VALUE = 700005;
      /**
       * <pre>
       *返回庄园挑战个人积分
       * </pre>
       *
       * <code>GrangeScoreACK = 700006;</code>
       */
      public static final int GrangeScoreACK_VALUE = 700006;
      /**
       * <pre>
       *请求庄园挑战商店信息
       * </pre>
       *
       * <code>GrangeShopInfoREQ = 700007;</code>
       */
      public static final int GrangeShopInfoREQ_VALUE = 700007;
      /**
       * <pre>
       *返回庄园挑战商店信息
       * </pre>
       *
       * <code>GrangeShopInfoACK = 700008;</code>
       */
      public static final int GrangeShopInfoACK_VALUE = 700008;
      /**
       * <pre>
       *9跨服
       * </pre>
       *
       * <code>CrossLogin = 900001;</code>
       */
      public static final int CrossLogin_VALUE = 900001;
      /**
       * <pre>
       *游戏服务器玩家离线	
       * </pre>
       *
       * <code>CrossPlayerOff = 900002;</code>
       */
      public static final int CrossPlayerOff_VALUE = 900002;
      /**
       * <pre>
       *跨服信息	
       * </pre>
       *
       * <code>CrossInfo = 900003;</code>
       */
      public static final int CrossInfo_VALUE = 900003;
      /**
       * <pre>
       *跨服活动图标开启
       * </pre>
       *
       * <code>CrossActivityOpen = 900004;</code>
       */
      public static final int CrossActivityOpen_VALUE = 900004;
      /**
       * <pre>
       *战斗状太
       * </pre>
       *
       * <code>CrossFightStatus = 900005;</code>
       */
      public static final int CrossFightStatus_VALUE = 900005;
      /**
       * <pre>
       *修改人物
       * </pre>
       *
       * <code>CrossUpdataPlayer = 900006;</code>
       */
      public static final int CrossUpdataPlayer_VALUE = 900006;
      /**
       * <pre>
       *人物信息
       * </pre>
       *
       * <code>CrossPlayerInfo = 900007;</code>
       */
      public static final int CrossPlayerInfo_VALUE = 900007;
      /**
       * <pre>
       *邮件
       * </pre>
       *
       * <code>CrossEmail = 900008;</code>
       */
      public static final int CrossEmail_VALUE = 900008;
      /**
       * <pre>
       *状太
       * </pre>
       *
       * <code>CrossStatus = 900009;</code>
       */
      public static final int CrossStatus_VALUE = 900009;
      /**
       * <pre>
       *地图
       * </pre>
       *
       * <code>CrossServerMap = 900010;</code>
       */
      public static final int CrossServerMap_VALUE = 900010;
      /**
       * <pre>
       *地图移动
       * </pre>
       *
       * <code>CrossMapMove = 900011;</code>
       */
      public static final int CrossMapMove_VALUE = 900011;
      /**
       * <pre>
       *秘境追踪
       * </pre>
       *
       * <code>PlayerDiceDataREQ = 910001;</code>
       */
      public static final int PlayerDiceDataREQ_VALUE = 910001;
      /**
       * <pre>
       *返回秘境追踪页面
       * </pre>
       *
       * <code>PlayerDiceDataACK = 910002;</code>
       */
      public static final int PlayerDiceDataACK_VALUE = 910002;
      /**
       * <pre>
       *请求摇骰子
       * </pre>
       *
       * <code>PlayerRollTheDiceREQ = 910003;</code>
       */
      public static final int PlayerRollTheDiceREQ_VALUE = 910003;
      /**
       * <pre>
       *返回摇骰子的数字
       * </pre>
       *
       * <code>PlayerRollTheDiceACK = 910004;</code>
       */
      public static final int PlayerRollTheDiceACK_VALUE = 910004;
      /**
       * <pre>
       *返回玩家最终位置
       * </pre>
       *
       * <code>PlayerDiceSiteACK = 910005;</code>
       */
      public static final int PlayerDiceSiteACK_VALUE = 910005;
      /**
       * <pre>
       *返回玩家地图历史
       * </pre>
       *
       * <code>PlayerDiceHistoryACK = 910006;</code>
       */
      public static final int PlayerDiceHistoryACK_VALUE = 910006;
      /**
       * <pre>
       *挑战boss
       * </pre>
       *
       * <code>PlayerDiceChallengeBossREQ = 910007;</code>
       */
      public static final int PlayerDiceChallengeBossREQ_VALUE = 910007;
      /**
       * <pre>
       *节日拼图
       * </pre>
       *
       * <code>HolidayPuzzleDataREQ = 911001;</code>
       */
      public static final int HolidayPuzzleDataREQ_VALUE = 911001;
      /**
       * <pre>
       *返回节日拼图信息
       * </pre>
       *
       * <code>HolidayPuzzleDataACK = 911002;</code>
       */
      public static final int HolidayPuzzleDataACK_VALUE = 911002;
      /**
       * <pre>
       *领取节日拼图奖励
       * </pre>
       *
       * <code>HolidayPuzzleAcceptAwardREQ = 911003;</code>
       */
      public static final int HolidayPuzzleAcceptAwardREQ_VALUE = 911003;
      /**
       * <pre>
       *返回节日拼图奖励
       * </pre>
       *
       * <code>HolidayPuzzleAcceptAwardACK = 911004;</code>
       */
      public static final int HolidayPuzzleAcceptAwardACK_VALUE = 911004;
      /**
       * <pre>
       *请求节日抽宠、消费好礼，信息
       * </pre>
       *
       * <code>FestivalActiveInfoREQ = 911005;</code>
       */
      public static final int FestivalActiveInfoREQ_VALUE = 911005;
      /**
       * <pre>
       *返回节日抽宠、消费好礼，信息
       * </pre>
       *
       * <code>FestivalActiveInfoACK = 911006;</code>
       */
      public static final int FestivalActiveInfoACK_VALUE = 911006;
      /**
       * <pre>
       *节日抽宠请求
       * </pre>
       *
       * <code>DrawPetREQ = 911007;</code>
       */
      public static final int DrawPetREQ_VALUE = 911007;
      /**
       * <pre>
       *领取宝箱等礼包
       * </pre>
       *
       * <code>GetFestivalActiveRewardREQ = 911008;</code>
       */
      public static final int GetFestivalActiveRewardREQ_VALUE = 911008;
      /**
       * <pre>
       *请求完成节日拼图任务
       * </pre>
       *
       * <code>HolidayPuzzleAccomplishTaskREQ = 911009;</code>
       */
      public static final int HolidayPuzzleAccomplishTaskREQ_VALUE = 911009;
      /**
       * <pre>
       *返回完成节日拼图任务
       * </pre>
       *
       * <code>HolidayPuzzleAccomplishTaskACK = 911010;</code>
       */
      public static final int HolidayPuzzleAccomplishTaskACK_VALUE = 911010;
      /**
       * <pre>
       *请求节日限时礼包界面
       * </pre>
       *
       * <code>HolidayLimitGiftEnterREQ = 911011;</code>
       */
      public static final int HolidayLimitGiftEnterREQ_VALUE = 911011;
      /**
       * <pre>
       *返回节日限时礼包界面
       * </pre>
       *
       * <code>HolidayLimitGiftEnterACK = 911012;</code>
       */
      public static final int HolidayLimitGiftEnterACK_VALUE = 911012;
      /**
       * <pre>
       *请求购买节日限时礼包
       * </pre>
       *
       * <code>HolidayLimitGiftBuyREQ = 911013;</code>
       */
      public static final int HolidayLimitGiftBuyREQ_VALUE = 911013;
      /**
       * <pre>
       *返回购买节日限时礼包
       * </pre>
       *
       * <code>HolidayLimitGiftBuyACK = 911014;</code>
       */
      public static final int HolidayLimitGiftBuyACK_VALUE = 911014;
      /**
       * <pre>
       *异界副本
       * </pre>
       *
       * <code>AnotherWorldGetActREQ = 912001;</code>
       */
      public static final int AnotherWorldGetActREQ_VALUE = 912001;
      /**
       * <pre>
       *返回异界副本信息
       * </pre>
       *
       * <code>AnotherWorldGetActACK = 912002;</code>
       */
      public static final int AnotherWorldGetActACK_VALUE = 912002;
      /**
       * <pre>
       *请求异界副本战斗
       * </pre>
       *
       * <code>AnotherWorldChallengeREQ = 912003;</code>
       */
      public static final int AnotherWorldChallengeREQ_VALUE = 912003;
      /**
       * <pre>
       *返回异界副本战斗
       * </pre>
       *
       * <code>AnotherWorldChallengeACK = 912004;</code>
       */
      public static final int AnotherWorldChallengeACK_VALUE = 912004;
      /**
       * <pre>
       *请求异界副本商店购买
       * </pre>
       *
       * <code>AnotherWorldShopREQ = 912005;</code>
       */
      public static final int AnotherWorldShopREQ_VALUE = 912005;
      /**
       * <pre>
       *请求兑换虚空石
       * </pre>
       *
       * <code>ExchangeStoneREQ = 912006;</code>
       */
      public static final int ExchangeStoneREQ_VALUE = 912006;
      /**
       * <pre>
       *活动模块
       * </pre>
       *
       * <code>GetActivityAwardREQ = 920001;</code>
       */
      public static final int GetActivityAwardREQ_VALUE = 920001;
      /**
       * <pre>
       *客户端活动信息
       * </pre>
       *
       * <code>ActClinetInfoACK = 920002;</code>
       */
      public static final int ActClinetInfoACK_VALUE = 920002;
      /**
       * <pre>
       *请求领取奖励,只带次数
       * </pre>
       *
       * <code>GetActivityAward2REQ = 920003;</code>
       */
      public static final int GetActivityAward2REQ_VALUE = 920003;
      /**
       * <pre>
       *请求购买砸蛋次数
       * </pre>
       *
       * <code>SmashEggsTotalREQ = 920004;</code>
       */
      public static final int SmashEggsTotalREQ_VALUE = 920004;
      /**
       * <pre>
       *新活动菜单开启集合
       * </pre>
       *
       * <code>MenuTypeListACK = 920005;</code>
       */
      public static final int MenuTypeListACK_VALUE = 920005;
      /**
       * <pre>
       *请求获取活动信息
       * </pre>
       *
       * <code>ActivityInfoREQ = 920006;</code>
       */
      public static final int ActivityInfoREQ_VALUE = 920006;
      /**
       * <pre>
       *符文模块
       * </pre>
       *
       * <code>LoadRuneItemREQ = 921001;</code>
       */
      public static final int LoadRuneItemREQ_VALUE = 921001;
      /**
       * <pre>
       *卸载符文道具
       * </pre>
       *
       * <code>NnloadRuneItemREQ = 921002;</code>
       */
      public static final int NnloadRuneItemREQ_VALUE = 921002;
      /**
       * <pre>
       *请求查看英雄的符文道具
       * </pre>
       *
       * <code>HeroRuneItemInfoREQ = 921003;</code>
       */
      public static final int HeroRuneItemInfoREQ_VALUE = 921003;
      /**
       * <pre>
       *返回查看英雄的符文道具
       * </pre>
       *
       * <code>HeroRuneItemInfoACK = 921004;</code>
       */
      public static final int HeroRuneItemInfoACK_VALUE = 921004;
      /**
       * <pre>
       *出售符文道具
       * </pre>
       *
       * <code>SellRuneItemREQ = 921005;</code>
       */
      public static final int SellRuneItemREQ_VALUE = 921005;
      /**
       * <pre>
       *打开符文背包仓库
       * </pre>
       *
       * <code>OpenRuneStorageREQ = 921006;</code>
       */
      public static final int OpenRuneStorageREQ_VALUE = 921006;
      /**
       * <pre>
       *是否穿戴成功
       * </pre>
       *
       * <code>LoadRuneItemSucceedACK = 921007;</code>
       */
      public static final int LoadRuneItemSucceedACK_VALUE = 921007;
      /**
       * <pre>
       *请求切换符文套装
       * </pre>
       *
       * <code>SwitchRuneSuitREQ = 921008;</code>
       */
      public static final int SwitchRuneSuitREQ_VALUE = 921008;
      /**
       * <pre>
       *请求锁定符文(符文背包)
       * </pre>
       *
       * <code>LockRuneREQ = 921009;</code>
       */
      public static final int LockRuneREQ_VALUE = 921009;
      /**
       * <pre>
       *数值货币模块
       * </pre>
       *
       * <code>NumCurrencyACK = 922001;</code>
       */
      public static final int NumCurrencyACK_VALUE = 922001;
      /**
       * <pre>
       *挑战赛季塔
       * </pre>
       *
       * <code>FightSportsTowerREQ = 922004;</code>
       */
      public static final int FightSportsTowerREQ_VALUE = 922004;
      /**
       * <pre>
       *打开赛季塔跨服排行榜
       * </pre>
       *
       * <code>SportsTowerCrossRankREQ = 922005;</code>
       */
      public static final int SportsTowerCrossRankREQ_VALUE = 922005;
      /**
       * <pre>
       *响应赛季塔跨服排行榜
       * </pre>
       *
       * <code>SportsTowerCrossRankACK = 922006;</code>
       */
      public static final int SportsTowerCrossRankACK_VALUE = 922006;
      /**
       * <pre>
       *赛季塔前三名
       * </pre>
       *
       * <code>SportsTowerTop3ACK = 922007;</code>
       */
      public static final int SportsTowerTop3ACK_VALUE = 922007;
      /**
       * <pre>
       *使用光环
       * </pre>
       *
       * <code>UseHaloIdREQ = 922008;</code>
       */
      public static final int UseHaloIdREQ_VALUE = 922008;
      /**
       * <pre>
       *使用道具获得光环
       * </pre>
       *
       * <code>UseItemGetHaloREQ = 922009;</code>
       */
      public static final int UseItemGetHaloREQ_VALUE = 922009;
      /**
       * <pre>
       *返回光环协议
       * </pre>
       *
       * <code>HaloInfoACK = 922010;</code>
       */
      public static final int HaloInfoACK_VALUE = 922010;
      /**
       * <pre>
       *请求宠物基因罐
       * </pre>
       *
       * <code>HeroDndCanREQ = 922011;</code>
       */
      public static final int HeroDndCanREQ_VALUE = 922011;
      /**
       * <pre>
       *返回宠物基因罐
       * </pre>
       *
       * <code>HeroDndCanACK = 922012;</code>
       */
      public static final int HeroDndCanACK_VALUE = 922012;
      /**
       * <pre>
       *请求宠物基因改造
       * </pre>
       *
       * <code>HeroDndUpdateREQ = 922013;</code>
       */
      public static final int HeroDndUpdateREQ_VALUE = 922013;
      /**
       * <pre>
       *请求赛季塔英雄上阵
       * </pre>
       *
       * <code>SportsTowerHeroREQ = 922015;</code>
       */
      public static final int SportsTowerHeroREQ_VALUE = 922015;
      /**
       * <pre>
       *响应赛季塔英雄上阵
       * </pre>
       *
       * <code>SportsTowerHeroACK = 922016;</code>
       */
      public static final int SportsTowerHeroACK_VALUE = 922016;
      /**
       * <pre>
       *查看符合宠物基因改造
       * </pre>
       *
       * <code>LookHeroDndACK = 922014;</code>
       */
      public static final int LookHeroDndACK_VALUE = 922014;
      /**
       * <pre>
       *请求符合改造条件的宠物
       * </pre>
       *
       * <code>LookHeroDndREQ = 922017;</code>
       */
      public static final int LookHeroDndREQ_VALUE = 922017;
      /**
       * <pre>
       *请求符合宠物基因献祭的宠物
       * </pre>
       *
       * <code>LookHeroDndDissREQ = 922018;</code>
       */
      public static final int LookHeroDndDissREQ_VALUE = 922018;
      /**
       * <pre>
       *响应符合宠物基因献祭的宠物
       * </pre>
       *
       * <code>LookHeroDndDissACK = 922019;</code>
       */
      public static final int LookHeroDndDissACK_VALUE = 922019;
      /**
       * <pre>
       *请求宠物的基因详细信息
       * </pre>
       *
       * <code>HeroDndMapInfoREQ = 922020;</code>
       */
      public static final int HeroDndMapInfoREQ_VALUE = 922020;
      /**
       * <pre>
       *响应宠物的基因详细信息
       * </pre>
       *
       * <code>HeroDndMapInfoACK = 922021;</code>
       */
      public static final int HeroDndMapInfoACK_VALUE = 922021;
      /**
       * <pre>
       *请求查看宠物裸战力
       * </pre>
       *
       * <code>HeroNudePowerREQ = 922022;</code>
       */
      public static final int HeroNudePowerREQ_VALUE = 922022;
      /**
       * <pre>
       *响应查看宠物裸战力
       * </pre>
       *
       * <code>HeroNudePowerACK = 922023;</code>
       */
      public static final int HeroNudePowerACK_VALUE = 922023;
      /**
       * <pre>
       *宠物学习第二技能
       * </pre>
       *
       * <code>HeroStudySkillREQ = 922024;</code>
       */
      public static final int HeroStudySkillREQ_VALUE = 922024;
      /**
       * <pre>
       *请求精灵试炼天赋提升等级
       * </pre>
       *
       * <code>SportTrialTalentAddLvREQ = 922025;</code>
       */
      public static final int SportTrialTalentAddLvREQ_VALUE = 922025;
      /**
       * <pre>
       *请求精灵试炼天赋信息
       * </pre>
       *
       * <code>SportTrialTalentREQ = 922026;</code>
       */
      public static final int SportTrialTalentREQ_VALUE = 922026;
      /**
       * <pre>
       *响应精灵试炼天赋信息
       * </pre>
       *
       * <code>SportTrialTalentACK = 922027;</code>
       */
      public static final int SportTrialTalentACK_VALUE = 922027;
      /**
       * <pre>
       *精灵王天梯赛战斗
       * </pre>
       *
       * <code>ElfKingFightREQ = 922028;</code>
       */
      public static final int ElfKingFightREQ_VALUE = 922028;
      /**
       * <pre>
       *请求精灵试炼跨服排行榜
       * </pre>
       *
       * <code>ElfKingCrossRankREQ = 922029;</code>
       */
      public static final int ElfKingCrossRankREQ_VALUE = 922029;
      /**
       * <pre>
       *响应精灵试炼跨服排行榜
       * </pre>
       *
       * <code>ElfKingCrossRankACK = 922030;</code>
       */
      public static final int ElfKingCrossRankACK_VALUE = 922030;
      /**
       * <pre>
       *登录webg后台		
       * </pre>
       *
       * <code>GmWebLoginREQ = 990001;</code>
       */
      public static final int GmWebLoginREQ_VALUE = 990001;
      /**
       * <pre>
       *角色总数信息
       * </pre>
       *
       * <code>GmSendAllPlayerREQ = 990003;</code>
       */
      public static final int GmSendAllPlayerREQ_VALUE = 990003;
      /**
       * <pre>
       *查询角色信息
       * </pre>
       *
       * <code>GmSendPlayerInfoREQ = 990004;</code>
       */
      public static final int GmSendPlayerInfoREQ_VALUE = 990004;
      /**
       * <pre>
       *查在线人线
       * </pre>
       *
       * <code>GmSendAllZxREQ = 990005;</code>
       */
      public static final int GmSendAllZxREQ_VALUE = 990005;
      /**
       * <pre>
       *后台邮件
       * </pre>
       *
       * <code>GmSendEmailREQ = 990006;</code>
       */
      public static final int GmSendEmailREQ_VALUE = 990006;
      /**
       * <pre>
       *发布公告
       * </pre>
       *
       * <code>GmSendNoticeREQ = 990007;</code>
       */
      public static final int GmSendNoticeREQ_VALUE = 990007;
      /**
       * <pre>
       *禁言
       * </pre>
       *
       * <code>GmSendNoSpeakREQ = 990008;</code>
       */
      public static final int GmSendNoSpeakREQ_VALUE = 990008;
      /**
       * <pre>
       *解禁言
       * </pre>
       *
       * <code>GmSendSpeakREQ = 990009;</code>
       */
      public static final int GmSendSpeakREQ_VALUE = 990009;
      /**
       * <pre>
       *封|解账号
       * </pre>
       *
       * <code>GmSendForbidAccountREQ = 990010;</code>
       */
      public static final int GmSendForbidAccountREQ_VALUE = 990010;
      /**
       * <pre>
       *充值查询
       * </pre>
       *
       * <code>GmSendQueryRechargeREQ = 990011;</code>
       */
      public static final int GmSendQueryRechargeREQ_VALUE = 990011;
      /**
       * <pre>
       *T某位玩家下
       * </pre>
       *
       * <code>GmSendLogoutPlayerREQ = 990012;</code>
       */
      public static final int GmSendLogoutPlayerREQ_VALUE = 990012;
      /**
       * <pre>
       *T所有玩家下
       * </pre>
       *
       * <code>GmSendLogoutAllREQ = 990013;</code>
       */
      public static final int GmSendLogoutAllREQ_VALUE = 990013;
      /**
       * <pre>
       *测试充值
       * </pre>
       *
       * <code>GmSendRechargeREQ = 990014;</code>
       */
      public static final int GmSendRechargeREQ_VALUE = 990014;
      /**
       * <pre>
       *获取vip信息
       * </pre>
       *
       * <code>GmSendVipInfoREQ = 990015;</code>
       */
      public static final int GmSendVipInfoREQ_VALUE = 990015;
      /**
       * <pre>
       *获取后台数据
       * </pre>
       *
       * <code>GmSendDataREQ = 990016;</code>
       */
      public static final int GmSendDataREQ_VALUE = 990016;
      /**
       * <pre>
       *响应后台数据
       * </pre>
       *
       * <code>GmSendDataACK = 990017;</code>
       */
      public static final int GmSendDataACK_VALUE = 990017;
      /**
       * <pre>
       *响应VIP数据
       * </pre>
       *
       * <code>GmSendVipInfoACK = 990018;</code>
       */
      public static final int GmSendVipInfoACK_VALUE = 990018;
      /**
       * <pre>
       *获取抖音渠道
       * </pre>
       *
       * <code>GmDYChannelDataREQ = 990019;</code>
       */
      public static final int GmDYChannelDataREQ_VALUE = 990019;
      /**
       * <pre>
       *响应抖音渠道
       * </pre>
       *
       * <code>GmDYChannelDataACK = 990020;</code>
       */
      public static final int GmDYChannelDataACK_VALUE = 990020;
      /**
       * <pre>
       *游戏命令调用
       * </pre>
       *
       * <code>GmWebCmdREQ = 990021;</code>
       */
      public static final int GmWebCmdREQ_VALUE = 990021;
      /**
       * <pre>
       *获取快手渠道
       * </pre>
       *
       * <code>GmKuaishouDataREQ = 990022;</code>
       */
      public static final int GmKuaishouDataREQ_VALUE = 990022;
      /**
       * <pre>
       *后台服务器邮件列表请求
       * </pre>
       *
       * <code>GmServerEmailREQ = 990023;</code>
       */
      public static final int GmServerEmailREQ_VALUE = 990023;
      /**
       * <pre>
       *后台服务器邮件列表响应
       * </pre>
       *
       * <code>GmServerEmailACK = 990024;</code>
       */
      public static final int GmServerEmailACK_VALUE = 990024;
      /**
       * <pre>
       *删除服务器邮件
       * </pre>
       *
       * <code>GmDeleteServerEmailREQ = 990025;</code>
       */
      public static final int GmDeleteServerEmailREQ_VALUE = 990025;
      /**
       * <pre>
       *渠道数据监控
       * </pre>
       *
       * <code>GmChannelMonitorREQ = 990026;</code>
       */
      public static final int GmChannelMonitorREQ_VALUE = 990026;
      /**
       * <pre>
       *后台服务器公告列表请求
       * </pre>
       *
       * <code>GmServerNoticeREQ = 990027;</code>
       */
      public static final int GmServerNoticeREQ_VALUE = 990027;
      /**
       * <pre>
       *删除服务器公告
       * </pre>
       *
       * <code>GmDeleteServerNoticeREQ = 990028;</code>
       */
      public static final int GmDeleteServerNoticeREQ_VALUE = 990028;
      /**
       * <pre>
       *渠道gm账号数据
       * </pre>
       *
       * <code>GmOnlyChannelDataREQ = 990029;</code>
       */
      public static final int GmOnlyChannelDataREQ_VALUE = 990029;
      /**
       * <pre>
       *删除假玩家
       * </pre>
       *
       * <code>GmDeleteFakePlayerREQ = 990030;</code>
       */
      public static final int GmDeleteFakePlayerREQ_VALUE = 990030;
      /**
       * <pre>
       *所有渠道类型
       * </pre>
       *
       * <code>GmGetChannelTypeREQ = 990031;</code>
       */
      public static final int GmGetChannelTypeREQ_VALUE = 990031;
      /**
       * <pre>
       *所有渠道类型
       * </pre>
       *
       * <code>GmGetChannelTypeACK = 990032;</code>
       */
      public static final int GmGetChannelTypeACK_VALUE = 990032;
      /**
       * <pre>
       *游戏登录公告
       * </pre>
       *
       * <code>GmLoginNoticeREQ = 990033;</code>
       */
      public static final int GmLoginNoticeREQ_VALUE = 990033;
      /**
       * <pre>
       *游戏登录公告
       * </pre>
       *
       * <code>GmLoginNoticeACK = 990034;</code>
       */
      public static final int GmLoginNoticeACK_VALUE = 990034;
      /**
       * <pre>
       *IP基础数据查询
       * </pre>
       *
       * <code>GmBasisIPDataREQ = 990035;</code>
       */
      public static final int GmBasisIPDataREQ_VALUE = 990035;
      /**
       * <pre>
       *假停服维护 {"stopTime":开服时间戳,"openTime":停服时间戳}
       * </pre>
       *
       * <code>StopServerPreserveREQ = 990036;</code>
       */
      public static final int StopServerPreserveREQ_VALUE = 990036;
      /**
       * <pre>
       *英雄一键改造
       * </pre>
       *
       * <code>HeroOneKeyRemouldREQ = 990037;</code>
       */
      public static final int HeroOneKeyRemouldREQ_VALUE = 990037;
      /**
       * <pre>
       *场景资源信息
       * </pre>
       *
       * <code>SceneResourceACK = 990038;</code>
       */
      public static final int SceneResourceACK_VALUE = 990038;
      /**
       * <pre>
       *请求资源占领
       * </pre>
       *
       * <code>SceneResourceHoldREQ = 990039;</code>
       */
      public static final int SceneResourceHoldREQ_VALUE = 990039;
      /**
       * <pre>
       *请求资源占领活动信息
       * </pre>
       *
       * <code>OpenResourceSnatchREQ = 990040;</code>
       */
      public static final int OpenResourceSnatchREQ_VALUE = 990040;
      /**
       * <pre>
       *响应资源占领活动信息
       * </pre>
       *
       * <code>OpenResourceSnatchACK = 990041;</code>
       */
      public static final int OpenResourceSnatchACK_VALUE = 990041;
      /**
       * <pre>
       *领取资源争夺战奖励
       * </pre>
       *
       * <code>ResourceSnatchRwardREQ = 990042;</code>
       */
      public static final int ResourceSnatchRwardREQ_VALUE = 990042;
      /**
       * <pre>
       *请求英雄上阵信息
       * </pre>
       *
       * <code>ResourceSnatchHeroREQ = 990043;</code>
       */
      public static final int ResourceSnatchHeroREQ_VALUE = 990043;
      /**
       * <pre>
       *响应英雄上阵信息
       * </pre>
       *
       * <code>ResourceSnatchHeroACK = 990044;</code>
       */
      public static final int ResourceSnatchHeroACK_VALUE = 990044;
      /**
       * <pre>
       *进入预言塔场景
       * </pre>
       *
       * <code>EnterPredictedTowerREQ = 990045;</code>
       */
      public static final int EnterPredictedTowerREQ_VALUE = 990045;
      /**
       * <pre>
       *响应预言塔场景
       * </pre>
       *
       * <code>EnterPredictedTowerACK = 990046;</code>
       */
      public static final int EnterPredictedTowerACK_VALUE = 990046;
      /**
       * <pre>
       *请求预言塔战斗
       * </pre>
       *
       * <code>PredictedTowerFightREQ = 990047;</code>
       */
      public static final int PredictedTowerFightREQ_VALUE = 990047;
      /**
       * <pre>
       *请求退出预言塔,踢到渔村
       * </pre>
       *
       * <code>PredictedTowerExitREQ = 990048;</code>
       */
      public static final int PredictedTowerExitREQ_VALUE = 990048;
      /**
       * <pre>
       *请求预言塔排行榜
       * </pre>
       *
       * <code>PredictedTowerRankREQ = 990049;</code>
       */
      public static final int PredictedTowerRankREQ_VALUE = 990049;
      /**
       * <pre>
       *响应预言塔排行榜
       * </pre>
       *
       * <code>PredictedTowerRankACK = 990050;</code>
       */
      public static final int PredictedTowerRankACK_VALUE = 990050;
      /**
       * <pre>
       *预言塔商城购买
       * </pre>
       *
       * <code>PredictedTowerShopREQ = 990051;</code>
       */
      public static final int PredictedTowerShopREQ_VALUE = 990051;
      /**
       * <pre>
       *预言塔退出
       * </pre>
       *
       * <code>PredictedTowerExitACK = 990052;</code>
       */
      public static final int PredictedTowerExitACK_VALUE = 990052;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static MessageID valueOf(int value) {
        return forNumber(value);
      }

      public static MessageID forNumber(int value) {
        switch (value) {
          case 0: return ZeroTest;
          case 1001: return FolatMsg;
          case 1002: return AlertMsg;
          case 1003: return HeartREQ;
          case 1004: return HeartACK;
          case 1005: return ExceptionREQ;
          case 1006: return ExceptionACK;
          case 1007: return StopServerNoticeACK;
          case 1008: return InitSocket;
          case 1009: return GetVInfo;
          case 2000: return ClientTestLogREQ;
          case 2001: return LoginAccountREQ;
          case 2002: return LoginAccountACK;
          case 2003: return CreateAccountREQ;
          case 2004: return CreateAccountACK;
          case 2005: return GetAccountCoedREQ;
          case 2006: return GetPageServerConfigREQ;
          case 2007: return QxCreateAccountREQ;
          case 2008: return AntiAddictionREQ;
          case 2009: return AgainVerifyAntiAddictionREQ;
          case 3001: return LoginGameREQ;
          case 3002: return LoginGameACK;
          case 3003: return RandomCreateNickNameREQ;
          case 100004: return CreatePlayerREQ;
          case 100005: return CreatePlayerACK;
          case 100001: return LoginPlayerREQ;
          case 100002: return LoginPlayerACK;
          case 100003: return PlayerLoginOut;
          case 100006: return FormationInfoACK;
          case 100007: return HeroAttaributeACK;
          case 100008: return HeroUpdateActionACK;
          case 100009: return ShowOtherPlayer;
          case 100010: return HeroAttaributeREQ;
          case 100011: return FormationUpdateREQ;
          case 100012: return UpdatePlayerACK;
          case 100013: return GmCmdREQ;
          case 100014: return DelHeroREQ;
          case 100015: return GrowPointDesREQ;
          case 100016: return GrowPointDesACK;
          case 100017: return StamtnaBuyREQ;
          case 100018: return StamtnaBuyACK;
          case 100019: return DismissHeroRebateItemREQ;
          case 100020: return DismissHeroRebateItemACK;
          case 100021: return InitPlayerFinishACK;
          case 100037: return ShieldOtherPlayerREQ;
          case 100038: return ShieldOtherPlayerACK;
          case 100039: return ShieldRidingPetSkillREQ;
          case 100040: return PaySuccACK;
          case 100041: return FightExpediteREQ;
          case 100042: return FightExpediteACK;
          case 110001: return AllItemInfosACK;
          case 110002: return EquipClothingREQ;
          case 110003: return UnEquipClothingREQ;
          case 110004: return AutoEquipClothingREQ;
          case 110005: return UnAllEquipClothingREQ;
          case 110006: return ItemInfoUpdateACK;
          case 110007: return ItemAdminInfoACK;
          case 110008: return ItemDropREQ;
          case 110009: return ItemUseREQ;
          case 110010: return ItemMergeREQ;
          case 110011: return ItemSplitREQ;
          case 110012: return ItemOpenREQ;
          case 110013: return ItemUpdateGirdACK;
          case 110014: return ItemShareLookREQ;
          case 110015: return ItemShareLookACK;
          case 110016: return ItemSellREQ;
          case 110017: return ItemHeroACK;
          case 110019: return ItemHecengREQ;
          case 110020: return ItemClearREQ;
          case 120001: return SkillInfosACK;
          case 120002: return StudySkillREQ;
          case 120003: return FixSkillREQ;
          case 120004: return SwitchoverSkillREQ;
          case 120005: return EnableSubjoinSkillREQ;
          case 120006: return EnableSubjoinSkillACK;
          case 130001: return TaskInitACK;
          case 130002: return TaskGuideREQ;
          case 130003: return TaskAcceptREQ;
          case 130004: return TaskGiveREQ;
          case 130005: return TaskComPleteREQ;
          case 130006: return TaskTalkREQ;
          case 130007: return TaskCollectREQ;
          case 130008: return TaskUpdataACK;
          case 130009: return TaskStepREQ;
          case 130010: return TaskResetREQ;
          case 130011: return FreshCollectTaskREQ;
          case 140001: return FriendListACK;
          case 140002: return AddFriendREQ;
          case 140003: return AddBlackREQ;
          case 140004: return DelFriendREQ;
          case 140005: return SwitchFriendREQ;
          case 140006: return FriendInfoREQ;
          case 140007: return FriendSignitureREQ;
          case 140008: return FriendPrivateREQ;
          case 140009: return FriendListREQ;
          case 140010: return FriendInfoUpdateACK;
          case 140011: return FriendPrivateACK;
          case 140012: return FriendGetInfoREQ;
          case 140013: return FriendGetInfoACK;
          case 140014: return FriendOnlineACK;
          case 140015: return FriendAttentionACK;
          case 140016: return FriendBlessInfoACK;
          case 140017: return FriendBlessInfosACK;
          case 140018: return FriendTrendUpdateACK;
          case 140019: return FriendCongratUpateACK;
          case 140020: return FriendCongratACK;
          case 140021: return FriendTrendDeleteACK;
          case 140022: return DoubleFriendACK;
          case 150001: return MenuInfoACK;
          case 150002: return ActivityOpenACK;
          case 150003: return LeveMenuInfoACK;
          case 150004: return OpenMenuWinACK;
          case 150005: return MenuBlinkACK;
          case 150006: return MenuRedDotUpdateREQ;
          case 160002: return CreateTeamREQ;
          case 160003: return EnterTeamREQ;
          case 160004: return LeaveTeamREQ;
          case 160005: return TeamInfoACK;
          case 160006: return LeaveTeamACK;
          case 160007: return TeamRransferCaptainREQ;
          case 160008: return TeamRransferCaptainACK;
          case 160009: return TeamKickREQ;
          case 160010: return TeamKickACK;
          case 160011: return TeamListInforREQ;
          case 160012: return TeamListInforACK;
          case 160013: return DisbandTeamREQ;
          case 160014: return DisbandTeamACK;
          case 160015: return TeamMemberFightPowerSyncACK;
          case 160016: return AdjustTeamMentorSiteREQ;
          case 160017: return UpdateTeamFightSpeedREQ;
          case 160018: return UpdateTeamFightSpeedACK;
          case 161001: return JointoTeamFbREQ;
          case 161002: return TeamFbFightREQ;
          case 161003: return TeamFbExitREQ;
          case 161004: return TeamFbBuyREQ;
          case 161005: return TeamFbSceneInfoACK;
          case 161006: return OpenTeamFbREQ;
          case 161007: return TeamFbInfoACK;
          case 161008: return TeamFbCleanInfoREQ;
          case 161009: return SweepTeamFbREQ;
          case 161010: return TeamDeputyCleanFightInfoACK;
          case 161011: return TeamDeputyCleanStateACK;
          case 170001: return EmailStatusACK;
          case 170002: return EmailInfosREQ;
          case 170003: return EmailInfosACK;
          case 170004: return EmailSendREQ;
          case 170005: return EmailOneInfoACK;
          case 170006: return EmailDeleteREQ;
          case 170007: return EmailReadREQ;
          case 170008: return EmailGetAttachedREQ;
          case 180001: return GetRankPageREQ;
          case 180002: return GetRankSelfREQ;
          case 180003: return GetRankSelfACK;
          case 180004: return GetRankPageACK;
          case 190001: return JewelInsertREQ;
          case 190002: return JewelTakeoffREQ;
          case 190003: return EquipJewelUpREQ;
          case 190004: return EquipJewelAllUpREQ;
          case 190005: return JewelDownREQ;
          case 190006: return JeweUpREQ;
          case 190007: return JewelUpACK;
          case 190008: return JewelDownACK;
          case 190009: return EquipJewelUpACK;
          case 190010: return JewelUpdageACK;
          case 190011: return EquipUpgradeREQ;
          case 190012: return EquipUpgradeManyREQ;
          case 190013: return EquipUpgradeAllREQ;
          case 190014: return EquipForgeREQ;
          case 190016: return EquipUpgradeACK;
          case 190017: return EquipForageACK;
          case 200001: return ChatInfoACK;
          case 200002: return ChatNoticeACK;
          case 200003: return ChatInfoREQ;
          case 201001: return OpenGuildREQ;
          case 201002: return CreateGuildREQ;
          case 201003: return ApllyGuildREQ;
          case 201004: return CheckGuildREQ;
          case 201005: return InviteGuildREQ;
          case 201006: return SendInviteGuildREQ;
          case 201007: return AppointGuildREQ;
          case 201008: return AbdicateGuildREQ;
          case 201009: return KickGuildREQ;
          case 201010: return ExitGuildREQ;
          case 201011: return UpGuildREQ;
          case 201012: return FuLiGuildREQ;
          case 201015: return BuyItemGuildREQ;
          case 201017: return EventGuildREQ;
          case 201018: return OtherInfoGuildREQ;
          case 201019: return SaveNoticeGuildREQ;
          case 201020: return DonateGuildREQ;
          case 201021: return ExitGuildACK;
          case 201022: return GuildInfoACK;
          case 201023: return InviteGuildACK;
          case 201024: return ApplyInviteGuildACK;
          case 201025: return BundInfoGuildACK;
          case 201026: return ShopInfoGuildACK;
          case 201028: return LevelInfoGuildACK;
          case 201101: return GuildFarmEnterREQ;
          case 201102: return GuildFarmEnterACK;
          case 201103: return GuildFarmPlantREQ;
          case 201104: return GuildFarmWorkREQ;
          case 201105: return GuildFarmEradicateREQ;
          case 201106: return GuildFarmPickVegetableREQ;
          case 201107: return GuildFarmPlayerDataREQ;
          case 201108: return GuildFarmPlayerDataACK;
          case 201109: return GuildFarmExpandLandREQ;
          case 202001: return BuyMallREQ;
          case 202002: return PayInfoListREQ;
          case 202003: return PayInfoListACK;
          case 202004: return WxPayREQ;
          case 202005: return WxPayACK;
          case 202006: return BuyActiveMallREQ;
          case 202007: return QxPayREQ;
          case 202008: return QxPayACK;
          case 202009: return QxPayWeb;
          case 202010: return ZfbPayREQ;
          case 202011: return SDKPayREQ;
          case 202012: return SDKPayACK;
          case 202013: return SDKPaySucREQ;
          case 202014: return SDKPaySucACK;
          case 203001: return ActiveGiftACK;
          case 203002: return GetGiftREQ;
          case 203003: return GetOnLineGiftInfosREQ;
          case 203004: return GetOnLineGiftInfosACK;
          case 203005: return GetOnLineGiftAwardREQ;
          case 203012: return SignOpenREQ;
          case 203013: return SignInREQ;
          case 203014: return SignPatchREQ;
          case 203015: return GetSignGifREQ;
          case 203016: return SignOpenACK;
          case 203017: return SignDaysLotteryREQ;
          case 203018: return GetSignDaysLotteryREQ;
          case 203019: return GetSignDaysLotteryACK;
          case 203020: return SignDaysLotteryACK;
          case 203021: return MySignDaysLotteryACK;
          case 203022: return ExchanCopperREQ;
          case 203023: return ExchanCopperACK;
          case 203024: return JihuomaInfoREQ;
          case 203025: return GetJihuomaInfoREQ;
          case 203026: return JihuomaInfoACK;
          case 203027: return GetJihuomaInfoACK;
          case 203028: return GetBindPhoneGiftInfoREQ;
          case 203029: return GetBindPhoneGiftInfoACK;
          case 203030: return DownFinishGiftInfoREQ;
          case 203501: return OpenServerActiveInfoREQ;
          case 203502: return OpenServerActiveInfoACK;
          case 203503: return OpenServerActiveInvestREQ;
          case 203504: return GetOpenServerActiveRewardREQ;
          case 203505: return OpenActiveBuyGiftREQ;
          case 203601: return RechargeActiveInfoREQ;
          case 203602: return RechargeActiveInfoACK;
          case 203603: return GetRechargeActiveRewardREQ;
          case 203604: return SmashEggsREQ;
          case 203605: return SmashEggsACK;
          case 203606: return SubmitRaisePetREQ;
          case 203607: return RaisePetACK;
          case 203608: return BuySmashEggsCountREQ;
          case 203609: return RechargeActiveMenuREQ;
          case 203610: return RechargeActiveMenuACK;
          case 203611: return MonthCardInfoREQ;
          case 203612: return MonthCardInfoACK;
          case 203613: return GetMonthCardDayGoldREQ;
          case 204001: return EnterBossMapREQ;
          case 204002: return ExitBossMapREQ;
          case 204003: return AttackBossREQ;
          case 204004: return BossClearCdREQ;
          case 204005: return BossEncouRageREQ;
          case 204006: return BossReviveREQ;
          case 204007: return BossMapInfoACK;
          case 204008: return WorldBossInfoACK;
          case 204009: return WorldBossPlayerDieInfoACK;
          case 204010: return EnterBossMapACK;
          case 204101: return OpenBossInvasionREQ;
          case 204102: return OpenBossInvasionACK;
          case 204103: return ExitBossInvasionREQ;
          case 204104: return AttackBossInvasionREQ;
          case 204105: return BossInvasionUpdateBossACK;
          case 204106: return BossInvasionUpdateSkillNumACK;
          case 205001: return QxzbJoinREQ;
          case 205002: return QxzbKcREQ;
          case 205003: return QxzbRankREQ;
          case 205004: return QxzbJoinACK;
          case 205005: return QxzbRankACK;
          case 205006: return KfQxzbJoinREQ;
          case 205007: return KfQxzbKcREQ;
          case 205008: return KfQxzbRankREQ;
          case 205009: return KfQxzbJoinACK;
          case 205010: return KfQxzbRankACK;
          case 206001: return VipGiftREQ;
          case 206002: return VipDailyGiftREQ;
          case 206003: return VipFunctionREQ;
          case 206004: return VipInfoACK;
          case 206005: return VipFunctionACK;
          case 206006: return VipGiftInfoACK;
          case 207001: return EnterCampFightREQ;
          case 207002: return ExitCampFightREQ;
          case 207003: return AttackGuardCampFightREQ;
          case 207004: return AttackPvpCampFightREQ;
          case 207005: return CollectCampFightREQ;
          case 207006: return CollectHandinCampFightREQ;
          case 207007: return CampGuardsACK;
          case 207008: return CampFightCdACK;
          case 207009: return CampFightMemberACK;
          case 207010: return CampFightMyPlayerACK;
          case 207011: return CampFightRankACK;
          case 207012: return CampFightRankUpdateACK;
          case 207013: return CampFightStateACK;
          case 207014: return CampFightEndACK;
          case 300001: return EnterFightACK;
          case 300002: return EnterFightREQ;
          case 300003: return HeroFightREQ;
          case 300004: return FightReportACK;
          case 300010: return OtherPkFightREQ;
          case 300011: return OtherPkFightACK;
          case 300012: return AddFightingInfoACK;
          case 300013: return FightCombatREQ;
          case 301001: return ArenaEnterREQ;
          case 301002: return ArenaExitREQ;
          case 301003: return ArenaChangeREQ;
          case 301004: return ArenaBuyChangeREQ;
          case 301005: return ArenaCleanCdREQ;
          case 301006: return ArenaFightReportREQ;
          case 301007: return ArenaShareReportREQ;
          case 301008: return ArenaLookShareReportREQ;
          case 301009: return ArenaOpenBoxREQ;
          case 301010: return ArenaRankInfoACK;
          case 301011: return ArenaDailyInfoACK;
          case 301012: return ArenaOpenBoxACK;
          case 301013: return ArenaCdACK;
          case 500001: return EnterMapACK;
          case 500002: return SwitchMapREQ;
          case 500003: return MapMove;
          case 500004: return PlayerLeaveMap;
          case 500005: return SwitchWorldREQ;
          case 500012: return ScenePlayerInfo;
          case 500013: return ScenePlayerUpdataACK;
          case 500014: return MapAutochthonous;
          case 500015: return QuickMoveACK;
          case 500016: return MapOtherMove;
          case 500017: return UpdateSceneMonsterInfoACK;
          case 500018: return MapPlayerActionREQ;
          case 500019: return MapPlayerActionACK;
          case 500020: return UpdateSceneMonstersACK;
          case 500021: return OnMyMapMove;
          case 500022: return FireWorksACK;
          case 510001: return ActivityOpenREQ;
          case 510002: return ActivityInfoACK;
          case 510003: return AssistantRewardREQ;
          case 510004: return ActivityInfoUpdateACK;
          case 511001: return AchievementOpenREQ;
          case 511002: return AchievementInfoACK;
          case 511003: return AchievementRewardREQ;
          case 511004: return AchievementInfoUpdateACK;
          case 520001: return DeputyGroupInfoREQ;
          case 520002: return DeputyEnterREQ;
          case 520003: return DeputyClickMonsterREQ;
          case 520004: return DeputyExitREQ;
          case 520005: return DeputyInfoREQ;
          case 520006: return DeputyCleanInfoREQ;
          case 520007: return DeputyCleanStartREQ;
          case 520008: return DeputyCleanCloseREQ;
          case 520009: return DeputyCleanAutoSellREQ;
          case 520010: return DeputyCleanCancelREQ;
          case 520011: return DeputyCleanGoldSpeedREQ;
          case 520012: return DeputyCleanGoldSpeedCheckREQ;
          case 520013: return DeputyInfoACK;
          case 520014: return DeputyCleanInfoACK;
          case 520015: return DeputyEnterACK;
          case 520016: return DeputyMonsterStateACK;
          case 520017: return DeputyBossInfoACK;
          case 520018: return DeputyStateInfoACK;
          case 520019: return DeputyGroupInfoACK;
          case 520020: return DeputyCleanStateACK;
          case 520021: return DeputyCleanFightInfoACK;
          case 521001: return EmigratedInfoREQ;
          case 521002: return EmigratedInfoACK;
          case 521003: return EnterEmigratedREQ;
          case 521004: return EmigrateClickMonsterREQ;
          case 521005: return EmigrateExitREQ;
          case 521006: return EnterEmigratedACK;
          case 521007: return EmigrateResetREQ;
          case 521008: return EmigrateBuyResetREQ;
          case 522001: return OpenDieTowerREQ;
          case 522002: return OpenDieTowerACK;
          case 522003: return DieTowerFightREQ;
          case 522004: return DieTowerResetREQ;
          case 522005: return DieTowerBuyResetREQ;
          case 522006: return DieTowerRankREQ;
          case 522007: return DieTowerRankACK;
          case 522008: return DieTowerRewardACK;
          case 522009: return DieTowerAutoFightREQ;
          case 522010: return DieTowerAutoFightACK;
          case 522011: return DieTowerComAutoREQ;
          case 522012: return DieTowerComAutoACK;
          case 530001: return HeroPubInfoREQ;
          case 530002: return HeroPubLotteryREQ;
          case 530003: return HeroPubRecruitREQ;
          case 530004: return HeroPubInfoACK;
          case 530005: return HeroPubLotteryACK;
          case 530006: return HeroPubUpZoariumSkillREQ;
          case 530007: return HeroPubUpZoariumSkillACK;
          case 530008: return HeroPubRecruitACK;
          case 530009: return HeroZsREQ;
          case 530010: return HeroZsACK;
          case 530011: return HeroTpREQ;
          case 530012: return HeroTpACK;
          case 530013: return HeroGzREQ;
          case 530014: return HeroGzACK;
          case 530015: return HeroHlREQ;
          case 530016: return HeroHlACK;
          case 530017: return GetHeroTpInfoREQ;
          case 530018: return GetHeroTpInfoACK;
          case 530019: return GetHeroGzInfoREQ;
          case 530020: return GetHeroGzInfoACK;
          case 530021: return HeroSaveGzREQ;
          case 530022: return HeroSaveGzACK;
          case 530023: return HeroFollowREQ;
          case 530024: return HeroPlayerZsREQ;
          case 530025: return HeroPlayerZsACK;
          case 530026: return HeroExpREQ;
          case 530027: return HeroExpACK;
          case 530028: return HeroChangeNameREQ;
          case 530029: return HeroChangeNameACK;
          case 530030: return HeroRestraintREQ;
          case 530031: return GetHeroXlInfoREQ;
          case 530033: return GetHeroXlInfoACK;
          case 530034: return HeroXlREQ;
          case 530035: return HeroSaveXlREQ;
          case 530036: return HeroAwakeningREQ;
          case 530037: return HeroAwakeningACK;
          case 530038: return HeroLockREQ;
          case 530039: return GetOfferingInfoREQ;
          case 530040: return OfferingInfoACK;
          case 530041: return SummonSixCarPetREQ;
          case 530042: return SkillAdvanceEQ;
          case 540001: return GradeFrightInfoREQ;
          case 540002: return GradeFrightInfoACK;
          case 550001: return OpenTitleREQ;
          case 550002: return UseTitleREQ;
          case 550003: return PutTitleREQ;
          case 550004: return UpTitleREQ;
          case 550005: return AllTitleInfoACK;
          case 560001: return OpenHuntREQ;
          case 560002: return OpenHuntACK;
          case 560003: return EquipHuntREQ;
          case 560004: return UnHuntREQ;
          case 560005: return UpgradeHuntREQ;
          case 560006: return UpHuntREQ;
          case 560007: return DownHuntREQ;
          case 560008: return DoHuntREQ;
          case 560009: return ExchangeHuntREQ;
          case 560010: return SwallowHuntREQ;
          case 560011: return OpenGridHuntREQ;
          case 560012: return PickUpHuntREQ;
          case 561001: return OpenCharacterREQ;
          case 561002: return OpenCharacterACK;
          case 561003: return SummonCharacterREQ;
          case 561004: return SummonCharacterACK;
          case 561005: return ChooseCharacterREQ;
          case 561006: return ChooseCharacterACK;
          case 561007: return SwallowDanCharacterREQ;
          case 561008: return SwallowDanCharacterACK;
          case 561009: return UnloadCharacterREQ;
          case 561010: return UnloadCharacterACK;
          case 561011: return HeroCharactersREQ;
          case 561012: return HeroCharactersACK;
          case 561013: return EquipCharacterREQ;
          case 561014: return EquipCharacterACK;
          case 561015: return CharacterLockREQ;
          case 562001: return SkinInfoREQ;
          case 562002: return SkinInfoACK;
          case 562003: return UseOrNoUseSkinREQ;
          case 562004: return GetElfInfoREQ;
          case 562005: return GetElfInfoACK;
          case 562006: return ToFightElfREQ;
          case 562007: return FeedElfREQ;
          case 600001: return ZoosFightEnterREQ;
          case 600002: return ZoosFightEnterACK;
          case 700001: return GrangeRankREQ;
          case 700002: return GrangeRankACK;
          case 700003: return GrangeShopREQ;
          case 700004: return GrangeBossHPACK;
          case 700005: return GrangeFightREQ;
          case 700006: return GrangeScoreACK;
          case 700007: return GrangeShopInfoREQ;
          case 700008: return GrangeShopInfoACK;
          case 900001: return CrossLogin;
          case 900002: return CrossPlayerOff;
          case 900003: return CrossInfo;
          case 900004: return CrossActivityOpen;
          case 900005: return CrossFightStatus;
          case 900006: return CrossUpdataPlayer;
          case 900007: return CrossPlayerInfo;
          case 900008: return CrossEmail;
          case 900009: return CrossStatus;
          case 900010: return CrossServerMap;
          case 900011: return CrossMapMove;
          case 910001: return PlayerDiceDataREQ;
          case 910002: return PlayerDiceDataACK;
          case 910003: return PlayerRollTheDiceREQ;
          case 910004: return PlayerRollTheDiceACK;
          case 910005: return PlayerDiceSiteACK;
          case 910006: return PlayerDiceHistoryACK;
          case 910007: return PlayerDiceChallengeBossREQ;
          case 911001: return HolidayPuzzleDataREQ;
          case 911002: return HolidayPuzzleDataACK;
          case 911003: return HolidayPuzzleAcceptAwardREQ;
          case 911004: return HolidayPuzzleAcceptAwardACK;
          case 911005: return FestivalActiveInfoREQ;
          case 911006: return FestivalActiveInfoACK;
          case 911007: return DrawPetREQ;
          case 911008: return GetFestivalActiveRewardREQ;
          case 911009: return HolidayPuzzleAccomplishTaskREQ;
          case 911010: return HolidayPuzzleAccomplishTaskACK;
          case 911011: return HolidayLimitGiftEnterREQ;
          case 911012: return HolidayLimitGiftEnterACK;
          case 911013: return HolidayLimitGiftBuyREQ;
          case 911014: return HolidayLimitGiftBuyACK;
          case 912001: return AnotherWorldGetActREQ;
          case 912002: return AnotherWorldGetActACK;
          case 912003: return AnotherWorldChallengeREQ;
          case 912004: return AnotherWorldChallengeACK;
          case 912005: return AnotherWorldShopREQ;
          case 912006: return ExchangeStoneREQ;
          case 920001: return GetActivityAwardREQ;
          case 920002: return ActClinetInfoACK;
          case 920003: return GetActivityAward2REQ;
          case 920004: return SmashEggsTotalREQ;
          case 920005: return MenuTypeListACK;
          case 920006: return ActivityInfoREQ;
          case 921001: return LoadRuneItemREQ;
          case 921002: return NnloadRuneItemREQ;
          case 921003: return HeroRuneItemInfoREQ;
          case 921004: return HeroRuneItemInfoACK;
          case 921005: return SellRuneItemREQ;
          case 921006: return OpenRuneStorageREQ;
          case 921007: return LoadRuneItemSucceedACK;
          case 921008: return SwitchRuneSuitREQ;
          case 921009: return LockRuneREQ;
          case 922001: return NumCurrencyACK;
          case 922004: return FightSportsTowerREQ;
          case 922005: return SportsTowerCrossRankREQ;
          case 922006: return SportsTowerCrossRankACK;
          case 922007: return SportsTowerTop3ACK;
          case 922008: return UseHaloIdREQ;
          case 922009: return UseItemGetHaloREQ;
          case 922010: return HaloInfoACK;
          case 922011: return HeroDndCanREQ;
          case 922012: return HeroDndCanACK;
          case 922013: return HeroDndUpdateREQ;
          case 922015: return SportsTowerHeroREQ;
          case 922016: return SportsTowerHeroACK;
          case 922014: return LookHeroDndACK;
          case 922017: return LookHeroDndREQ;
          case 922018: return LookHeroDndDissREQ;
          case 922019: return LookHeroDndDissACK;
          case 922020: return HeroDndMapInfoREQ;
          case 922021: return HeroDndMapInfoACK;
          case 922022: return HeroNudePowerREQ;
          case 922023: return HeroNudePowerACK;
          case 922024: return HeroStudySkillREQ;
          case 922025: return SportTrialTalentAddLvREQ;
          case 922026: return SportTrialTalentREQ;
          case 922027: return SportTrialTalentACK;
          case 922028: return ElfKingFightREQ;
          case 922029: return ElfKingCrossRankREQ;
          case 922030: return ElfKingCrossRankACK;
          case 990001: return GmWebLoginREQ;
          case 990003: return GmSendAllPlayerREQ;
          case 990004: return GmSendPlayerInfoREQ;
          case 990005: return GmSendAllZxREQ;
          case 990006: return GmSendEmailREQ;
          case 990007: return GmSendNoticeREQ;
          case 990008: return GmSendNoSpeakREQ;
          case 990009: return GmSendSpeakREQ;
          case 990010: return GmSendForbidAccountREQ;
          case 990011: return GmSendQueryRechargeREQ;
          case 990012: return GmSendLogoutPlayerREQ;
          case 990013: return GmSendLogoutAllREQ;
          case 990014: return GmSendRechargeREQ;
          case 990015: return GmSendVipInfoREQ;
          case 990016: return GmSendDataREQ;
          case 990017: return GmSendDataACK;
          case 990018: return GmSendVipInfoACK;
          case 990019: return GmDYChannelDataREQ;
          case 990020: return GmDYChannelDataACK;
          case 990021: return GmWebCmdREQ;
          case 990022: return GmKuaishouDataREQ;
          case 990023: return GmServerEmailREQ;
          case 990024: return GmServerEmailACK;
          case 990025: return GmDeleteServerEmailREQ;
          case 990026: return GmChannelMonitorREQ;
          case 990027: return GmServerNoticeREQ;
          case 990028: return GmDeleteServerNoticeREQ;
          case 990029: return GmOnlyChannelDataREQ;
          case 990030: return GmDeleteFakePlayerREQ;
          case 990031: return GmGetChannelTypeREQ;
          case 990032: return GmGetChannelTypeACK;
          case 990033: return GmLoginNoticeREQ;
          case 990034: return GmLoginNoticeACK;
          case 990035: return GmBasisIPDataREQ;
          case 990036: return StopServerPreserveREQ;
          case 990037: return HeroOneKeyRemouldREQ;
          case 990038: return SceneResourceACK;
          case 990039: return SceneResourceHoldREQ;
          case 990040: return OpenResourceSnatchREQ;
          case 990041: return OpenResourceSnatchACK;
          case 990042: return ResourceSnatchRwardREQ;
          case 990043: return ResourceSnatchHeroREQ;
          case 990044: return ResourceSnatchHeroACK;
          case 990045: return EnterPredictedTowerREQ;
          case 990046: return EnterPredictedTowerACK;
          case 990047: return PredictedTowerFightREQ;
          case 990048: return PredictedTowerExitREQ;
          case 990049: return PredictedTowerRankREQ;
          case 990050: return PredictedTowerRankACK;
          case 990051: return PredictedTowerShopREQ;
          case 990052: return PredictedTowerExitACK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageID>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MessageID> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageID>() {
              public MessageID findValueByNumber(int number) {
                return MessageID.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MessageEnum.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageID[] VALUES = values();

      public static MessageID valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MessageID(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.protos.message.MessageEnum.MessageID)
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MessageEnum)) {
        return super.equals(obj);
      }
      MessageEnum other = (MessageEnum) obj;

      boolean result = true;
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MessageEnum parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageEnum parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageEnum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageEnum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageEnum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageEnum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageEnum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageEnum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageEnum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MessageEnum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageEnum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageEnum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MessageEnum prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.protos.message.MessageEnum}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.protos.message.MessageEnum)
        MessageEnumOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Message.internal_static_com_protos_message_MessageEnum_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Message.internal_static_com_protos_message_MessageEnum_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MessageEnum.class, Builder.class);
      }

      // Construct using com.protos.message.Message.MessageEnum.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Message.internal_static_com_protos_message_MessageEnum_descriptor;
      }

      public MessageEnum getDefaultInstanceForType() {
        return MessageEnum.getDefaultInstance();
      }

      public MessageEnum build() {
        MessageEnum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MessageEnum buildPartial() {
        MessageEnum result = new MessageEnum(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MessageEnum) {
          return mergeFrom((MessageEnum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MessageEnum other) {
        if (other == MessageEnum.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MessageEnum parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MessageEnum) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:com.protos.message.MessageEnum)
    }

    // @@protoc_insertion_point(class_scope:com.protos.message.MessageEnum)
    private static final MessageEnum DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MessageEnum();
    }

    public static MessageEnum getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageEnum>
        PARSER = new com.google.protobuf.AbstractParser<MessageEnum>() {
      public MessageEnum parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MessageEnum(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageEnum> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MessageEnum> getParserForType() {
      return PARSER;
    }

    public MessageEnum getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_protos_message_MessageEnum_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_protos_message_MessageEnum_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\rmessage.proto\022\022com.protos.message\"\235t\n\013" +
      "MessageEnum\"\215t\n\tMessageID\022\014\n\010ZeroTest\020\000\022" +
      "\r\n\010FolatMsg\020\351\007\022\r\n\010AlertMsg\020\352\007\022\r\n\010HeartRE" +
      "Q\020\353\007\022\r\n\010HeartACK\020\354\007\022\021\n\014ExceptionREQ\020\355\007\022\021" +
      "\n\014ExceptionACK\020\356\007\022\030\n\023StopServerNoticeACK" +
      "\020\357\007\022\017\n\nInitSocket\020\360\007\022\r\n\010GetVInfo\020\361\007\022\025\n\020C" +
      "lientTestLogREQ\020\320\017\022\024\n\017LoginAccountREQ\020\321\017" +
      "\022\024\n\017LoginAccountACK\020\322\017\022\025\n\020CreateAccountR" +
      "EQ\020\323\017\022\025\n\020CreateAccountACK\020\324\017\022\026\n\021GetAccou" +
      "ntCoedREQ\020\325\017\022\033\n\026GetPageServerConfigREQ\020\326",
      "\017\022\027\n\022QxCreateAccountREQ\020\327\017\022\025\n\020AntiAddict" +
      "ionREQ\020\330\017\022 \n\033AgainVerifyAntiAddictionREQ" +
      "\020\331\017\022\021\n\014LoginGameREQ\020\271\027\022\021\n\014LoginGameACK\020\272" +
      "\027\022\034\n\027RandomCreateNickNameREQ\020\273\027\022\025\n\017Creat" +
      "ePlayerREQ\020\244\215\006\022\025\n\017CreatePlayerACK\020\245\215\006\022\024\n" +
      "\016LoginPlayerREQ\020\241\215\006\022\024\n\016LoginPlayerACK\020\242\215" +
      "\006\022\024\n\016PlayerLoginOut\020\243\215\006\022\026\n\020FormationInfo" +
      "ACK\020\246\215\006\022\027\n\021HeroAttaributeACK\020\247\215\006\022\031\n\023Hero" +
      "UpdateActionACK\020\250\215\006\022\025\n\017ShowOtherPlayer\020\251" +
      "\215\006\022\027\n\021HeroAttaributeREQ\020\252\215\006\022\030\n\022Formation",
      "UpdateREQ\020\253\215\006\022\025\n\017UpdatePlayerACK\020\254\215\006\022\016\n\010" +
      "GmCmdREQ\020\255\215\006\022\020\n\nDelHeroREQ\020\256\215\006\022\025\n\017GrowPo" +
      "intDesREQ\020\257\215\006\022\025\n\017GrowPointDesACK\020\260\215\006\022\023\n\r" +
      "StamtnaBuyREQ\020\261\215\006\022\023\n\rStamtnaBuyACK\020\262\215\006\022\036" +
      "\n\030DismissHeroRebateItemREQ\020\263\215\006\022\036\n\030Dismis" +
      "sHeroRebateItemACK\020\264\215\006\022\031\n\023InitPlayerFini" +
      "shACK\020\265\215\006\022\032\n\024ShieldOtherPlayerREQ\020\305\215\006\022\032\n" +
      "\024ShieldOtherPlayerACK\020\306\215\006\022\035\n\027ShieldRidin" +
      "gPetSkillREQ\020\307\215\006\022\020\n\nPaySuccACK\020\310\215\006\022\026\n\020Fi" +
      "ghtExpediteREQ\020\311\215\006\022\026\n\020FightExpediteACK\020\312",
      "\215\006\022\025\n\017AllItemInfosACK\020\261\333\006\022\026\n\020EquipClothi" +
      "ngREQ\020\262\333\006\022\030\n\022UnEquipClothingREQ\020\263\333\006\022\032\n\024A" +
      "utoEquipClothingREQ\020\264\333\006\022\033\n\025UnAllEquipClo" +
      "thingREQ\020\265\333\006\022\027\n\021ItemInfoUpdateACK\020\266\333\006\022\026\n" +
      "\020ItemAdminInfoACK\020\267\333\006\022\021\n\013ItemDropREQ\020\270\333\006" +
      "\022\020\n\nItemUseREQ\020\271\333\006\022\022\n\014ItemMergeREQ\020\272\333\006\022\022" +
      "\n\014ItemSplitREQ\020\273\333\006\022\021\n\013ItemOpenREQ\020\274\333\006\022\027\n" +
      "\021ItemUpdateGirdACK\020\275\333\006\022\026\n\020ItemShareLookR" +
      "EQ\020\276\333\006\022\026\n\020ItemShareLookACK\020\277\333\006\022\021\n\013ItemSe" +
      "llREQ\020\300\333\006\022\021\n\013ItemHeroACK\020\301\333\006\022\023\n\rItemHece",
      "ngREQ\020\303\333\006\022\022\n\014ItemClearREQ\020\304\333\006\022\023\n\rSkillIn" +
      "fosACK\020\301\251\007\022\023\n\rStudySkillREQ\020\302\251\007\022\021\n\013FixSk" +
      "illREQ\020\303\251\007\022\030\n\022SwitchoverSkillREQ\020\304\251\007\022\033\n\025" +
      "EnableSubjoinSkillREQ\020\305\251\007\022\033\n\025EnableSubjo" +
      "inSkillACK\020\306\251\007\022\021\n\013TaskInitACK\020\321\367\007\022\022\n\014Tas" +
      "kGuideREQ\020\322\367\007\022\023\n\rTaskAcceptREQ\020\323\367\007\022\021\n\013Ta" +
      "skGiveREQ\020\324\367\007\022\025\n\017TaskComPleteREQ\020\325\367\007\022\021\n\013" +
      "TaskTalkREQ\020\326\367\007\022\024\n\016TaskCollectREQ\020\327\367\007\022\023\n" +
      "\rTaskUpdataACK\020\330\367\007\022\021\n\013TaskStepREQ\020\331\367\007\022\022\n" +
      "\014TaskResetREQ\020\332\367\007\022\031\n\023FreshCollectTaskREQ",
      "\020\333\367\007\022\023\n\rFriendListACK\020\341\305\010\022\022\n\014AddFriendRE" +
      "Q\020\342\305\010\022\021\n\013AddBlackREQ\020\343\305\010\022\022\n\014DelFriendREQ" +
      "\020\344\305\010\022\025\n\017SwitchFriendREQ\020\345\305\010\022\023\n\rFriendInf" +
      "oREQ\020\346\305\010\022\030\n\022FriendSignitureREQ\020\347\305\010\022\026\n\020Fr" +
      "iendPrivateREQ\020\350\305\010\022\023\n\rFriendListREQ\020\351\305\010\022" +
      "\031\n\023FriendInfoUpdateACK\020\352\305\010\022\026\n\020FriendPriv" +
      "ateACK\020\353\305\010\022\026\n\020FriendGetInfoREQ\020\354\305\010\022\026\n\020Fr" +
      "iendGetInfoACK\020\355\305\010\022\025\n\017FriendOnlineACK\020\356\305" +
      "\010\022\030\n\022FriendAttentionACK\020\357\305\010\022\030\n\022FriendBle" +
      "ssInfoACK\020\360\305\010\022\031\n\023FriendBlessInfosACK\020\361\305\010",
      "\022\032\n\024FriendTrendUpdateACK\020\362\305\010\022\033\n\025FriendCo" +
      "ngratUpateACK\020\363\305\010\022\026\n\020FriendCongratACK\020\364\305" +
      "\010\022\032\n\024FriendTrendDeleteACK\020\365\305\010\022\025\n\017DoubleF" +
      "riendACK\020\366\305\010\022\021\n\013MenuInfoACK\020\361\223\t\022\025\n\017Activ" +
      "ityOpenACK\020\362\223\t\022\025\n\017LeveMenuInfoACK\020\363\223\t\022\024\n" +
      "\016OpenMenuWinACK\020\364\223\t\022\022\n\014MenuBlinkACK\020\365\223\t\022" +
      "\031\n\023MenuRedDotUpdateREQ\020\366\223\t\022\023\n\rCreateTeam" +
      "REQ\020\202\342\t\022\022\n\014EnterTeamREQ\020\203\342\t\022\022\n\014LeaveTeam" +
      "REQ\020\204\342\t\022\021\n\013TeamInfoACK\020\205\342\t\022\022\n\014LeaveTeamA" +
      "CK\020\206\342\t\022\034\n\026TeamRransferCaptainREQ\020\207\342\t\022\034\n\026",
      "TeamRransferCaptainACK\020\210\342\t\022\021\n\013TeamKickRE" +
      "Q\020\211\342\t\022\021\n\013TeamKickACK\020\212\342\t\022\026\n\020TeamListInfo" +
      "rREQ\020\213\342\t\022\026\n\020TeamListInforACK\020\214\342\t\022\024\n\016Disb" +
      "andTeamREQ\020\215\342\t\022\024\n\016DisbandTeamACK\020\216\342\t\022!\n\033" +
      "TeamMemberFightPowerSyncACK\020\217\342\t\022\035\n\027Adjus" +
      "tTeamMentorSiteREQ\020\220\342\t\022\035\n\027UpdateTeamFigh" +
      "tSpeedREQ\020\221\342\t\022\035\n\027UpdateTeamFightSpeedACK" +
      "\020\222\342\t\022\025\n\017JointoTeamFbREQ\020\351\351\t\022\024\n\016TeamFbFig" +
      "htREQ\020\352\351\t\022\023\n\rTeamFbExitREQ\020\353\351\t\022\022\n\014TeamFb" +
      "BuyREQ\020\354\351\t\022\030\n\022TeamFbSceneInfoACK\020\355\351\t\022\023\n\r",
      "OpenTeamFbREQ\020\356\351\t\022\023\n\rTeamFbInfoACK\020\357\351\t\022\030" +
      "\n\022TeamFbCleanInfoREQ\020\360\351\t\022\024\n\016SweepTeamFbR" +
      "EQ\020\361\351\t\022!\n\033TeamDeputyCleanFightInfoACK\020\362\351" +
      "\t\022\035\n\027TeamDeputyCleanStateACK\020\363\351\t\022\024\n\016Emai" +
      "lStatusACK\020\221\260\n\022\023\n\rEmailInfosREQ\020\222\260\n\022\023\n\rE" +
      "mailInfosACK\020\223\260\n\022\022\n\014EmailSendREQ\020\224\260\n\022\025\n\017" +
      "EmailOneInfoACK\020\225\260\n\022\024\n\016EmailDeleteREQ\020\226\260" +
      "\n\022\022\n\014EmailReadREQ\020\227\260\n\022\031\n\023EmailGetAttache" +
      "dREQ\020\230\260\n\022\024\n\016GetRankPageREQ\020\241\376\n\022\024\n\016GetRan" +
      "kSelfREQ\020\242\376\n\022\024\n\016GetRankSelfACK\020\243\376\n\022\024\n\016Ge",
      "tRankPageACK\020\244\376\n\022\024\n\016JewelInsertREQ\020\261\314\013\022\025" +
      "\n\017JewelTakeoffREQ\020\262\314\013\022\025\n\017EquipJewelUpREQ" +
      "\020\263\314\013\022\030\n\022EquipJewelAllUpREQ\020\264\314\013\022\022\n\014JewelD" +
      "ownREQ\020\265\314\013\022\017\n\tJeweUpREQ\020\266\314\013\022\020\n\nJewelUpAC" +
      "K\020\267\314\013\022\022\n\014JewelDownACK\020\270\314\013\022\025\n\017EquipJewelU" +
      "pACK\020\271\314\013\022\024\n\016JewelUpdageACK\020\272\314\013\022\025\n\017EquipU" +
      "pgradeREQ\020\273\314\013\022\031\n\023EquipUpgradeManyREQ\020\274\314\013" +
      "\022\030\n\022EquipUpgradeAllREQ\020\275\314\013\022\023\n\rEquipForge" +
      "REQ\020\276\314\013\022\025\n\017EquipUpgradeACK\020\300\314\013\022\024\n\016EquipF" +
      "orageACK\020\301\314\013\022\021\n\013ChatInfoACK\020\301\232\014\022\023\n\rChatN",
      "oticeACK\020\302\232\014\022\021\n\013ChatInfoREQ\020\303\232\014\022\022\n\014OpenG" +
      "uildREQ\020\251\242\014\022\024\n\016CreateGuildREQ\020\252\242\014\022\023\n\rApl" +
      "lyGuildREQ\020\253\242\014\022\023\n\rCheckGuildREQ\020\254\242\014\022\024\n\016I" +
      "nviteGuildREQ\020\255\242\014\022\030\n\022SendInviteGuildREQ\020" +
      "\256\242\014\022\025\n\017AppointGuildREQ\020\257\242\014\022\026\n\020AbdicateGu" +
      "ildREQ\020\260\242\014\022\022\n\014KickGuildREQ\020\261\242\014\022\022\n\014ExitGu" +
      "ildREQ\020\262\242\014\022\020\n\nUpGuildREQ\020\263\242\014\022\022\n\014FuLiGuil" +
      "dREQ\020\264\242\014\022\025\n\017BuyItemGuildREQ\020\267\242\014\022\023\n\rEvent" +
      "GuildREQ\020\271\242\014\022\027\n\021OtherInfoGuildREQ\020\272\242\014\022\030\n" +
      "\022SaveNoticeGuildREQ\020\273\242\014\022\024\n\016DonateGuildRE",
      "Q\020\274\242\014\022\022\n\014ExitGuildACK\020\275\242\014\022\022\n\014GuildInfoAC" +
      "K\020\276\242\014\022\024\n\016InviteGuildACK\020\277\242\014\022\031\n\023ApplyInvi" +
      "teGuildACK\020\300\242\014\022\026\n\020BundInfoGuildACK\020\301\242\014\022\026" +
      "\n\020ShopInfoGuildACK\020\302\242\014\022\027\n\021LevelInfoGuild" +
      "ACK\020\304\242\014\022\027\n\021GuildFarmEnterREQ\020\215\243\014\022\027\n\021Guil" +
      "dFarmEnterACK\020\216\243\014\022\027\n\021GuildFarmPlantREQ\020\217" +
      "\243\014\022\026\n\020GuildFarmWorkREQ\020\220\243\014\022\033\n\025GuildFarmE" +
      "radicateREQ\020\221\243\014\022\037\n\031GuildFarmPickVegetabl" +
      "eREQ\020\222\243\014\022\034\n\026GuildFarmPlayerDataREQ\020\223\243\014\022\034" +
      "\n\026GuildFarmPlayerDataACK\020\224\243\014\022\034\n\026GuildFar",
      "mExpandLandREQ\020\225\243\014\022\020\n\nBuyMallREQ\020\221\252\014\022\024\n\016" +
      "PayInfoListREQ\020\222\252\014\022\024\n\016PayInfoListACK\020\223\252\014" +
      "\022\016\n\010WxPayREQ\020\224\252\014\022\016\n\010WxPayACK\020\225\252\014\022\026\n\020BuyA" +
      "ctiveMallREQ\020\226\252\014\022\016\n\010QxPayREQ\020\227\252\014\022\016\n\010QxPa" +
      "yACK\020\230\252\014\022\016\n\010QxPayWeb\020\231\252\014\022\017\n\tZfbPayREQ\020\232\252" +
      "\014\022\017\n\tSDKPayREQ\020\233\252\014\022\017\n\tSDKPayACK\020\234\252\014\022\022\n\014S" +
      "DKPaySucREQ\020\235\252\014\022\022\n\014SDKPaySucACK\020\236\252\014\022\023\n\rA" +
      "ctiveGiftACK\020\371\261\014\022\020\n\nGetGiftREQ\020\372\261\014\022\033\n\025Ge" +
      "tOnLineGiftInfosREQ\020\373\261\014\022\033\n\025GetOnLineGift" +
      "InfosACK\020\374\261\014\022\033\n\025GetOnLineGiftAwardREQ\020\375\261",
      "\014\022\021\n\013SignOpenREQ\020\204\262\014\022\017\n\tSignInREQ\020\205\262\014\022\022\n" +
      "\014SignPatchREQ\020\206\262\014\022\023\n\rGetSignGifREQ\020\207\262\014\022\021" +
      "\n\013SignOpenACK\020\210\262\014\022\030\n\022SignDaysLotteryREQ\020" +
      "\211\262\014\022\033\n\025GetSignDaysLotteryREQ\020\212\262\014\022\033\n\025GetS" +
      "ignDaysLotteryACK\020\213\262\014\022\030\n\022SignDaysLottery" +
      "ACK\020\214\262\014\022\032\n\024MySignDaysLotteryACK\020\215\262\014\022\025\n\017E" +
      "xchanCopperREQ\020\216\262\014\022\025\n\017ExchanCopperACK\020\217\262" +
      "\014\022\024\n\016JihuomaInfoREQ\020\220\262\014\022\027\n\021GetJihuomaInf" +
      "oREQ\020\221\262\014\022\024\n\016JihuomaInfoACK\020\222\262\014\022\027\n\021GetJih" +
      "uomaInfoACK\020\223\262\014\022\035\n\027GetBindPhoneGiftInfoR",
      "EQ\020\224\262\014\022\035\n\027GetBindPhoneGiftInfoACK\020\225\262\014\022\033\n" +
      "\025DownFinishGiftInfoREQ\020\226\262\014\022\035\n\027OpenServer" +
      "ActiveInfoREQ\020\355\265\014\022\035\n\027OpenServerActiveInf" +
      "oACK\020\356\265\014\022\037\n\031OpenServerActiveInvestREQ\020\357\265" +
      "\014\022\"\n\034GetOpenServerActiveRewardREQ\020\360\265\014\022\032\n" +
      "\024OpenActiveBuyGiftREQ\020\361\265\014\022\033\n\025RechargeAct" +
      "iveInfoREQ\020\321\266\014\022\033\n\025RechargeActiveInfoACK\020" +
      "\322\266\014\022 \n\032GetRechargeActiveRewardREQ\020\323\266\014\022\022\n" +
      "\014SmashEggsREQ\020\324\266\014\022\022\n\014SmashEggsACK\020\325\266\014\022\027\n" +
      "\021SubmitRaisePetREQ\020\326\266\014\022\021\n\013RaisePetACK\020\327\266",
      "\014\022\032\n\024BuySmashEggsCountREQ\020\330\266\014\022\033\n\025Recharg" +
      "eActiveMenuREQ\020\331\266\014\022\033\n\025RechargeActiveMenu" +
      "ACK\020\332\266\014\022\026\n\020MonthCardInfoREQ\020\333\266\014\022\026\n\020Month" +
      "CardInfoACK\020\334\266\014\022\034\n\026GetMonthCardDayGoldRE" +
      "Q\020\335\266\014\022\025\n\017EnterBossMapREQ\020\341\271\014\022\024\n\016ExitBoss" +
      "MapREQ\020\342\271\014\022\023\n\rAttackBossREQ\020\343\271\014\022\024\n\016BossC" +
      "learCdREQ\020\344\271\014\022\026\n\020BossEncouRageREQ\020\345\271\014\022\023\n" +
      "\rBossReviveREQ\020\346\271\014\022\024\n\016BossMapInfoACK\020\347\271\014" +
      "\022\026\n\020WorldBossInfoACK\020\350\271\014\022\037\n\031WorldBossPla" +
      "yerDieInfoACK\020\351\271\014\022\025\n\017EnterBossMapACK\020\352\271\014",
      "\022\031\n\023OpenBossInvasionREQ\020\305\272\014\022\031\n\023OpenBossI" +
      "nvasionACK\020\306\272\014\022\031\n\023ExitBossInvasionREQ\020\307\272" +
      "\014\022\033\n\025AttackBossInvasionREQ\020\310\272\014\022\037\n\031BossIn" +
      "vasionUpdateBossACK\020\311\272\014\022#\n\035BossInvasionU" +
      "pdateSkillNumACK\020\312\272\014\022\021\n\013QxzbJoinREQ\020\311\301\014\022" +
      "\017\n\tQxzbKcREQ\020\312\301\014\022\021\n\013QxzbRankREQ\020\313\301\014\022\021\n\013Q" +
      "xzbJoinACK\020\314\301\014\022\021\n\013QxzbRankACK\020\315\301\014\022\023\n\rKfQ" +
      "xzbJoinREQ\020\316\301\014\022\021\n\013KfQxzbKcREQ\020\317\301\014\022\023\n\rKfQ" +
      "xzbRankREQ\020\320\301\014\022\023\n\rKfQxzbJoinACK\020\321\301\014\022\023\n\rK" +
      "fQxzbRankACK\020\322\301\014\022\020\n\nVipGiftREQ\020\261\311\014\022\025\n\017Vi",
      "pDailyGiftREQ\020\262\311\014\022\024\n\016VipFunctionREQ\020\263\311\014\022" +
      "\020\n\nVipInfoACK\020\264\311\014\022\024\n\016VipFunctionACK\020\265\311\014\022" +
      "\024\n\016VipGiftInfoACK\020\266\311\014\022\027\n\021EnterCampFightR" +
      "EQ\020\231\321\014\022\026\n\020ExitCampFightREQ\020\232\321\014\022\035\n\027Attack" +
      "GuardCampFightREQ\020\233\321\014\022\033\n\025AttackPvpCampFi" +
      "ghtREQ\020\234\321\014\022\031\n\023CollectCampFightREQ\020\235\321\014\022\037\n" +
      "\031CollectHandinCampFightREQ\020\236\321\014\022\023\n\rCampGu" +
      "ardsACK\020\237\321\014\022\024\n\016CampFightCdACK\020\240\321\014\022\030\n\022Cam" +
      "pFightMemberACK\020\241\321\014\022\032\n\024CampFightMyPlayer" +
      "ACK\020\242\321\014\022\026\n\020CampFightRankACK\020\243\321\014\022\034\n\026CampF",
      "ightRankUpdateACK\020\244\321\014\022\027\n\021CampFightStateA" +
      "CK\020\245\321\014\022\025\n\017CampFightEndACK\020\246\321\014\022\023\n\rEnterFi" +
      "ghtACK\020\341\247\022\022\023\n\rEnterFightREQ\020\342\247\022\022\022\n\014HeroF" +
      "ightREQ\020\343\247\022\022\024\n\016FightReportACK\020\344\247\022\022\025\n\017Oth" +
      "erPkFightREQ\020\352\247\022\022\025\n\017OtherPkFightACK\020\353\247\022\022" +
      "\030\n\022AddFightingInfoACK\020\354\247\022\022\024\n\016FightCombat" +
      "REQ\020\355\247\022\022\023\n\rArenaEnterREQ\020\311\257\022\022\022\n\014ArenaExi" +
      "tREQ\020\312\257\022\022\024\n\016ArenaChangeREQ\020\313\257\022\022\027\n\021ArenaB" +
      "uyChangeREQ\020\314\257\022\022\025\n\017ArenaCleanCdREQ\020\315\257\022\022\031" +
      "\n\023ArenaFightReportREQ\020\316\257\022\022\031\n\023ArenaShareR",
      "eportREQ\020\317\257\022\022\035\n\027ArenaLookShareReportREQ\020" +
      "\320\257\022\022\025\n\017ArenaOpenBoxREQ\020\321\257\022\022\026\n\020ArenaRankI" +
      "nfoACK\020\322\257\022\022\027\n\021ArenaDailyInfoACK\020\323\257\022\022\025\n\017A" +
      "renaOpenBoxACK\020\324\257\022\022\020\n\nArenaCdACK\020\325\257\022\022\021\n\013" +
      "EnterMapACK\020\241\302\036\022\022\n\014SwitchMapREQ\020\242\302\036\022\r\n\007M" +
      "apMove\020\243\302\036\022\024\n\016PlayerLeaveMap\020\244\302\036\022\024\n\016Swit" +
      "chWorldREQ\020\245\302\036\022\025\n\017ScenePlayerInfo\020\254\302\036\022\032\n" +
      "\024ScenePlayerUpdataACK\020\255\302\036\022\026\n\020MapAutochth" +
      "onous\020\256\302\036\022\022\n\014QuickMoveACK\020\257\302\036\022\022\n\014MapOthe" +
      "rMove\020\260\302\036\022\037\n\031UpdateSceneMonsterInfoACK\020\261",
      "\302\036\022\030\n\022MapPlayerActionREQ\020\262\302\036\022\030\n\022MapPlaye" +
      "rActionACK\020\263\302\036\022\034\n\026UpdateSceneMonstersACK" +
      "\020\264\302\036\022\021\n\013OnMyMapMove\020\265\302\036\022\022\n\014FireWorksACK\020" +
      "\266\302\036\022\025\n\017ActivityOpenREQ\020\261\220\037\022\025\n\017ActivityIn" +
      "foACK\020\262\220\037\022\030\n\022AssistantRewardREQ\020\263\220\037\022\033\n\025A" +
      "ctivityInfoUpdateACK\020\264\220\037\022\030\n\022AchievementO" +
      "penREQ\020\231\230\037\022\030\n\022AchievementInfoACK\020\232\230\037\022\032\n\024" +
      "AchievementRewardREQ\020\233\230\037\022\036\n\030AchievementI" +
      "nfoUpdateACK\020\234\230\037\022\030\n\022DeputyGroupInfoREQ\020\301" +
      "\336\037\022\024\n\016DeputyEnterREQ\020\302\336\037\022\033\n\025DeputyClickM",
      "onsterREQ\020\303\336\037\022\023\n\rDeputyExitREQ\020\304\336\037\022\023\n\rDe" +
      "putyInfoREQ\020\305\336\037\022\030\n\022DeputyCleanInfoREQ\020\306\336" +
      "\037\022\031\n\023DeputyCleanStartREQ\020\307\336\037\022\031\n\023DeputyCl" +
      "eanCloseREQ\020\310\336\037\022\034\n\026DeputyCleanAutoSellRE" +
      "Q\020\311\336\037\022\032\n\024DeputyCleanCancelREQ\020\312\336\037\022\035\n\027Dep" +
      "utyCleanGoldSpeedREQ\020\313\336\037\022\"\n\034DeputyCleanG" +
      "oldSpeedCheckREQ\020\314\336\037\022\023\n\rDeputyInfoACK\020\315\336" +
      "\037\022\030\n\022DeputyCleanInfoACK\020\316\336\037\022\024\n\016DeputyEnt" +
      "erACK\020\317\336\037\022\033\n\025DeputyMonsterStateACK\020\320\336\037\022\027" +
      "\n\021DeputyBossInfoACK\020\321\336\037\022\030\n\022DeputyStateIn",
      "foACK\020\322\336\037\022\030\n\022DeputyGroupInfoACK\020\323\336\037\022\031\n\023D" +
      "eputyCleanStateACK\020\324\336\037\022\035\n\027DeputyCleanFig" +
      "htInfoACK\020\325\336\037\022\026\n\020EmigratedInfoREQ\020\251\346\037\022\026\n" +
      "\020EmigratedInfoACK\020\252\346\037\022\027\n\021EnterEmigratedR" +
      "EQ\020\253\346\037\022\035\n\027EmigrateClickMonsterREQ\020\254\346\037\022\025\n" +
      "\017EmigrateExitREQ\020\255\346\037\022\027\n\021EnterEmigratedAC" +
      "K\020\256\346\037\022\026\n\020EmigrateResetREQ\020\257\346\037\022\031\n\023Emigrat" +
      "eBuyResetREQ\020\260\346\037\022\025\n\017OpenDieTowerREQ\020\221\356\037\022" +
      "\025\n\017OpenDieTowerACK\020\222\356\037\022\026\n\020DieTowerFightR" +
      "EQ\020\223\356\037\022\026\n\020DieTowerResetREQ\020\224\356\037\022\031\n\023DieTow",
      "erBuyResetREQ\020\225\356\037\022\025\n\017DieTowerRankREQ\020\226\356\037" +
      "\022\025\n\017DieTowerRankACK\020\227\356\037\022\027\n\021DieTowerRewar" +
      "dACK\020\230\356\037\022\032\n\024DieTowerAutoFightREQ\020\231\356\037\022\032\n\024" +
      "DieTowerAutoFightACK\020\232\356\037\022\030\n\022DieTowerComA" +
      "utoREQ\020\233\356\037\022\030\n\022DieTowerComAutoACK\020\234\356\037\022\024\n\016" +
      "HeroPubInfoREQ\020\321\254 \022\027\n\021HeroPubLotteryREQ\020" +
      "\322\254 \022\027\n\021HeroPubRecruitREQ\020\323\254 \022\024\n\016HeroPubI" +
      "nfoACK\020\324\254 \022\027\n\021HeroPubLotteryACK\020\325\254 \022\036\n\030H" +
      "eroPubUpZoariumSkillREQ\020\326\254 \022\036\n\030HeroPubUp" +
      "ZoariumSkillACK\020\327\254 \022\027\n\021HeroPubRecruitACK",
      "\020\330\254 \022\017\n\tHeroZsREQ\020\331\254 \022\017\n\tHeroZsACK\020\332\254 \022\017" +
      "\n\tHeroTpREQ\020\333\254 \022\017\n\tHeroTpACK\020\334\254 \022\017\n\tHero" +
      "GzREQ\020\335\254 \022\017\n\tHeroGzACK\020\336\254 \022\017\n\tHeroHlREQ\020" +
      "\337\254 \022\017\n\tHeroHlACK\020\340\254 \022\026\n\020GetHeroTpInfoREQ" +
      "\020\341\254 \022\026\n\020GetHeroTpInfoACK\020\342\254 \022\026\n\020GetHeroG" +
      "zInfoREQ\020\343\254 \022\026\n\020GetHeroGzInfoACK\020\344\254 \022\023\n\r" +
      "HeroSaveGzREQ\020\345\254 \022\023\n\rHeroSaveGzACK\020\346\254 \022\023" +
      "\n\rHeroFollowREQ\020\347\254 \022\025\n\017HeroPlayerZsREQ\020\350" +
      "\254 \022\025\n\017HeroPlayerZsACK\020\351\254 \022\020\n\nHeroExpREQ\020" +
      "\352\254 \022\020\n\nHeroExpACK\020\353\254 \022\027\n\021HeroChangeNameR",
      "EQ\020\354\254 \022\027\n\021HeroChangeNameACK\020\355\254 \022\026\n\020HeroR" +
      "estraintREQ\020\356\254 \022\026\n\020GetHeroXlInfoREQ\020\357\254 \022" +
      "\026\n\020GetHeroXlInfoACK\020\361\254 \022\017\n\tHeroXlREQ\020\362\254 " +
      "\022\023\n\rHeroSaveXlREQ\020\363\254 \022\026\n\020HeroAwakeningRE" +
      "Q\020\364\254 \022\026\n\020HeroAwakeningACK\020\365\254 \022\021\n\013HeroLoc" +
      "kREQ\020\366\254 \022\030\n\022GetOfferingInfoREQ\020\367\254 \022\025\n\017Of" +
      "feringInfoACK\020\370\254 \022\030\n\022SummonSixCarPetREQ\020" +
      "\371\254 \022\024\n\016SkillAdvanceEQ\020\372\254 \022\030\n\022GradeFright" +
      "InfoREQ\020\341\372 \022\030\n\022GradeFrightInfoACK\020\342\372 \022\022\n" +
      "\014OpenTitleREQ\020\361\310!\022\021\n\013UseTitleREQ\020\362\310!\022\021\n\013",
      "PutTitleREQ\020\363\310!\022\020\n\nUpTitleREQ\020\364\310!\022\025\n\017All" +
      "TitleInfoACK\020\365\310!\022\021\n\013OpenHuntREQ\020\201\227\"\022\021\n\013O" +
      "penHuntACK\020\202\227\"\022\022\n\014EquipHuntREQ\020\203\227\"\022\017\n\tUn" +
      "HuntREQ\020\204\227\"\022\024\n\016UpgradeHuntREQ\020\205\227\"\022\017\n\tUpH" +
      "untREQ\020\206\227\"\022\021\n\013DownHuntREQ\020\207\227\"\022\017\n\tDoHuntR" +
      "EQ\020\210\227\"\022\025\n\017ExchangeHuntREQ\020\211\227\"\022\024\n\016Swallow" +
      "HuntREQ\020\212\227\"\022\025\n\017OpenGridHuntREQ\020\213\227\"\022\023\n\rPi" +
      "ckUpHuntREQ\020\214\227\"\022\026\n\020OpenCharacterREQ\020\351\236\"\022" +
      "\026\n\020OpenCharacterACK\020\352\236\"\022\030\n\022SummonCharact" +
      "erREQ\020\353\236\"\022\030\n\022SummonCharacterACK\020\354\236\"\022\030\n\022C",
      "hooseCharacterREQ\020\355\236\"\022\030\n\022ChooseCharacter" +
      "ACK\020\356\236\"\022\034\n\026SwallowDanCharacterREQ\020\357\236\"\022\034\n" +
      "\026SwallowDanCharacterACK\020\360\236\"\022\030\n\022UnloadCha" +
      "racterREQ\020\361\236\"\022\030\n\022UnloadCharacterACK\020\362\236\"\022" +
      "\027\n\021HeroCharactersREQ\020\363\236\"\022\027\n\021HeroCharacte" +
      "rsACK\020\364\236\"\022\027\n\021EquipCharacterREQ\020\365\236\"\022\027\n\021Eq" +
      "uipCharacterACK\020\366\236\"\022\026\n\020CharacterLockREQ\020" +
      "\367\236\"\022\021\n\013SkinInfoREQ\020\321\246\"\022\021\n\013SkinInfoACK\020\322\246" +
      "\"\022\027\n\021UseOrNoUseSkinREQ\020\323\246\"\022\023\n\rGetElfInfo" +
      "REQ\020\324\246\"\022\023\n\rGetElfInfoACK\020\325\246\"\022\023\n\rToFightE",
      "lfREQ\020\326\246\"\022\020\n\nFeedElfREQ\020\327\246\"\022\027\n\021ZoosFight" +
      "EnterREQ\020\301\317$\022\027\n\021ZoosFightEnterACK\020\302\317$\022\023\n" +
      "\rGrangeRankREQ\020\341\334*\022\023\n\rGrangeRankACK\020\342\334*\022" +
      "\023\n\rGrangeShopREQ\020\343\334*\022\025\n\017GrangeBossHPACK\020" +
      "\344\334*\022\024\n\016GrangeFightREQ\020\345\334*\022\024\n\016GrangeScore" +
      "ACK\020\346\334*\022\027\n\021GrangeShopInfoREQ\020\347\334*\022\027\n\021Gran" +
      "geShopInfoACK\020\350\334*\022\020\n\nCrossLogin\020\241\3676\022\024\n\016C" +
      "rossPlayerOff\020\242\3676\022\017\n\tCrossInfo\020\243\3676\022\027\n\021Cr" +
      "ossActivityOpen\020\244\3676\022\026\n\020CrossFightStatus\020" +
      "\245\3676\022\027\n\021CrossUpdataPlayer\020\246\3676\022\025\n\017CrossPla",
      "yerInfo\020\247\3676\022\020\n\nCrossEmail\020\250\3676\022\021\n\013CrossSt" +
      "atus\020\251\3676\022\024\n\016CrossServerMap\020\252\3676\022\022\n\014CrossM" +
      "apMove\020\253\3676\022\027\n\021PlayerDiceDataREQ\020\261\3057\022\027\n\021P" +
      "layerDiceDataACK\020\262\3057\022\032\n\024PlayerRollTheDic" +
      "eREQ\020\263\3057\022\032\n\024PlayerRollTheDiceACK\020\264\3057\022\027\n\021" +
      "PlayerDiceSiteACK\020\265\3057\022\032\n\024PlayerDiceHisto" +
      "ryACK\020\266\3057\022 \n\032PlayerDiceChallengeBossREQ\020" +
      "\267\3057\022\032\n\024HolidayPuzzleDataREQ\020\231\3157\022\032\n\024Holid" +
      "ayPuzzleDataACK\020\232\3157\022!\n\033HolidayPuzzleAcce" +
      "ptAwardREQ\020\233\3157\022!\n\033HolidayPuzzleAcceptAwa",
      "rdACK\020\234\3157\022\033\n\025FestivalActiveInfoREQ\020\235\3157\022\033" +
      "\n\025FestivalActiveInfoACK\020\236\3157\022\020\n\nDrawPetRE" +
      "Q\020\237\3157\022 \n\032GetFestivalActiveRewardREQ\020\240\3157\022" +
      "$\n\036HolidayPuzzleAccomplishTaskREQ\020\241\3157\022$\n" +
      "\036HolidayPuzzleAccomplishTaskACK\020\242\3157\022\036\n\030H" +
      "olidayLimitGiftEnterREQ\020\243\3157\022\036\n\030HolidayLi" +
      "mitGiftEnterACK\020\244\3157\022\034\n\026HolidayLimitGiftB" +
      "uyREQ\020\245\3157\022\034\n\026HolidayLimitGiftBuyACK\020\246\3157\022" +
      "\033\n\025AnotherWorldGetActREQ\020\201\3257\022\033\n\025AnotherW" +
      "orldGetActACK\020\202\3257\022\036\n\030AnotherWorldChallen",
      "geREQ\020\203\3257\022\036\n\030AnotherWorldChallengeACK\020\204\325" +
      "7\022\031\n\023AnotherWorldShopREQ\020\205\3257\022\026\n\020Exchange" +
      "StoneREQ\020\206\3257\022\031\n\023GetActivityAwardREQ\020\301\2238\022" +
      "\026\n\020ActClinetInfoACK\020\302\2238\022\032\n\024GetActivityAw" +
      "ard2REQ\020\303\2238\022\027\n\021SmashEggsTotalREQ\020\304\2238\022\025\n\017" +
      "MenuTypeListACK\020\305\2238\022\025\n\017ActivityInfoREQ\020\306" +
      "\2238\022\025\n\017LoadRuneItemREQ\020\251\2338\022\027\n\021NnloadRuneI" +
      "temREQ\020\252\2338\022\031\n\023HeroRuneItemInfoREQ\020\253\2338\022\031\n" +
      "\023HeroRuneItemInfoACK\020\254\2338\022\025\n\017SellRuneItem" +
      "REQ\020\255\2338\022\030\n\022OpenRuneStorageREQ\020\256\2338\022\034\n\026Loa",
      "dRuneItemSucceedACK\020\257\2338\022\027\n\021SwitchRuneSui" +
      "tREQ\020\260\2338\022\021\n\013LockRuneREQ\020\261\2338\022\024\n\016NumCurren" +
      "cyACK\020\221\2438\022\031\n\023FightSportsTowerREQ\020\224\2438\022\035\n\027" +
      "SportsTowerCrossRankREQ\020\225\2438\022\035\n\027SportsTow" +
      "erCrossRankACK\020\226\2438\022\030\n\022SportsTowerTop3ACK" +
      "\020\227\2438\022\022\n\014UseHaloIdREQ\020\230\2438\022\027\n\021UseItemGetHa" +
      "loREQ\020\231\2438\022\021\n\013HaloInfoACK\020\232\2438\022\023\n\rHeroDndC" +
      "anREQ\020\233\2438\022\023\n\rHeroDndCanACK\020\234\2438\022\026\n\020HeroDn" +
      "dUpdateREQ\020\235\2438\022\030\n\022SportsTowerHeroREQ\020\237\2438" +
      "\022\030\n\022SportsTowerHeroACK\020\240\2438\022\024\n\016LookHeroDn",
      "dACK\020\236\2438\022\024\n\016LookHeroDndREQ\020\241\2438\022\030\n\022LookHe" +
      "roDndDissREQ\020\242\2438\022\030\n\022LookHeroDndDissACK\020\243" +
      "\2438\022\027\n\021HeroDndMapInfoREQ\020\244\2438\022\027\n\021HeroDndMa" +
      "pInfoACK\020\245\2438\022\026\n\020HeroNudePowerREQ\020\246\2438\022\026\n\020" +
      "HeroNudePowerACK\020\247\2438\022\027\n\021HeroStudySkillRE" +
      "Q\020\250\2438\022\036\n\030SportTrialTalentAddLvREQ\020\251\2438\022\031\n" +
      "\023SportTrialTalentREQ\020\252\2438\022\031\n\023SportTrialTa" +
      "lentACK\020\253\2438\022\025\n\017ElfKingFightREQ\020\254\2438\022\031\n\023El" +
      "fKingCrossRankREQ\020\255\2438\022\031\n\023ElfKingCrossRan" +
      "kACK\020\256\2438\022\023\n\rGmWebLoginREQ\020\261\266<\022\030\n\022GmSendA",
      "llPlayerREQ\020\263\266<\022\031\n\023GmSendPlayerInfoREQ\020\264" +
      "\266<\022\024\n\016GmSendAllZxREQ\020\265\266<\022\024\n\016GmSendEmailR" +
      "EQ\020\266\266<\022\025\n\017GmSendNoticeREQ\020\267\266<\022\026\n\020GmSendN" +
      "oSpeakREQ\020\270\266<\022\024\n\016GmSendSpeakREQ\020\271\266<\022\034\n\026G" +
      "mSendForbidAccountREQ\020\272\266<\022\034\n\026GmSendQuery" +
      "RechargeREQ\020\273\266<\022\033\n\025GmSendLogoutPlayerREQ" +
      "\020\274\266<\022\030\n\022GmSendLogoutAllREQ\020\275\266<\022\027\n\021GmSend" +
      "RechargeREQ\020\276\266<\022\026\n\020GmSendVipInfoREQ\020\277\266<\022" +
      "\023\n\rGmSendDataREQ\020\300\266<\022\023\n\rGmSendDataACK\020\301\266" +
      "<\022\026\n\020GmSendVipInfoACK\020\302\266<\022\030\n\022GmDYChannel",
      "DataREQ\020\303\266<\022\030\n\022GmDYChannelDataACK\020\304\266<\022\021\n" +
      "\013GmWebCmdREQ\020\305\266<\022\027\n\021GmKuaishouDataREQ\020\306\266" +
      "<\022\026\n\020GmServerEmailREQ\020\307\266<\022\026\n\020GmServerEma" +
      "ilACK\020\310\266<\022\034\n\026GmDeleteServerEmailREQ\020\311\266<\022" +
      "\031\n\023GmChannelMonitorREQ\020\312\266<\022\027\n\021GmServerNo" +
      "ticeREQ\020\313\266<\022\035\n\027GmDeleteServerNoticeREQ\020\314" +
      "\266<\022\032\n\024GmOnlyChannelDataREQ\020\315\266<\022\033\n\025GmDele" +
      "teFakePlayerREQ\020\316\266<\022\031\n\023GmGetChannelTypeR" +
      "EQ\020\317\266<\022\031\n\023GmGetChannelTypeACK\020\320\266<\022\026\n\020GmL" +
      "oginNoticeREQ\020\321\266<\022\026\n\020GmLoginNoticeACK\020\322\266",
      "<\022\026\n\020GmBasisIPDataREQ\020\323\266<\022\033\n\025StopServerP" +
      "reserveREQ\020\324\266<\022\032\n\024HeroOneKeyRemouldREQ\020\325" +
      "\266<\022\026\n\020SceneResourceACK\020\326\266<\022\032\n\024SceneResou" +
      "rceHoldREQ\020\327\266<\022\033\n\025OpenResourceSnatchREQ\020" +
      "\330\266<\022\033\n\025OpenResourceSnatchACK\020\331\266<\022\034\n\026Reso" +
      "urceSnatchRwardREQ\020\332\266<\022\033\n\025ResourceSnatch" +
      "HeroREQ\020\333\266<\022\033\n\025ResourceSnatchHeroACK\020\334\266<" +
      "\022\034\n\026EnterPredictedTowerREQ\020\335\266<\022\034\n\026EnterP" +
      "redictedTowerACK\020\336\266<\022\034\n\026PredictedTowerFi" +
      "ghtREQ\020\337\266<\022\033\n\025PredictedTowerExitREQ\020\340\266<\022",
      "\033\n\025PredictedTowerRankREQ\020\341\266<\022\033\n\025Predicte" +
      "dTowerRankACK\020\342\266<\022\033\n\025PredictedTowerShopR" +
      "EQ\020\343\266<\022\033\n\025PredictedTowerExitACK\020\344\266<b\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_protos_message_MessageEnum_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_protos_message_MessageEnum_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_protos_message_MessageEnum_descriptor,
        new String[] { });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
